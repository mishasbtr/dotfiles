{
"version":3,
"file":"blaze-out/k8-opt/bin/cultural/integrations/chromeextensions/arttab/options/js_options.nodeps.js",
"lineCount":3492,
"mappings":"A;AAAA,IAAA,4BAAA;AC2B4B,QAAA,6BAAQ,CAAC,iBAAD,CAAQ;AAC1C,MAAI,sBAAQ,CAAZ;AACA,SAAO,QAAQ,EAAG;AAChB,WAAI,mBAAJ,GAAY,iBAAM,CAAA,MAAlB,GACS,CACL,KAAM,CAAA,CADD,EAEL,MAAO,iBAAA,CAAM,mBAAA,EAAN,CAFF,CADT,GAMS,CAAC,KAAM,CAAA,CAAP,CANT;AADgB,GAAlB;AAF0C;ACQ5C,IAAAA,4BAC4D,UAAxD,IAAsB,MAAO,OAAO,CAAA,gBAApC,GACA,MAAO,CAAA,cADP,GAEA,QAAQ,CAAC,mBAAD,EAAS,oBAAT,EAAmB,sBAAnB,CAA+B;AACrC,MAAI,mBAAJ,IAAc,KAAM,CAAA,SAApB,IAEsB,mBAFtB,IAEiC,MAAO,CAAA,SAFxC;AAGE,WAAO,mBAAP;AAHF;AAaA,qBAAA,CAAO,oBAAP,CAAA,GAAmB,sBAAW,CAAA,KAA9B;AACA,SAAO,mBAAP;AAfqC,CAH3C;ACFoB,QAAA,qBAAQ,CAAC,+BAAD,CAAe;AACrC,iCAAA,GAAkB,CAKpB,QALoB,IAKR,MAAO,WALC,IAKa,UALb,EAcpB,+BAdoB,EAgBpB,QAhBoB,IAgBR,MAAO,OAhBC,IAgBS,MAhBT,EAkBpB,QAlBoB,IAkBR,MAAO,KAlBC,IAkBO,IAlBP,EAoBpB,QApBoB,IAoBR,MAAO,OApBC,IAoBS,MApBT,CAAlB;AAsBJ,OAAK,IAAI,gBAAI,CAAb,EAAgB,aAAhB,GAAoB,+BAAgB,CAAA,MAApC,EAA4C,EAAE,aAA9C,CAAiD;AAC/C,QAAI,iBAAc,+BAAA,CAAgB,aAAhB,CAAlB;AAOA,QAAI,cAAJ,IAAmB,cAAA,CAAA,IAAnB,IAA0C,IAA1C;AACE,aAA+B,cAA/B;AADF;AAR+C;AAqBzC,QAAU,KAAJ,CAAU,2BAAV,CAAN;AA5CiC;AAsD3C,IAAAC,oBAAyBC,oBAAR,CAAkB,IAAlB,CAAjB;AC8BmB,QAAA,oBAAQ,CAAC,sEAAD,EAAS,2CAAT,CAAqC;AAC9D,MAAK,2CAAL;AAoBwE,KAAA,CAAA;AACxE,UAAI,2BAAcD,iBAAlB;AACI,4EAAA,GAlByB,sEAkBV,CAAA,KAAP,CAAa,GAAb,CAAR;AACJ,WAAK,IAAI,gDAAI,CAAb,EAAgB,6CAAhB,GAAoB,sEAAM,CAAA,MAA1B,GAAmC,CAAnC,EAAsC,6CAAA,EAAtC,CAA2C;AACzC,YAAI,2BAAM,sEAAA,CAAM,6CAAN,CAAV;AACA,YAAI,EAAE,wBAAF,IAAS,wBAAT,CAAJ;AAAmB,gBAAA,CAAA;AAAnB;AACA,gCAAA,GAAM,wBAAA,CAAI,wBAAJ,CAAN;AAHyC;AAKvC,4EAAA,GAAW,sEAAA,CAAM,sEAAM,CAAA,MAAZ,GAAqB,CAArB,CAAX;AACA,mDAAA,GAAO,wBAAA,CAAI,sEAAJ,CAAP;AACA,iDAAA,GA1BiC,2CA0B1B,CAAS,6CAAT,CAAP;AACA,iDAAJ,IAAY,6CAAZ,IAA4B,IAA5B,IAAoB,2CAApB,IACQD,yBAAR,CACI,wBADJ,EACS,sEADT,EACmB,CAAC,aAAc,CAAA,CAAf,EAAqB,SAAU,CAAA,CAA/B,EAAqC,MAAO,2CAA5C,CADnB,CADA;AAXwE;AApBxE;AAD8D;ACpFxDG,mBAAR,CAAiB,QAAjB,EAA2B,QAAQ,CAAC,gBAAD,CAAO;AA8CnB,UAAA,kBAAQ,CAAC,2BAAD,CAAkB;AAC7C,QAAI,IAAJ,YAAoB,iBAApB;AACE,YAAM,IAAI,SAAJ,CAAc,6BAAd,CAAN;AADF;AAGA,WAAQ,IAAI,cAAJ,CACJ,gBADI,IACa,2BADb,IACgC,EADhC,IACsC,GADtC,GAC4C,UAAA,EAD5C,EAEJ,2BAFI,CAAR;AAJ6C;AAtC7B,UAAA,eAAQ,CAAC,eAAD,EAAK,2BAAL,CAAsB;AAE9C,QAAK,CAAA,GAAL,GAA0B,eAA1B;AAMQH,6BAAR,CACI,IADJ,EACU,aADV,EAEI,CAAC,aAAc,CAAA,CAAf,EAAqB,SAAU,CAAA,CAA/B,EAAqC,MAAO,2BAA5C,CAFJ,CAAA;AAR8C;AAPhD,MAAI,gBAAJ;AAAU,WAAO,gBAAP;AAAV;AAsBA,gBAAY,CAAA,SAAU,CAAA,QAAtB,GAAiC,QAAQ,EAAG;AAC1C,WAAO,IAAK,CAAA,GAAZ;AAD0C,GAA5C;AAYA,MAAI,mBAAgB,gBAAhB,IAH0B,GAG1B,GAHU,IAAK,CAAA,MAAL,EAGV,KAHmC,CAGnC,IAA4C,GAAhD,EAGI,aAAU,CAHd;AAoBA,SAAO,iBAAP;AAvDwC,CAA1C,CAAA;AA0DQG,mBAAR,CAAiB,iBAAjB,EAAoC,QAAQ,CAAC,+BAAD,CAAO;AACjD,MAAI,+BAAJ;AAAU,WAAO,+BAAP;AAAV;AAEI,iCAAA,GAAiB,MAAA,CAAO,iBAAP,CAAjB;AAeJ,OATA,IAA0B,gBAAa,sHAAA,CAAA,KAAA,CAAA,GAAA,CAAvC,EASS,gBAAI,CAAb,EAAgB,aAAhB,GAAoB,aAAW,CAAA,MAA/B,EAAuC,aAAA,EAAvC,CAA4C;AAC1C,QAAI,mBAA0CF,iBAAR,CAAe,aAAA,CAAW,aAAX,CAAf,CAAtC;AAC6B,cAA7B,KAAI,MAAO,iBAAX,IACsD,UADtD,IACI,MAAO,iBAAc,CAAA,SAAd,CAAwB,+BAAxB,CADX,IAEUD,yBAAR,CAAuB,gBAAc,CAAA,SAArC,EAAgD,+BAAhD,EAAgE,CAC9D,aAAc,CAAA,CADgD,EAE9D,SAAU,CAAA,CAFoD,EAO9D,MAAO,QAAQ,EAAG;AAChB,aAAeI,4BAAR,CAAkCC,4BAAR,CAA0B,IAA1B,CAA1B,CAAP;AADgB,KAP4C,CAAhE,CAFF;AAF0C;AAiB5C,SAAO,+BAAP;AAnCiD,CAAnD,CAAA;AAuD4B,QAAA,6BAAQ,CAAC,yBAAD,CAAO;AACrC,2BAAA,GAAW,CAAC,KAAM,yBAAP,CAAX;AAKJ,2BAAA,CAAS,MAAO,CAAA,QAAhB,CAAA,GAA4B,QAAQ,EAAG;AACrC,WAAO,IAAP;AADqC,GAAvC;AAGA,SAAyC,yBAAzC;AATyC;ACrHP,QAAA,qCAAQ,CAAC,eAAD,CAAe;AAEzD,SADA,eAAa,CAAA,GACb,GADmB,eACnB;AAFyD;ACCpC,QAAA,wBAAQ,CAAC,oBAAD,CAAW;AAExC,MAAI,sBAAoC,WAApC,IAAmB,MAAO,OAA1B,IAAmD,MAAO,CAAA,QAA1D,IACmB,oBAAD,CAAW,MAAO,CAAA,QAAlB,CADtB;AAEA,MAAI,mBAAJ;AACE,WAAO,mBAAiB,CAAA,IAAjB,CAAsB,oBAAtB,CAAP;AADF;AAGA,MAAiC,QAAjC,IAAI,MAAO,qBAAA,CAAA,MAAX;AACE,WNUkC,CAAC,KAAcA,4BAAR,CMVW,oBNUX,CAAP,CMVlC;AADF;AAGA,QAAU,KAAJ,CAAU,MAAA,CAAO,oBAAP,CAAV,GAA6B,kCAA7B,CAAN;AAVwC;ACDd,QAAA,6BAAQ,CAAC,0EAAD,CAAW;AAC7C,MAAI,EAAA,0EAAA,YAAoB,KAApB,CAAJ,CAAA;AAGS,8EAAA,GAAA,uBAAA,CAAA,0EAAA,CAAA;ACET,SAFA,IAAI,sBAAJ,EACI,2BAAM,EACV,EAAO,CAAuB,CAArB,sBAAqB,GAAjB,0EAAS,CAAA,IAAT,EAAiB,EAAA,IAA9B,CAAA;AACE,8BAAI,CAAA,IAAJ,CAAS,sBAAE,CAAA,KAAX,CAAA;AADF;AAGA,8EAAA,GAAO,wBAAP;ADRA;AAAA,SAAA,0EAAA;AAD6C;AELhC,QAAA,gBAAQ,CAAC,gBAAD,EAAM,gBAAN,CAAY;AACjC,SAAO,MAAO,CAAA,SAAU,CAAA,cAAe,CAAA,IAAhC,CAAqC,gBAArC,EAA0C,gBAA1C,CAAP;AADiC;ACcnC,IAAAC,oBAC4D,UAAxD,IAAgC,MAAO,OAAO,CAAA,MAA9C,GACA,MAAO,CAAA,MADP,GAQA,QAAQ,CAAC,oBAAD,EAAS,qBAAT,CAAmB;AACzB,OAAK,IAAI,gBAAI,CAAb,EAAgB,aAAhB,GAAoB,SAAU,CAAA,MAA9B,EAAsC,aAAA,EAAtC,CAA2C;AACzC,QAAI,sBAAS,SAAA,CAAU,aAAV,CAAb;AACA,QAAK,mBAAL;AACA,WAAK,IAAI,gBAAT,GAAgB,oBAAhB;AACcC,uBAAR,CAAa,mBAAb,EAAqB,gBAArB,CAAJ,KAA+B,oBAAA,CAAO,gBAAP,CAA/B,GAA6C,mBAAA,CAAO,gBAAP,CAA7C;AADF;AADA;AAFyC;AAO3C,SAAO,oBAAP;AARyB,CAT/B;ACfQJ,mBAAR,CAAiB,eAAjB,EAAkC,QAAQ,CAAC,gBAAD,CAAO;AAC/C,SAAO,gBAAP,IAAuBG,iBAAvB;AAD+C,CAAjD,CAAA;ACOA,IAAAE,0BACmD,UAA/C,IAAuB,MAAO,OAAO,CAAA,MAArC,GACA,MAAO,CAAA,MADP,GAEA,QAAQ,CAAC,YAAD,CAAY;AAEP,UAAA,QAAQ,EAAG;;AACtB,SAAK,CAAA,SAAL,GAAiB,YAAjB;AACA,SAAO,IAAI,OAAJ,EAAP;AAJkB,CAHxB,EC8DAC,uBA9DqCC,QAAQ,EAAG;AAG9C,UAAS,yBAAqB,EAAG;AACX,YAAS,QAAI,EAAG;;AAEpC,QAAI,OAAJ,EAAA;AACA,WAAQ,CAAA,SAAR,CAAkB,OAAlB,EAAwB,EAAxB,EAFoB,QAAgB,EAAG;KAEvC,CAAA;AACA,WAAO,IAAI,OAAJ,EAAP,YAA6B,OAA7B;AAL+B;AAQjC,MAAqD,WAArD,IAAmC,MAAO,QAA1C,IACI,OAAQ,CAAA,SADZ,CACuB;AACrB,QAAI,wBAAA,EAAJ;AAA6B,aAAO,OAAQ,CAAA,SAAf;AAA7B;AACA,QAAI,qBAAkB,OAAQ,CAAA,SAA9B;AAeA,WALuB,QAAQ,CAAC,wBAAD,EAAS,mBAAT,EAAkB,gBAAlB,CAAiC;AAC1D,8BAAA,GAAM,kBAAA,CAAgB,wBAAhB,EAAwB,mBAAxB,CAAN;AACA,sBAAJ,IAAmB,OAAQ,CAAA,cAAR,CAAuB,wBAAvB,EAA4B,gBAAc,CAAA,SAA1C,CAAnB;AACA,aAAO,wBAAP;AAH8D,KAKhE;AAjBqB;AAqCvB,SARA,QAAkB,CAAC,oBAAD,EAAS,mBAAT,EAAkB,uCAAlB,CAAiC;AAC3B,QAAA,EAAtB,KAAI,uCAAJ,KAAiC,uCAAjC,GAAiD,oBAAjD;AAEI,2CAAA,GAAcF,uBAAR,CADE,uCAAc,CAAA,SAChB,IAD6B,MAAO,CAAA,SACpC,CAAN;AAGJ,WAFY,QAAS,CAAA,SAAU,CAAA,KACf,CAAA,IAAN,CAAW,oBAAX,EAAmB,uCAAnB,EAAwB,mBAAxB,CACV,IAAc,uCAAd;AANiD,GAQnD;AAjD8C,CAgExC,EDhER,EEoByB,6BFpBzB;AEoByB,IACiC,UADjC,IACC,MAAO,OAAO,CAAA,cADf;AAEd,+BAAA,GAAA,MAAA,CAAA,cAAA;AAFc,MAAA;AAGrB,MAAA,sCAAA;AAxByC,GAAA,CAAA;AAC3C,QAAI,yBAAI,CAAC,EAAG,CAAA,CAAJ,CAAR,EACI,yBAAI,EADR;AAEA,OAAI;AACF,4BAAE,CAAA,SAAF,GAAc,sBAAd;AACA,4CAAA,GAAO,sBAAE,CAAA,CAAT;AAAA,YAAA,CAAA;AAFE,KAGF,QAAO,sBAAP,CAAU;;AAGZ,0CAAA,GAAO,CAAA,CAAP;AAT2C;AAwBzC,+BAAA,GAAA,sCAAA,GAAA,QAAA,CAAA,oBAAA,EAAA,iBAAA,CAAA;AAAA,wBAAA,CAAA,SAAA,GAAA,iBAAA;AAAA,QAAA,oBAAA,CAAA,SAAA,KAAA,iBAAA;AAAA,YAAA,IAAA,SAAA,CAAA,oBAAA,GAAA,oBAAA,CAAA;AAAA;AAAA,WAAA,oBAAA;AAAA,GAAA,GAAA,IAAA;AAHqB;AAAzB,IAAAG,4BAAyB,6BAAzB;ACMmB,QAAA,oBAAQ,CAAC,YAAD,EAAY,aAAZ,CAAwB;AACjD,cAAU,CAAA,SAAV,GAA8BH,uBAAR,CAAqB,aAAW,CAAA,SAAhC,CAAtB;AACiB,cAAU,CAAA,SAAU,CAAA,WAApB,GAAkC,YAAlC;AACjB,MAAYG,yBAAZ;AAIEA,6BAAA,CAAe,YAAf,EAA0B,aAA1B,CAAA;AAJF;AAQE,SAAK,IAAI,IAAT,GAAc,cAAd;AACE,UAAS,WAAT,IAAI,IAAJ;AAIA,YAAI,MAAO,CAAA,gBAAX,CAA6B;AAC3B,cAAI,yBAAa,MAAO,CAAA,wBAAP,CAAgC,aAAhC,EAA4C,IAA5C,CAAjB;AACI,gCAAJ,IACE,MAAO,CAAA,cAAP,CAAsB,YAAtB,EAAiC,IAAjC,EAAoC,sBAApC,CADF;AAF2B,SAA7B;AAOE,sBAAA,CAAU,IAAV,CAAA,GAAe,aAAA,CAAW,IAAX,CAAf;AAPF;AAJA;AADF;AARF;AAyBA,cAAU,CAAA,aAAV,GAAwB,aAAW,CAAA,SAAnC;AA5BiD;AC6EvB,QAAA,6BAAQ,EAAG;AAQrC,MAAK,CAAA,GAAL,GAAkB,CAAA,CAAlB;AASA,MAAK,CAAA,GAAL,GAAyB,IAAzB;AAQA,MAAK,CAAA,GAAL,GAAmB,IAAA,EAAnB;AASA,MAAK,CAAA,GAAL,GAAmB,CAAnB;AAqBA,MAAK,CAAA,GAAL,GAXA,IAAK,CAAA,GAWL,GAXqB,CAWrB;AAUA,MAAK,CAAA,GAAL,GAAyB,IAAzB;AAjEqC;AAmGM,QAAA,mCAAQ,CAAR,uCAAQ,CAAG;AACtD,MAAI,uCAAK,CAAA,GAAT;AACE,UAAM,IAAI,SAAJ,CAAc,8BAAd,CAAN;AADF;AAGA,yCAAK,CAAA,GAAL,GAAkB,CAAA,CAAlB;AAJsD;AAuCtCC,4BAAQ,CAAA,SAAU,CAAA,GAApC,GAA4C,QAAQ,CAAC,kBAAD,CAAQ;AAC1D,MAAK,CAAA,GAAL,GAAmB,kBAAnB;AAD0D,CAA5D;AAa6C,QAAA,4CAAQ,CAAR,gDAAQ,EAAC,aAAD,CAAI;AACvD,kDAAK,CAAA,GAAL,GAAyB,CAAC,YAAW,aAAZ,EAAe,YAAa,CAAA,CAA5B,CAAzB;AACA,kDA3BK,CAAA,GAAL,GA2BA,gDA3BwB,CAAA,GAAxB,IA2BA,gDA3B8C,CAAA,GAA9C;AAyBuD;AAavCA,4BAAQ,CAAA,SAAU,CAAA,MAApC,GAA6C,QAAQ,CAAC,kBAAD,CAAQ;AAC3D,MAAK,CAAA,GAAL,GAAyB,CAAC,OAA8B,kBAA/B,CAAzB;AACA,MAAK,CAAA,GAAL,GAAmB,IAAK,CAAA,GAAxB;AAF2D,CAA7D;AA8B4C,QAAA,kCAAQ,CAAR,sCAAQ,EAAC,kBAAD,EAAQ,gBAAR,CAAuB;AACzE,wCAAK,CAAA,GAAL,GAAmB,gBAAnB;AACA,SAAO,CAAC,MAAO,kBAAR,CAAP;AAFyE;AAiV/C,QAAA,6BAAQ,CAAC,oBAAD,CAAU;AAM5C,MAAK,CAAA,GAAL,GAAgB,IAAsBA,4BAAtB,EAAhB;AAOA,MAAK,CAAA,GAAL,GAAgB,oBAAhB;AAb4C;AA8CA,QAAA,oCAAQ,CAAR,wCAAQ,EAAC,kBAAD,CAAQ;AAC9C,oCAAd,CAAA,wCAAK,CAAA,GAAL,CAAA;AACc,MAAI,sBAAmB,wCAAK,CAAA,GAAS,CAAA,GAArC;AACd,MAAI,mBAAJ;AAOE,WAAY,yCAAL,CAAA,wCAAA,EAJC,QAAA,IAAY,mBAAZ,GAA+B,mBAAA,CAAiB,QAAjB,CAA/B,GAC+B,QAAQ,CAAC,IAAD,CAAI;AACV,aAAO,CAAC,MAAO,IAAR,EAAW,KAAM,CAAA,CAAjB,CAAP;AADU,KAG5C,EAAmC,kBAAnC,EAA0C,wCAAK,CAAA,GAAS,CAAA,MAAxD,CAAP;AAPF;AASA,0CAAK,CAAA,GAAS,CAAA,MAAd,CAAqB,kBAArB,CAAA;AACA,SAAY,qCAAL,CAAA,wCAAA,CAAP;AAb4D;AAiDV,QAAA,0CAAQ,CAAR,8CAAQ,EACxD,kBADwD,EAChD,kBADgD,EACzC,aADyC,CAC7B;AAC7B,KAAI;AACY,QAAI,qBAAS,kBAAO,CAAA,IAAP,CACU,8CAAK,CAAA,GAAS,CAAA,GADxB,EAEvB,kBAFuB,CAAb;AApoBhB,QAAI,EAuoB8C,kBAvoB9C,YAAkB,MAAlB,CAAJ;AAGA,YAAM,IAAI,SAAJ,CAAc,kBAAd,GAooB4C,kBApoB5C,GAA4C,mBAA5C,CAAN;AAHA;AAwoBE,QAAI,CAAC,kBAAO,CAAA,IAAZ;AAEE,aADA,8CAAK,CAAA,GAxgBJ,CAAA,GAygBM,GAzgBO,CAAA,CAygBP,EAAA,kBAAP;AAFF;AAMc,QAAI,iBAAc,kBAAO,CAAA,KAAzB;AAXZ,GAYF,QAAO,aAAP,CAAU;AAGV,WAFA,8CAAK,CAAA,GAAS,CAAA,GAEP,GAF2B,IAE3B,EADO,2CAAd,CAAA,8CAAK,CAAA,GAAL,EAAqB,aAArB,CACO,EAAK,qCAAL,CAAA,8CAAA,CAAP;AAHU;AAKZ,gDAAK,CAAA,GAAS,CAAA,GAAd,GAAkC,IAAlC;AACA,eAAW,CAAA,IAAX,CAAgB,8CAAK,CAAA,GAArB,EAA+B,cAA/B,CAAA;AACA,SAAY,qCAAL,CAAA,8CAAA,CAAP;AApB6B;AA+BiB,QAAA,sCAAQ,CAAR,0CAAQ,CAAG;AACzD,OAAA,EAAO,0CAAK,CAAA,GAAS,CAAA,GAArB,CAAA;AACE,OAAI;AACY,UAAI,0CAAa,0CAAK,CAAA,GAAL,CAAc,0CAAK,CAAA,GAAnB,CAAjB;AACd,UAAI,uCAAJ;AAEE,eADA,0CAAK,CAAA,GAriBN,CAAA,GAsiBQ,GAtiBK,CAAA,CAsiBL,EAAA,CAAC,MAAO,uCAAW,CAAA,KAAnB,EAA0B,KAAM,CAAA,CAAhC,CAAP;AAFF;AAFE,KAMF,QAAO,cAAP,CAAU;AACV,gDAAK,CAAA,GAAS,CAAA,GACd,GAD4B,IAAA,EAC5B,EAAc,2CAAd,CAAA,0CAAK,CAAA,GAAL,EAAqB,cAArB,CAAA;AAFU;AAPd;AAaA,4CAAK,CAAA,GA9iBA,CAAA,GAAL,GAAkB,CAAA,CAAlB;AA+iBA,MAAI,0CAAK,CAAA,GAAS,CAAA,GAAlB,CAAqC;AACjB,2CAAA,GAAmB,0CAAK,CAAA,GAAS,CAAA,GAAjC;AAClB,8CAAK,CAAA,GAAS,CAAA,GAAd,GAAkC,IAAlC;AACA,QAAI,uCAAiB,CAAA,WAArB;AACE,YAAM,uCAAiB,CAAA,WAAvB;AADF;AAGA,WAAO,CAAC,MAAO,uCAAiB,CAAA,MAAzB,EAAiC,KAAM,CAAA,CAAvC,CAAP;AANmC;AAQrC,SAAO,CAAC,MAAyB,IAAA,EAA1B,EAAsC,KAAM,CAAA,CAA5C,CAAP;AAvByD;AAsC5B,QAAA,gCAAQ,CAAC,SAAD,CAAS;AAE9C,MAAK,CAAA,IAAL,GAAY,QAAQ,CAAC,0DAAD,CAAY;AA3IlB,sCAAd,CA4IS,SA5IJ,CAAA,GAAL,CAAA;AA4IS,aA3IA,CAAA,GAAS,CAAA,GAAlB,GACE,0DADF,GACc,yCAAL,CA0IA,SA1IA,EA0IA,SAzIE,CAAA,GAAS,CAAA,GAAkB,CAAA,IAD7B,EA0Ia,0DA1Ib,EA0IA,SAzI+C,CAAA,GAAS,CAAA,GADxD,CADT,IA2IS,SAvIJ,CAAA,GAAS,CAAA,GAAd,CAuIsB,0DAvItB,CACA,EAAA,0DAAA,GAAY,qCAAL,CAsIE,SAtIF,CALP,CAAA;AA2IE,WAAO,0DAAP;AAD8B,GAAhC;AAKA,MAAK,CAAA,KAAL,GAAa,QAAQ,CAAC,yDAAD,CAAY;AAnGnB,sCAAd,CAoGS,SApGJ,CAAA,GAAL,CAAA;AAoGS,aAnGA,CAAA,GAAS,CAAA,GAAlB,GACE,yDADF,GACc,yCAAL,CAkGA,SAlGA,EAkGA,SAjGE,CAAA,GAAS,CAAA,GAAd,CAAgC,OAAhC,CADG,EAkGc,yDAlGd,EAkGA,SAhGE,CAAA,GAAS,CAAA,GAFX,CADT,IAKc,2CAAd,CA8FS,SA9FJ,CAAA,GAAL,EA8FuB,yDA9FvB,CACA,EAAA,yDAAA,GAAY,qCAAL,CA6FE,SA7FF,CANP,CAAA;AAmGE,WAAO,yDAAP;AAD+B,GAAjC;AAKA,MAAK,CAAA,MAAL,GAAc,QAAQ,CAAC,kBAAD,CAAQ;AAC5B,WAAc,mCAAP,CAAA,SAAA,EAAe,kBAAf,CAAP;AAD4B,GAA9B;AAKA,MAAA,CAAK,MAAO,CAAA,QAAZ,CAAA,GAAwB,QAAQ,EAAG;AACjC,WAAO,IAAP;AADiC,GAAnC;AAjB8C;AC5wBT,QAAA,wCAAQ,CAAC,qBAAD,CAAY;AACzD,UAAS,wBAAoB,CAAC,mBAAD,CAAQ;AACnC,WAAO,qBAAU,CAAA,IAAV,CAAe,mBAAf,CAAP;AADmC;AAIrC,UAAS,wBAAoB,CAAC,iBAAD,CAAQ;AACnC,WAAO,qBAAU,CAAA,KAAV,CAAgB,iBAAhB,CAAP;AADmC;AAIrC,SAAO,IAAI,OAAJ,CAAY,QAAQ,CAAC,UAAD,EAAU,SAAV,CAAkB;AAC3C,YAAS,yBAAqB,CAA4B,SAA5B,CAAoC;AAC5D,eAAO,CAAA,IAAX,GACE,UAAA,CAAQ,SAAO,CAAA,KAAf,CADF,GAKE,OAAQ,CAAA,OAAR,CAAgB,SAAO,CAAA,KAAvB,CACK,CAAA,IADL,CACU,uBADV,EACgC,uBADhC,CAEK,CAAA,IAFL,CAEU,wBAFV,EAEiC,SAFjC,CALF;AADgE;AAYlE,4BAAA,CAAsB,qBAAU,CAAA,IAAV,EAAtB,CAAA;AAb2C,GAAtC,CAAP;AATyD;AAiEb,QAAA,+CAAQ,CAAC,oBAAD,CAAU;AAC9D,SAAeC,uCAAR,CACH,IAAsBC,+BAAtB,CACI,IAAsBC,4BAAtB,CACI,oBADJ,CADJ,CADG,CAAP;AAD8D;ACjFrC,QAAA,4BAAQ,EAAG;AAGpC,OAFA,IAAI,gBAAa,MAAA,CAAO,IAAP,CAAjB,EACI,cAAW,EADf,EAES,gBAAI,aAAb,EAAyB,aAAzB,GAA6B,SAAU,CAAA,MAAvC,EAA+C,aAAA,EAA/C;AACE,eAAA,CAAS,aAAT,GAAa,aAAb,CAAA,GAA2B,SAAA,CAAU,aAAV,CAA3B;AADF;AAGA,SAAO,WAAP;AANoC;ACd9BZ,mBAAR,CAAiB,SAAjB,EAA4B,QAAQ,CAAC,gBAAD,CAAO;AACzC,SAAI,gBAAJ,GAAiB,gBAAjB,GACO,EADP;AADyC,CAA3C,CAAA;ACMQA,mBAAR,CAAiB,mBAAjB,EAAsC,QAAQ,EAAO;AAEnD,SAAeM,oBAAf;AAFmD,CAArD,CAAA;ACAQN,mBAAR,CACI,wBADJ,EASI,QAAQ,CAAC,gBAAD,CAAO;AACb,SAAI,gBAAJ,GACS,gBADT,GAEmBQ,yBAAZ,GAQU,QAAQ,CAAC,oBAAD,EAAS,iBAAT,CAAgB;AACrC,OAAI;AAEF,aADAA,yBAAA,CAAe,oBAAf,EAAuB,iBAAvB,CACO,EAAA,CAAA,CAAP;AAFE,KAGF,QAAO,cAAP,CAAU;AACV,aAAO,CAAA,CAAP;AADU;AAJyB,GARlC,GAmBE,IArBT;AADa,CATnB,CAAA;ACFQR,mBAAR,CAAiB,SAAjB,EAMI,QAAQ,CAAC,gBAAD,CAAgB;AAyIJ,UAAA,mBAAQ,CAAC,WAAD,CAAW;AAEvC,QAAK,CAAA,GAAL,GArBS,CAqBT;AAOA,QAAK,CAAA,GAAL,GAAe,IAAA,EAAf;AAOA,QAAK,CAAA,GAAL,GAA2B,EAA3B;AAMA,QAAK,CAAA,GAAL,GAA2B,CAAA,CAA3B;AAEA,QAAI,sBAAmB,IAAK,CAAA,GAAL,EAAvB;AACA,OAAI;AACF,iBAAA,CAAS,mBAAiB,CAAA,OAA1B,EAAmC,mBAAiB,CAAA,MAApD,CAAA;AADE,KAEF,QAAO,cAAP,CAAU;AACV,yBAAiB,CAAA,MAAjB,CAAwB,cAAxB,CAAA;AADU;AA3B2B;AA3GzC,UAAS,iBAAa,EAAG;AAQvB,QAAK,CAAA,GAAL,GAAc,IAAd;AARuB;AAibzB,UAAS,oBAAgB,CAAC,sBAAD,CAAY;AACnC,WAAI,sBAAJ,YAAyB,kBAAzB,GACS,sBADT,GAGS,IAAI,kBAAJ,CAAoB,QAAQ,CAAC,mBAAD,CAAkB;AACnD,yBAAA,CAAQ,sBAAR,CAAA;AADmD,KAA9C,CAHT;AADmC;AA1brC,MAAI,gBAAJ;AACE,WAAO,gBAAP;AADF;AAgCA,kBAAc,CAAA,SAAU,CAAA,GAAxB,GAAuC,QAAQ,CAAC,aAAD,CAAI;AACjD,QAAmB,IAAnB,IAAI,IAAK,CAAA,GAAT,CAAyB;AAEvB,UAAK,CAAA,GAAL,GAAc,EAAd;AACA,UAAI,mBAAO,IAAX;AACA,UAAK,CAAA,GAAL,CAA0B,QAAQ,EAAG;AAAE,wBAAK,CAAA,GAAL,EAAA;AAAF,OAArC,CAAA;AAJuB;AAMzB,QAAK,CAAA,GAAO,CAAA,IAAZ,CAAiB,aAAjB,CAAA;AAPiD,GAAnD;AAaA,MAAI,sBAA2BF,iBAAR,CAAA,UAAvB;AASA,kBAAc,CAAA,SAAU,CAAA,GAAxB,GAA+C,QAAQ,CAAC,aAAD,CAAI;AACzD,uBAAA,CAAiB,aAAjB,EAAoB,CAApB,CAAA;AADyD,GAA3D;AASA,kBAAc,CAAA,SAAU,CAAA,GAAxB,GAAwC,QAAQ,EAAG;AACjD,SAAA,EAAO,IAAK,CAAA,GAAZ,IAAsB,IAAK,CAAA,GAAO,CAAA,MAAlC,CAAA,CAA0C;AACxC,UAA+B,oBAAiB,IAAK,CAAA,GAArD;AAGA,UAAK,CAAA,GAAL,GAAc,EAAd;AACA,WAAK,IAAI,iBAAI,CAAb,EAAgB,cAAhB,GAAoB,iBAAe,CAAA,MAAnC,EAA2C,EAAE,cAA7C,CAAgD;AAC9C,YAAI,gBAA+B,iBAAA,CAAe,cAAf,CAAnC;AACA,yBAAA,CAAe,cAAf,CAAA,GAAoB,IAApB;AACA,WAAI;AACF,uBAAA,EAAA;AADE,SAEF,QAAO,iBAAP,CAAc;AACd,cAAK,CAAA,GAAL,CAAiB,iBAAjB,CAAA;AADc;AAL8B;AALR;AAiB1C,QAAK,CAAA,GAAL,GAAc,IAAd;AAlBiD,GAAnD;AAyBA,kBAAc,CAAA,SAAU,CAAA,GAAxB,GAAsC,QAAQ,CAAC,qBAAD,CAAY;AACxD,QAAK,CAAA,GAAL,CAA0B,QAAQ,EAAG;AAAE,YAAM,qBAAN;AAAF,KAArC,CAAA;AADwD,GAA1D;AAwEA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAAoD,QAAQ,EAAG;AAQ7D,YAAS,iBAAa,CAAC,kBAAD,CAAS;AAC7B,aAAO,QAAQ,CAAW,cAAX,CAAc;AACtB,wBAAL,KACE,gBACA,GADgB,CAAA,CAChB,EAAA,kBAAO,CAAA,IAAP,CAAY,cAAZ,EAAyB,cAAzB,CAFF;AAD2B,OAA7B;AAD6B;AAP/B,QAAI,iBAAc,IAAlB,EACI,mBAAgB,CAAA,CADpB;AAeA,WAAO,CACL,QAAS,gBAAA,CAAc,IAAK,CAAA,GAAnB,CADJ,EAEL,OAAQ,gBAAA,CAAc,IAAK,CAAA,GAAnB,CAFH,CAAP;AAhB6D,GAA/D;AA2BA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAAuC,QAAQ,CAAC,mBAAD,CAAQ;AACrD,QAAI,mBAAJ,KAAc,IAAd;AACE,UAAK,CAAA,GAAL,CAAa,IAAI,SAAJ,CAAc,oCAAd,CAAb,CAAA;AADF;AAEO,UAAI,mBAAJ,YAAqB,kBAArB;AACL,YAAK,CAAA,GAAL,CAA2D,mBAA3D,CAAA;AADK,YAAA;AAoCgB,SAAA;AACvB,iBAAQ,MAnCY,oBAmCpB;AACE,iBAAK,QAAL;AACE,kBAAA,yCAAgB,IAAhB,IArCgB,mBAqChB;AAAA,oBAAA,CAAA;AACF,iBAAK,UAAL;AACE,oDAAA,GAAO,CAAA,CAAP;AAAA,oBAAA,CAAA;AACF;AACE,oDAAA,GAAO,CAAA,CAAP;AANJ;AADuB;AAlCZ,8CAAJ,GACL,IAAK,CAAA,GAAL,CAAqD,mBAArD,CADK,GAGL,IAAK,CAAA,GAAL,CAAc,mBAAd,CAHK;AAFA;AAFP;AADqD,GAAvD;AAkBA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAAoD,QAAQ,CAAC,gBAAD,CAAM;AAChE,QAAI,gBAAa,IAAA,EAAjB;AAEA,OAAI;AACF,mBAAA,GAAa,gBAAI,CAAA,IAAjB;AADE,KAEF,QAAO,iBAAP,CAAc;AACd,UAAK,CAAA,GAAL,CAAa,iBAAb,CAAA;AACA;AAFc;AAIS,cAAzB,IAAI,MAAO,cAAX,GACE,IAAK,CAAA,GAAL,CAA2B,aAA3B,EAAiE,gBAAjE,CADF,GAGE,IAAK,CAAA,GAAL,CAAc,gBAAd,CAHF;AATgE,GAAlE;AAsCA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAAoC,QAAQ,CAAC,kBAAD,CAAS;AACnD,QAAK,CAAA,GAAL,CA7IU,CA6IV,EAAoC,kBAApC,CAAA;AADmD,GAArD;AAUA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAAqC,QAAQ,CAAC,mBAAD,CAAQ;AACnD,QAAK,CAAA,GAAL,CA1JW,CA0JX,EAAqC,mBAArC,CAAA;AADmD,GAArD;AAWA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAAoC,QAAQ,CAAC,eAAD,EAAe,gBAAf,CAA8B;AACxE,QAxKS,CAwKT,IAAI,IAAK,CAAA,GAAT;AACE,YAAU,KAAJ,CACF,gBADE,GACiB,eADjB,GACgC,IADhC,GACuC,gBADvC,GAEF,qCAFE,GAEsC,IAAK,CAAA,GAF3C,CAAN;AADF;AAKA,QAAK,CAAA,GAAL,GAAc,eAAd;AACA,QAAK,CAAA,GAAL,GAAe,gBAAf;AAxKU,KAyKV,KAAI,IAAK,CAAA,GAAT,IACE,IAAK,CAAA,GAAL,EADF;AAGA,QAAK,CAAA,GAAL,EAAA;AAXwE,GAA1E;AAcA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAA6D,QAAQ,EAAG;AACtE,QAAI,mBAAO,IAAX;AACA,uBAAA,CAAiB,QAAQ,EAAG;AAC1B,UAAI,gBAAK,CAAA,GAAL,EAAJ,CAAsC;AAEpC,YAAI,mBAAwBA,iBAAR,CAAA,OAApB;AAC6B,mBAA7B,KAAI,MAAO,iBAAX,IACE,gBAAc,CAAA,KAAd,CAAoB,gBAAK,CAAA,GAAzB,CADF;AAHoC;AADZ,KAA5B,EAQG,CARH,CAAA;AAFsE,GAAxE;AAsBA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAAsD,QAAQ,EAAG;AAC/D,QAAI,IAAK,CAAA,GAAT;AACE,aAAO,CAAA,CAAP;AADF;AAGA,QAAI,sCAA4BA,iBAAR,CAAA,WAAxB,EACI,iBAAsBA,iBAAR,CAAA,KADlB,EAEI,yBAA8BA,iBAAR,CAAA,aAF1B;AAGA,QAAmC,WAAnC,KAAI,MAAO,uBAAX;AACE,aAAO,CAAA,CAAP;AADF;AAKiC,cAAjC,KAAI,MAAO,oCAAX,GACE,mCADF,GAEM,IAAI,mCAAJ,CAAsB,oBAAtB,EAA4C,CAAC,WAAY,CAAA,CAAb,CAA5C,CAFN,GAGkC,UAA3B,KAAI,MAAO,eAAX,GAGL,mCAHK,GAGG,IAAI,cAAJ,CAAgB,oBAAhB,EAAsC,CAAC,WAAY,CAAA,CAAb,CAAtC,CAHH,IAML,mCACA,GADgBA,iBAAR,CAAA,QAA2B,CAAA,WAA3B,CAAuC,aAAvC,CACR,EAAA,mCAAM,CAAA,eAAN,CACI,oBADJ,EAC8C,CAAA,CAD9C,EAEyB,CAAA,CAFzB,EAE+B,mCAF/B,CAPK,CAHP;AAcA,uCAAM,CAAA,OAAN,GAAgB,IAAhB;AACA,uCAAM,CAAA,MAAN,GAAe,IAAK,CAAA,GAApB;AAEA,WAAO,sBAAA,CAAoB,mCAApB,CAAP;AA7B+D,GAAjE;AAgCA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAAuD,QAAQ,EAAG;AAChE,QAAgC,IAAhC,IAAI,IAAK,CAAA,GAAT,CAAsC;AACpC,WAAK,IAAI,iBAAI,CAAb,EAAgB,cAAhB,GAAoB,IAAK,CAAA,GAAoB,CAAA,MAA7C,EAAqD,EAAE,cAAvD;AACE,wBAAc,CAAA,GAAd,CAA2B,IAAK,CAAA,GAAL,CAAyB,cAAzB,CAA3B,CAAA;AADF;AAGA,UAAK,CAAA,GAAL,GAA2B,IAA3B;AAJoC;AAD0B,GAAlE;AAcA,MAAI,mBAAgB,IAAI,gBAAJ,EAApB;AAOA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAAiD,QAAQ,CAAC,UAAD,CAAU;AACjE,QAAI,sBAAU,IAAK,CAAA,GAAL,EAAd;AAGA,cAAQ,CAAA,kBAAR,CAAyB,mBAAQ,CAAA,OAAjC,EAA0C,mBAAQ,CAAA,MAAlD,CAAA;AAJiE,GAAnE;AAgBA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAAkD,QAAQ,CACtD,sBADsD,EAC1C,WAD0C,CAChC;AACxB,QAAI,sBAAU,IAAK,CAAA,GAAL,EAAd;AAGA,OAAI;AACF,4BAAW,CAAA,IAAX,CAAgB,WAAhB,EAA0B,mBAAQ,CAAA,OAAlC,EAA2C,mBAAQ,CAAA,MAAnD,CAAA;AADE,KAEF,QAAO,iBAAP,CAAc;AACd,yBAAQ,CAAA,MAAR,CAAe,iBAAf,CAAA;AADc;AANQ,GAD1B;AAaA,oBAAgB,CAAA,SAAU,CAAA,IAA1B,GAAiC,QAAQ,CAAC,cAAD,EAAc,sBAAd,CAA0B;AAOjE,YAAS,kBAAc,CAAC,SAAD,EAAS,WAAT,CAAmB;AAGxC,aAAqB,UAArB,IAAI,MAAO,UAAX,GACS,QAAQ,CAAC,cAAD,CAAI;AACjB,WAAI;AACF,yBAAA,CAAa,SAAA,CAAO,cAAP,CAAb,CAAA;AADE,SAEF,QAAO,iBAAP,CAAc;AACd,wBAAA,CAAY,iBAAZ,CAAA;AADc;AAHC,OADrB,GASS,WATT;AAHwC;AAN1C,QAAI,eAAJ,EACI,cADJ,EAEI,kBAAe,IAAI,kBAAJ,CAAoB,QAAQ,CAAC,mBAAD,EAAU,kBAAV,CAAkB;AAC/D,qBAAA,GAAe,mBAAf;AACA,oBAAA,GAAc,kBAAd;AAF+D,KAA9C,CAFnB;AAsBA,QAAK,CAAA,kBAAL,CACI,iBAAA,CAAe,cAAf,EAA4B,eAA5B,CADJ,EAEI,iBAAA,CAAe,sBAAf,EAA2B,cAA3B,CAFJ,CAAA;AAGA,WAAO,eAAP;AA1BiE,GAAnE;AA8BA,oBAAgB,CAAA,SAAU,CAAA,KAA1B,GAAkC,QAAQ,CAAC,sBAAD,CAAa;AACrD,WAAO,IAAK,CAAA,IAAL,CAAU,IAAA,EAAV,EAAqB,sBAArB,CAAP;AADqD,GAAvD;AAKA,oBAAgB,CAAA,SAAU,CAAA,kBAA1B,GAA6C,QAAQ,CACjD,uBADiD,EACpC,sBADoC,CACxB;AAE3B,YAAS,uBAAQ,EAAG;AAClB,aAAQ,uBAAY,CAAA,GAApB;AACE,aAlUO,CAkUP;AACE,iCAAA,CAAY,uBAAY,CAAA,GAAxB,CAAA;AACA;AACF,aAlUM,CAkUN;AACE,gCAAA,CAAW,uBAAY,CAAA,GAAvB,CAAA;AACA;AACF;AACE,gBAAU,KAAJ,CAAU,oBAAV,GAAiC,uBAAY,CAAA,GAA7C,CAAN;AARJ;AADkB;AADpB,QAA4B,0BAAc,IAA1C;AAagC,QAAhC,IAAI,IAAK,CAAA,GAAT,GAEE,gBAAc,CAAA,GAAd,CAA2B,sBAA3B,CAFF,GAIE,IAAK,CAAA,GAAoB,CAAA,IAAzB,CAA8B,sBAA9B,CAJF;AAMA,QAAK,CAAA,GAAL,GAA2B,CAAA,CAA3B;AApB2B,GAD7B;AAkCA,oBAAA,CAAA,OAAA,GAA6B,mBAA7B;AAGA,oBAAA,CAAA,MAAA,GAA4B,QAAQ,CAAC,sBAAD,CAAa;AAC/C,WAAO,IAAI,kBAAJ,CAAoB,QAAQ,CAAC,mBAAD,EAAU,kBAAV,CAAkB;AACnD,wBAAA,CAAO,sBAAP,CAAA;AADmD,KAA9C,CAAP;AAD+C,GAAjD;AAOA,oBAAA,CAAA,IAAA,GAA0B,QAAQ,CAAC,oBAAD,CAAoB;AACpD,WAAO,IAAI,kBAAJ,CAAoB,QAAQ,CAAC,mBAAD,EAAU,kBAAV,CAAkB;AAGnD,WAFA,IAAwB,uBACZe,uBAAR,CAAqB,oBAArB,CADJ,EAEoC,aAAU,oBAAS,CAAA,IAAT,EAA9C,EACK,CAAC,UAAQ,CAAA,IADd,EAEK,UAFL,GAEe,oBAAS,CAAA,IAAT,EAFf;AASE,2BAAA,CAAiB,UAAQ,CAAA,KAAzB,CAAgC,CAAA,kBAAhC,CAAiD,mBAAjD,EAA0D,kBAA1D,CAAA;AATF;AAHmD,KAA9C,CAAP;AADoD,GAAtD;AAmBA,oBAAA,CAAA,GAAA,GAAyB,QAAQ,CAAC,6BAAD,CAAoB;AACnD,QAAwB,wBAAmBA,uBAAR,CAAqB,6BAArB,CAAnC,EAC+B,sBAAU,qBAAS,CAAA,IAAT,EADzC;AAGA,WAAI,mBAAQ,CAAA,IAAZ,GACS,mBAAA,CAAiB,EAAjB,CADT,GAGS,IAAI,kBAAJ,CAAoB,QAAQ,CAAC,aAAD,EAAa,YAAb,CAAwB;AAIzD,cAAS,wBAAW,CAAC,cAAD,CAAI;AACtB,eAAO,QAAQ,CAAC,YAAD,CAAY;AACzB,yBAAA,CAAa,cAAb,CAAA,GAAkB,YAAlB;AACA,4BAAA,EAAA;AACuB,WAAvB,IAAI,kBAAJ,IACE,aAAA,CAAW,eAAX,CADF;AAHyB,SAA3B;AADsB;AAHxB,UAAI,kBAAe,EAAnB,EACI,qBAAkB,CADtB;AAaA;AACE,uBAAa,CAAA,IAAb,CAAkB,IAAA,EAAlB,CAUA,EATA,kBAAA,EASA,EAHA,mBAAA,CAAiB,mBAAQ,CAAA,KAAzB,CACK,CAAA,kBADL,CAEQ,uBAAA,CAAY,eAAa,CAAA,MAAzB,GAAkC,CAAlC,CAFR,EAE8C,YAF9C,CAGA,EAAA,mBAAA,GAAU,qBAAS,CAAA,IAAT,EAAV;AAXF,eAYS,CAAC,mBAAQ,CAAA,IAZlB;AAdyD,KAApD,CAHT;AAJmD,GAArD;AAsCA,SAAO,kBAAP;AA3hB0B,CAN5B,CAAA;ACCQb,mBAAR,CAAiB,uBAAjB,EAA0C,QAAQ,CAAC,gBAAD,CAAO;AAGvD,SAAO,gBAAP,IAAuBQ,yBAAvB;AAHuD,CAAzD,CAAA;ACDQR,mBAAR,CAAiB,SAAjB,EAMI,QAAQ,CAAC,gBAAD,CAAgB;AA6GJ,UAAA,mBAAQ,CAAC,sCAAD,CAAe;AAE3C,QAAK,CAAA,GAAL,GAA0C,CAA9B,mBAA8B,IAApB,IAAK,CAAA,MAAL,EAAoB,GAAJ,CAAI,EAAA,QAA/B,EAAX;AAEA,QAAI,sCAAJ,CAAkB;AACZ,4CAAA,GAAea,uBAAR,CAAqB,sCAArB,CAAP;AAEJ,WADA,IAAI,uBACJ,EAAO,CAAuB,CAArB,uBAAqB,GAAb,sCAAK,CAAA,IAAL,EAAa,EAAA,IAA9B,CAAA;AACM,+BACJ,GADW,uBAAM,CAAA,KACjB,EAAA,IAAK,CAAA,GAAL,CAA6B,uBAAA,CAAK,CAAL,CAA7B,EAA6D,uBAAA,CAAK,CAAL,CAA7D,CAAA;AAFF;AAHgB;AAJyB;AAhF7C,UAAS,qBAAiB,EAAG;;AAO7B,UAAS,cAAU,CAAC,gBAAD,CAAM;AACvB,QAAI,qBAAO,MAAO,iBAAlB;AACA,WAAiB,QAAjB,KAAQ,kBAAR,IAAqC,IAArC,KAA6B,gBAA7B,IAAuD,UAAvD,KAA8C,kBAA9C;AAFuB;AASzB,UAAS,UAAM,CAAC,oBAAD,CAAS;AACtB,QAAI,CAAST,eAAR,CAAa,oBAAb,EAAqB,gBAArB,CAAL,CAAiC;AAC/B,UAAI,mBAAM,IAAI,oBAAJ,EAAV;AAMQP,+BAAR,CAAuB,oBAAvB,EAA+B,gBAA/B,EAAqC,CAAC,MAAO,gBAAR,CAArC,CAAA;AAP+B;AADX;AAiBxB,UAAS,SAAK,CAAC,iBAAD,CAAO;AAOnB,QAAI,UAAO,MAAA,CAAO,iBAAP,CAAX;AACI,WAAJ,KACE,MAAA,CAAO,iBAAP,CADF,GACiB,QAAQ,CAAC,oBAAD,CAAS;AAC9B,UAAI,oBAAJ,YAAsB,oBAAtB;AACE,eAAO,oBAAP;AADF;AAGM,YAAO,CAAA,YAAP,CAAoB,oBAApB,CAAJ,IACE,SAAA,CAAO,oBAAP,CADF;AAGA,aAAO,OAAA,CAAK,oBAAL,CAAP;AAP4B,KADlC;AARmB;AAvCnB,MAlBF,QAAqB,EAAG;AACtB,QAAI,CAAC,gBAAL,IAAsB,CAAC,MAAO,CAAA,IAA9B;AAAoC,aAAO,CAAA,CAAP;AAApC;AACA,OAAI;AACF,UAAI,iBAAI,MAAO,CAAA,IAAP,CAAY,EAAZ,CAAR,EACI,iBAAI,MAAO,CAAA,IAAP,CAAY,EAAZ,CADR,EAEI,SAAM,IACN,gBADM,CACS,CAAC,CAAC,cAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,cAAD,EAAI,CAAJ,CAAT,CADT,CAFV;AAIA,UAAkB,CAAlB,IAAI,MAAI,CAAA,GAAJ,CAAQ,cAAR,CAAJ,IAAqC,CAArC,IAAuB,MAAI,CAAA,GAAJ,CAAQ,cAAR,CAAvB;AAAwC,eAAO,CAAA,CAAP;AAAxC;AACA,YAAI,CAAA,MAAJ,CAAW,cAAX,CAAA;AACA,YAAI,CAAA,GAAJ,CAAQ,cAAR,EAAW,CAAX,CAAA;AACA,aAAO,CAAC,MAAI,CAAA,GAAJ,CAAQ,cAAR,CAAR,IAAoC,CAApC,IAAsB,MAAI,CAAA,GAAJ,CAAQ,cAAR,CAAtB;AARE,KASF,QAAO,eAAP,CAAY;AACZ,aAAO,CAAA,CAAP;AADY;AAXQ,GAkBlB,EAAJ;AAAoB,WAAO,gBAAP;AAApB;AAGF,MAAI,mBAAO,iBAAP,GAA2B,IAAK,CAAA,MAAL,EAA/B;AAyDA,UAAA,CAAM,QAAN,CAAA;AACA,UAAA,CAAM,mBAAN,CAAA;AACA,UAAA,CAAM,MAAN,CAAA;AAKA,MAAI,sBAAQ,CAAZ;AAkCA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAAgC,QAAQ,CAAC,gBAAD,EAAM,mBAAN,CAAa;AACnD,QAAI,CAAC,aAAA,CAAW,gBAAX,CAAL;AACE,YAAU,KAAJ,CAAU,qBAAV,CAAN;AADF;AAGA,aAAA,CAAO,gBAAP,CAAA;AACA,QAAI,CAASO,eAAR,CAAa,gBAAb,EAAkB,gBAAlB,CAAL;AAQE,YAAU,KAAJ,CAAU,oBAAV,GAAiC,gBAAjC,CAAN;AARF;AAUA,oBAAA,CAAI,gBAAJ,CAAA,CAAU,IAAK,CAAA,GAAf,CAAA,GAAsB,mBAAtB;AACA,WAAO,IAAP;AAhBmD,GAArD;AAoBA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAAgC,QAAQ,CAAC,gBAAD,CAAM;AAC5C,WAAO,aAAA,CAAW,gBAAX,CAAA,IAA2BA,eAAR,CAAa,gBAAb,EAAkB,gBAAlB,CAAnB,GAA6C,gBAAA,CAAI,gBAAJ,CAAA,CAAU,IAAK,CAAA,GAAf,CAA7C,GAC6C,IAAA,EADpD;AAD4C,GAA9C;AAMA,oBAAgB,CAAA,SAAU,CAAA,GAA1B,GAAgC,QAAQ,CAAC,gBAAD,CAAM;AAC5C,WAAO,aAAA,CAAW,gBAAX,CAAP,IAAkCA,eAAR,CAAa,gBAAb,EAAkB,gBAAlB,CAA1B,IACYA,eAAR,CAAa,gBAAA,CAAI,gBAAJ,CAAb,EAAwB,IAAK,CAAA,GAA7B,CADJ;AAD4C,GAA9C;AAMA,oBAAgB,CAAA,SAAU,CAAA,MAA1B,GAAmC,QAAQ,CAAC,gBAAD,CAAM;AAC/C,WAAK,aAAA,CAAW,gBAAX,CAAL,IAAiCA,eAAR,CAAa,gBAAb,EAAkB,gBAAlB,CAAzB,IACaA,eAAR,CAAa,gBAAA,CAAI,gBAAJ,CAAb,EAAwB,IAAK,CAAA,GAA7B,CADL,GAIO,OAAO,gBAAA,CAAI,gBAAJ,CAAA,CAAU,IAAK,CAAA,GAAf,CAJd,GAES,CAAA,CAFT;AAD+C,GAAjD;AAQA,SAAO,kBAAP;AApK0B,CAN5B,CAAA;AC2BQJ,mBAAR,CAAiB,KAAjB,EAMI,QAAQ,CAAC,YAAD,CAAY;AA2QL,UAAA,cAAQ,EAAG;AAC1B,QAAI,UAAoD,EAAxD;AAEA,WADA,OAAK,CAAA,QACL,GADgB,OAAK,CAAA,IACrB,GAD4B,OAAK,CAAA,IACjC,GADwC,OACxC;AAH0B;AAxBT,UAAA,gBAAQ,CAAC,eAAD,EAAM,gBAAN,CAAY;AACrC,QAAI,oBAAQ,eAAA,CAtLH,CAsLG,CAAZ;AACA,WAAeC,4BAAR,CAA0B,QAAQ,EAAG;AAC1C,UAAI,iBAAJ,CAAW;AACT,aAAA,EAAO,iBAAM,CAAA,IAAb,IAAqB,eAAA,CAzLhB,CAyLgB,CAArB,CAAA;AACE,2BAAA,GAAQ,iBAAM,CAAA,QAAd;AADF;AAGA,aAAA,EAAO,iBAAM,CAAA,IAAb,IAAqB,iBAAM,CAAA,IAA3B,CAAA;AAEE,iBADA,iBACO,GADC,iBAAM,CAAA,IACP,EAAA,CAAC,KAAM,CAAA,CAAP,EAAc,MAAO,gBAAA,CAAK,iBAAL,CAArB,CAAP;AAFF;AAIA,yBAAA,GAAQ,IAAR;AARS;AAUX,aAAO,CAAC,KAAM,CAAA,CAAP,EAAa,MAAO,IAAK,EAAzB,CAAP;AAX0C,KAArC,CAAP;AAFqC;AAvBnB,UAAA,iBAAQ,CAAC,gCAAD,EAAM,gBAAN,CAAW;AAkEjC,QAAA,8DAjEW,gBAiEX,IAAc,MAjEH,iBAiEX;AACQ,YAAZ,IAAI,2DAAJ,IAAgC,UAAhC,IAAwB,2DAAxB,GAEO,QAAM,CAAA,GAAN,CApEQ,gBAoER,CAAL,GAKA,2DALA,GAKO,QAAM,CAAA,GAAN,CAzEM,gBAyEN,CALP,IACM,2DACJ,GADS,EACT,GADe,EAAE,WACjB,EAAA,QAAM,CAAA,GAAN,CAtEW,gBAsEX,EAAe,2DAAf,CAFF,CAFF,GAUA,2DAVA;AAUO,QAVP,GAlEe,gBAkEf;AAjEA,QAAI,UAAO,gCAAA,CArKF,CAqKE,CAAA,CAAU,2DAAV,CAAX;AACA,QAAI,OAAJ,IAAoBG,eAAR,CAAa,gCAAA,CAtKhB,CAsKgB,CAAb,EAAwB,2DAAxB,CAAZ;AACE,WAAS,gCAAT,GAAiB,CAAjB,EAAoB,gCAApB,GAA4B,OAAK,CAAA,MAAjC,EAAyC,gCAAA,EAAzC,CAAkD;AAChD,YAAI,oBAAQ,OAAA,CAAK,gCAAL,CAAZ;AACA,YAAK,gBAAL,KAAa,gBAAb,IAAoB,iBAAM,CAAA,GAA1B,KAAkC,iBAAM,CAAA,GAAxC,IAAgD,gBAAhD,KAAwD,iBAAM,CAAA,GAA9D;AACE,iBAAO,CAAC,GAAI,2DAAL,EAAS,KAAM,OAAf,EAAqB,MAAO,gCAA5B,EAAmC,MAAO,iBAA1C,CAAP;AADF;AAFgD;AADpD;AAQA,WAAO,CAAC,GAAI,2DAAL,EAAS,KAAM,OAAf,EAAqB,MAAO,CAAC,CAA7B,EAAgC,MAAO,IAAA,EAAvC,CAAP;AAXqC;AAjJrB,UAAA,eAAQ,CAAC,sCAAD,CAAe;AACvC,QAAA,CAnBS,CAmBT,CAAA,GAAa,EAAb;AACA,QAAA,CAfS,CAeT,CAAA,GAAa,aAAA,EAAb;AAMA,QAAK,CAAA,IAAL,GAAY,CAAZ;AAEA,QAAI,sCAAJ,CAAkB;AACZ,4CAAA,GAAeS,uBAAR,CAAqB,sCAArB,CAAP;AAEJ,WADA,IAAI,gCACJ,EAAO,CAAuB,CAArB,gCAAqB,GAAb,sCAAK,CAAA,IAAL,EAAa,EAAA,IAA9B,CAAA;AACM,wCAEJ,GADwD,gCAAO,CAAA,KAC/D,EAAA,IAAK,CAAA,GAAL,CAA6B,gCAAA,CAAK,CAAL,CAA7B,EAA6D,gCAAA,CAAK,CAAL,CAA7D,CAAA;AAHF;AAHgB;AAVqB;AAhCvC,MApCF,QAAqB,EAAG;AACtB,QACI,CAAC,YADL,IAEwB,UAFxB,IAEI,MAAO,aAFX,IAGI,CAAC,YAAU,CAAA,SAAU,CAAA,OAHzB,IAI0B,UAJ1B,IAII,MAAO,OAAO,CAAA,IAJlB;AAKE,aAAO,CAAA,CAAP;AALF;AAQA,OAAI;AAEF,UAAI,mBAAM,MAAO,CAAA,IAAP,CAAY,CAAC,EAAG,CAAJ,CAAZ,CAAV,EACI,kBAAM,IAAI,YAAJ,CAAsBA,uBAAR,CAAqB,CAAC,CAAC,gBAAD,EAAM,GAAN,CAAD,CAArB,CAAd,CADV;AAEA,UAAoB,GAApB,IAAI,eAAI,CAAA,GAAJ,CAAQ,gBAAR,CAAJ,IAAuC,CAAvC,IAA2B,eAAI,CAAA,IAA/B,IAA4C,eAAI,CAAA,GAAJ,CAAQ,CAAC,EAAG,CAAJ,CAAR,CAA5C,IACI,eAAI,CAAA,GAAJ,CAAQ,CAAC,EAAG,CAAJ,CAAR,EAAgB,GAAhB,CADJ,IAC4B,eAD5B,IAC+C,CAD/C,IACmC,eAAI,CAAA,IADvC;AAEE,eAAO,CAAA,CAAP;AAFF;AAIA,UAA6B,mBAAO,eAAI,CAAA,OAAJ,EAApC,EACI,oBAAO,gBAAK,CAAA,IAAL,EADX;AAEA,UAAI,iBAAK,CAAA,IAAT,IAAiB,iBAAK,CAAA,KAAL,CAAW,CAAX,CAAjB,IAAkC,gBAAlC,IAA0D,GAA1D,IAAyC,iBAAK,CAAA,KAAL,CAAW,CAAX,CAAzC;AACE,eAAO,CAAA,CAAP;AADF;AAGA,uBAAA,GAAO,gBAAK,CAAA,IAAL,EAAP;AACA,aAAI,iBAAK,CAAA,IAAT,IAAoC,CAApC,IAAiB,iBAAK,CAAA,KAAL,CAAW,CAAX,CAAc,CAAA,CAA/B,IACqB,GADrB,IACI,iBAAK,CAAA,KAAL,CAAW,CAAX,CADJ,IAC4B,CAAC,gBAAK,CAAA,IAAL,EAAY,CAAA,IADzC,GAES,CAAA,CAFT,GAIO,CAAA,CAJP;AAdE,KAmBF,QAAO,eAAP,CAAY;AACZ,aAAO,CAAA,CAAP;AADY;AA5BQ,GAoClB,EAAJ;AAAoB,WAAO,YAAP;AAApB;AAIF,MAAI,WAAQ,IAAI,OAAJ,EAAZ;AAmDA,gBAAY,CAAA,SAAU,CAAA,GAAtB,GAA4B,QAAQ,CAAC,gBAAD,EAAM,mBAAN,CAAa;AAE/C,oBAAA,GAAc,CAAR,KAAA,gBAAA,GAAY,CAAZ,GAAgB,gBAAtB;AACA,QAAI,gBAAI,gBAAA,CAAc,IAAd,EAAoB,gBAApB,CAAR;AACK,iBAAE,CAAA,IAAP,KACE,aAAE,CAAA,IADJ,GACY,IAAA,CA9CH,CA8CG,CAAA,CAAW,aAAE,CAAA,EAAb,CADZ,GAC+B,EAD/B;AAGK,iBAAE,CAAA,KAAP,GAaE,aAAE,CAAA,KAAM,CAAA,KAbV,GAakB,mBAblB,IACE,aAAE,CAAA,KAUF,GAVU,CACR,KAAM,IAAA,CA7CD,CA6CC,CADE,EAER,SAAU,IAAA,CA9CL,CA8CK,CAAW,CAAA,QAFb,EAGR,KAAM,IAAA,CA/CD,CA+CC,CAHE,EAIR,IAAK,gBAJG,EAKR,MAAO,mBALC,CAUV,EAHA,aAAE,CAAA,IAAK,CAAA,IAAP,CAAY,aAAE,CAAA,KAAd,CAGA,EAFA,IAAA,CApDO,CAoDP,CAAW,CAAA,QAAS,CAAA,IAEpB,GAF2B,aAAE,CAAA,KAE7B,EADA,IAAA,CArDO,CAqDP,CAAW,CAAA,QACX,GADsB,aAAE,CAAA,KACxB,EAAA,IAAK,CAAA,IAAL,EAXF,CAAA;AAeA,WAAO,IAAP;AAtB+C,GAAjD;AA2BA,gBAAY,CAAA,SAAU,CAAA,MAAtB,GAA+B,QAAQ,CAAC,2BAAD,CAAM;AACvC,+BAAA,GAAI,gBAAA,CAAc,IAAd,EAAoB,2BAApB,CAAJ;AACJ,WAAI,2BAAE,CAAA,KAAN,IAAe,2BAAE,CAAA,IAAjB,IACE,2BAAE,CAAA,IAAK,CAAA,MAAP,CAAc,2BAAE,CAAA,KAAhB,EAAuB,CAAvB,CAMO,EALF,2BAAE,CAAA,IAAK,CAAA,MAKL,IALa,OAAO,IAAA,CAxEpB,CAwEoB,CAAA,CAAW,2BAAE,CAAA,EAAb,CAKpB,EAJP,2BAAE,CAAA,KAAM,CAAA,QAAS,CAAA,IAIV,GAJiB,2BAAE,CAAA,KAAM,CAAA,IAIzB,EAHP,2BAAE,CAAA,KAAM,CAAA,IAAK,CAAA,QAGN,GAHiB,2BAAE,CAAA,KAAM,CAAA,QAGzB,EAFP,2BAAE,CAAA,KAAM,CAAA,IAED,GAFQ,IAER,EADP,IAAK,CAAA,IAAL,EACO,EAAA,CAAA,CAPT;AASO,KAAA,CATP;AAF2C,GAA7C;AAgBA,gBAAY,CAAA,SAAU,CAAA,KAAtB,GAA8B,QAAQ,EAAG;AACvC,QAAA,CArFS,CAqFT,CAAA,GAAa,EAAb;AACA,QAAA,CAjFS,CAiFT,CAAA,GACI,IAAA,CAlFK,CAkFL,CAAW,CAAA,QADf,GAC0B,aAAA,EAD1B;AAEA,QAAK,CAAA,IAAL,GAAY,CAAZ;AAJuC,GAAzC;AASA,gBAAY,CAAA,SAAU,CAAA,GAAtB,GAA4B,QAAQ,CAAC,gBAAD,CAAM;AACxC,WAAO,CAAC,CAAE,gBAAA,CAAc,IAAd,EAAoB,gBAApB,CAAyB,CAAA,KAAnC;AADwC,GAA1C;AAMA,gBAAY,CAAA,SAAU,CAAA,GAAtB,GAA4B,QAAQ,CAAC,+BAAD,CAAM;AAGxC,YAFI,+BAEJ,GAFY,gBAAA,CAAc,IAAd,EAAoB,+BAApB,CAAyB,CAAA,KAErC,KACwB,+BAAM,CAAA,KAD9B;AAHwC,GAA1C;AASA,gBAAY,CAAA,SAAU,CAAA,OAAtB,GAAgC,QAAQ,EAAG;AACzC,WAAO,eAAA,CAAa,IAAb,EAAwD,QAAQ,CAC9B,iBAD8B,CACvB;AAC9C,aAAQ,CAAC,iBAAM,CAAA,GAAP,EAAY,iBAAM,CAAA,KAAlB,CAAR;AAD8C,KADzC,CAAP;AADyC,GAA3C;AASA,gBAAY,CAAA,SAAU,CAAA,IAAtB,GAA6B,QAAQ,EAAG;AACtC,WAAO,eAAA,CAAa,IAAb,EAAwC,QAAQ,CACd,iBADc,CACP;AAC9C,aAAO,iBAAM,CAAA,GAAb;AAD8C,KADzC,CAAP;AADsC,GAAxC;AASA,gBAAY,CAAA,SAAU,CAAA,MAAtB,GAA+B,QAAQ,EAAG;AACxC,WAAO,eAAA,CAAa,IAAb,EAA0C,QAAQ,CAChB,iBADgB,CACT;AAC9C,aAAO,iBAAM,CAAA,KAAb;AAD8C,KADzC,CAAP;AADwC,GAA1C;AASA,gBAAY,CAAA,SAAU,CAAA,OAAtB,GAAgC,QAAQ,CAAC,sBAAD,EAAW,wBAAX,CAAwB;AAG9D,SAFA,IAAI,mBAAO,IAAK,CAAA,OAAL,EAAX,EACI,gCACJ,EAAO,CAAsB,CAApB,gCAAoB,GAAb,gBAAK,CAAA,IAAL,EAAa,EAAA,IAA7B,CAAA;AACM,sCACJ,GADY,gCAAK,CAAA,KACjB,EAAA,sBAAS,CAAA,IAAT,CACsB,wBADtB,EAE0B,gCAAA,CAAM,CAAN,CAF1B,EAGwB,gCAAA,CAAM,CAAN,CAHxB,EAII,IAJJ,CAAA;AAFF;AAH8D,GAAhE;AAckB,gBAAY,CAAA,SAAb,CAAwB,MAAO,CAAA,QAA/B,CAAA,GACb,cAAY,CAAA,SAAU,CAAA,OADT;AAwEjB,MAAI,cAAW,CAAf;AAuBA,SAAO,cAAP;AA7SsB,CANxB,CAAA;ACvB0B,QAAA,2BAAQ,CAAC,oBAAD,EAAU,eAAV,EAAe,gBAAf,CAAqB;AACrD,MAAe,IAAf,IAAI,oBAAJ;AACE,UAAM,IAAI,SAAJ,CACF,wCADE,GACyC,gBADzC,GAEF,gCAFE,CAAN;AADF;AAKA,MAAI,eAAJ,YAAmB,MAAnB;AACE,UAAM,IAAI,SAAJ,CACF,qCADE,GACsC,gBADtC,GAEF,mCAFE,CAAN;AADF;AAKA,SAAO,oBAAP,GAAiB,EAAjB;AAXqD;ACR/Cb,mBAAR,CAAiB,2BAAjB,EAA8C,QAAQ,CAAC,gBAAD,CAAO;AAC3D,SAAI,gBAAJ,GAAiB,gBAAjB,GAYe,QAAQ,CAAC,wBAAD,EAAe,oCAAf,CAA6B;AAElD,QAAI,qBAAiBc,0BAAR,CAAwB,IAAxB,EAA8B,wBAA9B,EAA4C,UAA5C,CAAb;AAEqB,QAAK,EAA1B,KAAI,oCAAJ,KAA6B,oCAA7B,GAA4C,kBAAO,CAAA,MAAnD;AACI,wCAAA,GAAI,IAAK,CAAA,GAAL,CAAS,CAAT,EAAY,IAAK,CAAA,GAAL,CAAS,oCAAT,GAAwB,CAAxB,EAA2B,kBAAO,CAAA,MAAlC,CAAZ,CAAJ;AAEJ,SADA,IAAI,OAAI,wBAAa,CAAA,MACrB,EAAW,CAAX,GAAO,IAAP,IAAoB,CAApB,GAAgB,oCAAhB,CAAA;AACE,UAAI,kBAAA,CAAO,EAAE,oCAAT,CAAJ,IAAmB,wBAAA,CAAa,EAAE,IAAf,CAAnB;AAAsC,eAAO,CAAA,CAAP;AAAtC;AADF;AAGA,WAAY,CAAZ,IAAO,IAAP;AAVkD,GAZpD;AAD2D,CAA7D,CAAA;ACW4B,QAAA,6BAAQ,CAAC,iBAAD,EAAQ,qBAAR,CAAmB;AAEjD,mBAAJ,YAAqB,MAArB,KAAqC,iBAArC,IAA6C,EAA7C;AACA,MAAI,iBAAI,CAAR,EACI,UAAO,CAAA,CADX,EAEI,mBAAO,CACT,KAAM,QAAQ,EAAG;AAGf,QAAI,CAAC,OAAL,IAAa,cAAb,GAAiB,iBAAM,CAAA,MAAvB,CAA+B;AAC7B,UAAI,sBAAQ,cAAA,EAAZ;AACA,aAAO,CAAC,MAAO,qBAAA,CAAU,mBAAV,EAAiB,iBAAA,CAAM,mBAAN,CAAjB,CAAR,EAAwC,KAAM,CAAA,CAA9C,CAAP;AAF6B;AAI/B,WAAA,GAAO,CAAA,CAAP;AACA,WAAO,CAAC,KAAM,CAAA,CAAP,EAAa,MAAO,IAAK,EAAzB,CAAP;AARe,GADR,CAFX;AAcA,kBAAA,CAAK,MAAO,CAAA,QAAZ,CAAA,GAAwB,QAAQ,EAAG;AAAE,WAAO,gBAAP;AAAF,GAAnC;AACA,SAAO,gBAAP;AAlBqD;ACX/Cd,mBAAR,CAAiB,sBAAjB,EAAyC,QAAQ,CAAC,iBAAD,CAAO;AACtD,SAAI,iBAAJ,GAAiB,iBAAjB,GAQe,QAAQ,EAAG;AACxB,WAAee,4BAAR,CAA0B,IAA1B,EAAgC,QAAQ,CAAC,cAAD,CAAI;AAAE,aAAO,cAAP;AAAF,KAA5C,CAAP;AADwB,GAR1B;AADsD,CAAxD,CAAA;ACAQf,mBAAR,CAAiB,6BAAjB,EAAgD,QAAQ,CAAC,iBAAD,CAAO;AAC7D,SAAI,iBAAJ,GAAiB,iBAAjB,GAYe,QAAQ,CAAC,wBAAD,EAAe,oCAAf,CAA6B;AAElD,QAAI,qBAAiBc,0BAAR,CAAwB,IAAxB,EAA8B,wBAA9B,EAA4C,YAA5C,CAAb,EAEI,YAAS,kBAAO,CAAA,MAFpB,EAGI,eAAY,wBAAa,CAAA,MAH7B;AAII,wCAAA,GAAI,IAAK,CAAA,GAAL,CACJ,CADI,EAEJ,IAAK,CAAA,GAAL,CAAgC,oCAAhC,GAAgD,CAAhD,EAAmD,kBAAO,CAAA,MAA1D,CAFI,CAAJ;AAIJ,SADA,IAAI,gBAAI,CACR,EAAO,aAAP,GAAW,YAAX,IAAwB,oCAAxB,GAA4B,SAA5B,CAAA;AACE,UAAI,kBAAA,CAAO,oCAAA,EAAP,CAAJ,IAAmB,wBAAA,CAAa,aAAA,EAAb,CAAnB;AAAsC,eAAO,CAAA,CAAP;AAAtC;AADF;AAGA,WAAO,aAAP,IAAY,YAAZ;AAbkD,GAZpD;AAD6D,CAA/D,CAAA;ACDQd,mBAAR,CAAiB,iBAAjB,EAAoC,QAAQ,CAAC,iBAAD,CAAO;AACjD,SAAI,iBAAJ,GAAiB,iBAAjB,GAUe,QAAQ,CAAC,cAAD,CAAI;AACzB,WAAiB,QAAjB,KAAI,MAAO,eAAX,GAAkC,CAAA,CAAlC,GACO,CAAC,KAAA,CAAM,cAAN,CADR,IAC0B,QAD1B,KACoB,cADpB,IAC4C,CAAC,QAD7C,KACsC,cADtC;AADyB,GAV3B;AADiD,CAAnD,CAAA;ACIQA,mBAAR,CAAiB,KAAjB,EAMI,QAAQ,CAAC,YAAD,CAAY;AAyDJ,UAAA,eAAQ,CAAC,sCAAD,CAAe;AAEvC,QAAK,CAAA,GAAL,GAAY,IAAI,GAAJ,EAAZ;AACA,QAAI,sCAAJ,CAAkB;AACZ,4CAAA,GAAea,uBAAR,CAAqB,sCAArB,CAAP;AAEJ,WADA,IAAI,iBACJ,EAAO,CAAuB,CAArB,iBAAqB,GAAb,sCAAK,CAAA,IAAL,EAAa,EAAA,IAA9B,CAAA;AAEE,YAAK,CAAA,GAAL,CADmD,iBAAO,CAAA,KAC1D,CAAA;AAFF;AAHgB;AAWlB,QAAK,CAAA,IAAL,GAAY,IAAK,CAAA,GAAK,CAAA,IAAtB;AAduC;AAdvC,MApCF,QAAqB,EAAG;AACtB,QACI,CAAC,YADL,IAEwB,UAFxB,IAEI,MAAO,aAFX,IAGI,CAAC,YAAU,CAAA,SAAU,CAAA,OAHzB,IAI0B,UAJ1B,IAII,MAAO,OAAO,CAAA,IAJlB;AAKE,aAAO,CAAA,CAAP;AALF;AAQA,OAAI;AAEF,UAAI,sBAAQ,MAAO,CAAA,IAAP,CAAY,CAAC,EAAG,CAAJ,CAAZ,CAAZ,EACI,SAAM,IAAI,YAAJ,CAAsBA,uBAAR,CAAqB,CAAC,mBAAD,CAArB,CAAd,CADV;AAEA,UAAI,CAAC,MAAI,CAAA,GAAJ,CAAQ,mBAAR,CAAL,IAAmC,CAAnC,IAAuB,MAAI,CAAA,IAA3B,IAAwC,MAAI,CAAA,GAAJ,CAAQ,mBAAR,CAAxC,IAA0D,MAA1D,IACgB,CADhB,IACI,MAAI,CAAA,IADR,IACqB,MAAI,CAAA,GAAJ,CAAQ,CAAC,EAAG,CAAJ,CAAR,CADrB,IACwC,MADxC,IAC2D,CAD3D,IAC+C,MAAI,CAAA,IADnD;AAEE,eAAO,CAAA,CAAP;AAFF;AAIA,UAAI,mBAAO,MAAI,CAAA,OAAJ,EAAX,EACI,oBAAO,gBAAK,CAAA,IAAL,EADX;AAEA,UAAI,iBAAK,CAAA,IAAT,IAAiB,iBAAK,CAAA,KAAL,CAAW,CAAX,CAAjB,IAAkC,mBAAlC,IAA2C,iBAAK,CAAA,KAAL,CAAW,CAAX,CAA3C,IAA4D,mBAA5D;AACE,eAAO,CAAA,CAAP;AADF;AAGA,uBAAA,GAAO,gBAAK,CAAA,IAAL,EAAP;AACA,aAAI,iBAAK,CAAA,IAAT,IAAiB,iBAAK,CAAA,KAAL,CAAW,CAAX,CAAjB,IAAkC,mBAAlC,IAA8D,CAA9D,IAA2C,iBAAK,CAAA,KAAL,CAAW,CAAX,CAAc,CAAA,CAAzD,IACI,iBAAK,CAAA,KAAL,CAAW,CAAX,CADJ,IACqB,iBAAK,CAAA,KAAL,CAAW,CAAX,CADrB,GAES,CAAA,CAFT,GAIO,gBAAK,CAAA,IAAL,EAAY,CAAA,IAJnB;AAdE,KAmBF,QAAO,eAAP,CAAY;AACZ,aAAO,CAAA,CAAP;AADY;AA5BQ,GAoClB,EAAJ;AAAoB,WAAO,YAAP;AAApB;AAiCF,gBAAY,CAAA,SAAU,CAAA,GAAtB,GAA4B,QAAQ,CAAC,mBAAD,CAAQ;AAE1C,uBAAA,GAAkB,CAAV,KAAA,mBAAA,GAAc,CAAd,GAAkB,mBAA1B;AACA,QAAK,CAAA,GAAK,CAAA,GAAV,CAAc,mBAAd,EAAqB,mBAArB,CAAA;AACA,QAAK,CAAA,IAAL,GAAY,IAAK,CAAA,GAAK,CAAA,IAAtB;AACA,WAAO,IAAP;AAL0C,GAA5C;AAUA,gBAAY,CAAA,SAAU,CAAA,MAAtB,GAA+B,QAAQ,CAAC,mCAAD,CAAQ;AACzC,uCAAA,GAAS,IAAK,CAAA,GAAK,CAAA,MAAV,CAAiB,mCAAjB,CAAT;AACJ,QAAK,CAAA,IAAL,GAAY,IAAK,CAAA,GAAK,CAAA,IAAtB;AACA,WAAO,mCAAP;AAH6C,GAA/C;AAQA,gBAAY,CAAA,SAAU,CAAA,KAAtB,GAA8B,QAAQ,EAAG;AACvC,QAAK,CAAA,GAAK,CAAA,KAAV,EAAA;AACA,QAAK,CAAA,IAAL,GAAY,CAAZ;AAFuC,GAAzC;AAOA,gBAAY,CAAA,SAAU,CAAA,GAAtB,GAA4B,QAAQ,CAAC,mBAAD,CAAQ;AAC1C,WAAO,IAAK,CAAA,GAAK,CAAA,GAAV,CAAc,mBAAd,CAAP;AAD0C,GAA5C;AAMA,gBAAY,CAAA,SAAU,CAAA,OAAtB,GAAgC,QAAQ,EAAG;AACzC,WAAO,IAAK,CAAA,GAAK,CAAA,OAAV,EAAP;AADyC,GAA3C;AAMA,gBAAY,CAAA,SAAU,CAAA,MAAtB,GAA+B,QAAQ,EAAG;AACxC,WAAO,IAAK,CAAA,GAAK,CAAA,MAAV,EAAP;AADwC,GAA1C;AAMA,gBAAY,CAAA,SAAU,CAAA,IAAtB,GAA6B,cAAY,CAAA,SAAU,CAAA,MAAnD;AAGkB,gBAAY,CAAA,SAAb,CAAwB,MAAO,CAAA,QAA/B,CAAA,GACb,cAAY,CAAA,SAAU,CAAA,MADT;AAKjB,gBAAY,CAAA,SAAU,CAAA,OAAtB,GAAgC,QAAQ,CAAC,sBAAD,EAAW,wBAAX,CAAwB;AAC9D,QAAI,kBAAM,IAAV;AACA,QAAK,CAAA,GAAK,CAAA,OAAV,CAAkB,QAAQ,CAAC,mBAAD,CAAQ;AAChC,aAAO,sBAAS,CAAA,IAAT,CAAgC,wBAAhC,EAA8C,mBAA9C,EAAqD,mBAArD,EAA4D,eAA5D,CAAP;AADgC,KAAlC,CAAA;AAF8D,GAAhE;AAQA,SAAO,cAAP;AAvIsB,CANxB,CAAA;ACJQb,mBAAR,CAAiB,YAAjB,EAA+B,QAAQ,CAAC,iBAAD,CAAO;AAC5C,SAAI,iBAAJ,GAAiB,iBAAjB,GAoBe,QAAQ,CAAC,qBAAD,EAAY,qBAAZ,EAAuB,wBAAvB,CAAoC;AACzD,yBAAA,GAAyB,IAAb,IAAA,qBAAA,GAAoB,qBAApB,GAAgC,QAAQ,CAAC,cAAD,CAAI;AAAE,aAAO,cAAP;AAAF,KAAxD;AACA,QAAI,qBAAS,EAAb,EAEI,iDAAoC,WAApC,IAAmB,MAAO,OAA1B,IAAmD,MAAO,CAAA,QAA1D,IACmB,qBAAD,CAAY,MAAO,CAAA,QAAnB,CAHtB;AAIA,QAA+B,UAA/B,IAAI,MAAO,+CAAX,CAA2C;AACzC,2BAAA,GAAY,8CAAiB,CAAA,IAAjB,CAAsB,qBAAtB,CAAZ;AAGA,WADA,IAAI,mBAAI,CACR,EAAO,CAA2B,CAAzB,8CAAyB,GAAlB,qBAAU,CAAA,IAAV,EAAkB,EAAA,IAAlC,CAAA;AACE,0BAAO,CAAA,IAAP,CACI,qBAAU,CAAA,IAAV,CAAiC,wBAAjC,EAA+C,8CAAK,CAAA,KAApD,EAA2D,gBAAA,EAA3D,CADJ,CAAA;AADF;AAJyC,KAA3C;AAUE,WADI,8CACK,GADC,qBAAU,CAAA,MACX,EAAA,gBAAA,GAAI,CAAb,EAAgB,gBAAhB,GAAoB,8CAApB,EAAyB,gBAAA,EAAzB;AACE,0BAAO,CAAA,IAAP,CACI,qBAAU,CAAA,IAAV,CAAiC,wBAAjC,EAA+C,qBAAA,CAAU,gBAAV,CAA/C,EAA6D,gBAA7D,CADJ,CAAA;AADF;AAVF;AAeA,WAAO,kBAAP;AArByD,GApB3D;AAD4C,CAA9C,CAAA;ACAQA,mBAAR,CAAiB,WAAjB,EAA8B,QAAQ,CAAC,iBAAD,CAAO;AAC3C,SAAI,iBAAJ,GAAiB,iBAAjB,GAee,QAAQ,CAAC,gBAAD,EAAO,iBAAP,CAAc;AACnC,WAAI,gBAAJ,KAAa,iBAAb,GAEmB,CAFnB,KAEU,gBAFV,IAE0B,CAF1B,GAE8B,gBAF9B,KAEuC,CAFvC,GAEkE,iBAFlE,GAKU,gBALV,KAKmB,gBALnB,IAK6B,iBAL7B,KAKuC,iBALvC;AADmC,GAfrC;AAD2C,CAA7C,CAAA;ACCQA,mBAAR,CAAiB,0BAAjB,EAA6C,QAAQ,CAAC,iBAAD,CAAO;AAC1D,SAAI,iBAAJ,GAAiB,iBAAjB,GAce,QAAQ,CAAC,yBAAD,EAAgB,sCAAhB,CAA+B;AACpD,QAAI,oBAAQ,IAAZ;AACI,qBAAJ,YAAqB,MAArB,KACE,iBADF,GACsC,MAAA,CAAO,iBAAP,CADtC;AAGA,QAAI,kBAAM,iBAAM,CAAA,MAAhB;AACI,0CAAA,GAAI,sCAAJ,IAAqB,CAArB;AAIJ,SAHQ,CAGR,GAHI,sCAGJ,KAFE,sCAEF,GAFM,IAAK,CAAA,GAAL,CAAS,sCAAT,GAAa,eAAb,EAAkB,CAAlB,CAEN,GAAO,sCAAP,GAAW,eAAX,EAAgB,sCAAA,EAAhB,CAAqB;AACnB,UAAI,uBAAU,iBAAA,CAAM,sCAAN,CAAd;AACA,UAAI,oBAAJ,KAAgB,yBAAhB,IAAiC,MAAO,CAAA,EAAP,CAAU,oBAAV,EAAmB,yBAAnB,CAAjC;AACE,eAAO,CAAA,CAAP;AADF;AAFmB;AAMrB,WAAO,CAAA,CAAP;AAhBoD,GAdtD;AAD0D,CAA5D,CAAA;ACAQA,mBAAR,CAAiB,2BAAjB,EAA8C,QAAQ,CAAC,iBAAD,CAAO;AAC3D,SAAI,iBAAJ,GAAiB,iBAAjB,GAYe,QAAQ,CAAC,wBAAD,EAAe,wBAAf,CAA6B;AAGlD,WAA2D,CAAC,CAA5D,KADqBc,0BAAR,CAAwB,IAAxB,EAA8B,wBAA9B,EAA4C,UAA5C,CACC,CAAA,OAAP,CAAe,wBAAf,EAA6B,wBAA7B,IAA6C,CAA7C,CAAP;AAHkD,GAZpD;AAD2D,CAA7D,CAAA;ACIQd,mBAAR,CAAiB,wBAAjB,EAA2C,QAAQ,CAAC,iBAAD,CAAO;AACxD,SAAI,iBAAJ,GAAiB,iBAAjB,GAUe,QAAQ,EAAG;AACxB,WAAee,4BAAR,CAA0B,IAA1B,EAAgC,QAAQ,CAAC,aAAD,EAAI,aAAJ,CAAO;AAAE,aAAO,aAAP;AAAF,KAA/C,CAAP;AADwB,GAV1B;AADwD,CAA1D,CAAA;ACLQf,mBAAR,CAAiB,sBAAjB,EAAyC,QAAQ,CAAC,iBAAD,CAAO;AACtD,SAAI,iBAAJ,GAAiB,iBAAjB,GAae,QAAQ,CAAC,mBAAD,EAAQ,wBAAR,EAAmB,mBAAnB,CAA4B;AACjD,QAAI,sBAAS,IAAK,CAAA,MAAd,IAAwB,CAA5B;AACgB,KAAhB,GAAI,wBAAJ,KACE,wBADF,GACc,IAAK,CAAA,GAAL,CAAS,CAAT,EAAY,mBAAZ,GAA4C,wBAA5C,CADd;AAGA,QAAe,IAAf,IAAI,mBAAJ,IAAuB,mBAAvB,GAAiC,mBAAjC;AAAyC,yBAAA,GAAU,mBAAV;AAAzC;AACA,uBAAA,GAAU,MAAA,CAAO,mBAAP,CAAV;AACc,KAAd,GAAI,mBAAJ,KAAiB,mBAAjB,GAA2B,IAAK,CAAA,GAAL,CAAS,CAAT,EAAY,mBAAZ,GAAqB,mBAArB,CAA3B;AACA,SAAS,wBAAT,GAAa,MAAA,CAAO,wBAAP,IAAoB,CAApB,CAAb,EAAqC,wBAArC,GAAyC,mBAAzC,EAAkD,wBAAA,EAAlD;AACE,UAAA,CAAK,wBAAL,CAAA,GAAU,mBAAV;AADF;AAGA,WAAO,IAAP;AAXiD,GAbnD;AADsD,CAAxD,CAAA;ACKyB,QAAA,0BAAQ,CAAC,iBAAD,CAAO;AACtC,SAAI,iBAAJ,GAAiB,iBAAjB,GACO,KAAM,CAAA,SAAU,CAAA,IADvB;AADsC;AAKhCA,mBAAR,CACI,0BADJ,EACwCgB,yBADxC,CAAA;AAEQhB,mBAAR,CACI,2BADJ,EACyCgB,yBADzC,CAAA;AAEQhB,mBAAR,CACI,kCADJ,EACgDgB,yBADhD,CAAA;AAEQhB,mBAAR,CACI,2BADJ,EACyCgB,yBADzC,CAAA;AAEQhB,mBAAR,CACI,4BADJ,EAC0CgB,yBAD1C,CAAA;AAEQhB,mBAAR,CACI,2BADJ,EACyCgB,yBADzC,CAAA;AAEQhB,mBAAR,CACI,4BADJ,EAC0CgB,yBAD1C,CAAA;AAEQhB,mBAAR,CACI,6BADJ,EAC2CgB,yBAD3C,CAAA;AAEQhB,mBAAR,CACI,6BADJ,EAC2CgB,yBAD3C,CAAA;ACzBQhB,mBAAR,CAAiB,sBAAjB,EAAyC,QAAQ,CAAC,iBAAD,CAAO;AACtD,SAAI,iBAAJ,GAAiB,iBAAjB,GAaW,QAAQ,CAAC,iBAAD,CAAQ;AAEzB,qBAAA,GAAkB,IAAA,EAAV,KAAA,iBAAA,GAAsB,CAAtB,GAA0B,iBAAlC;AACA,QAAI,eAAY,EAAhB;AAWA,SAAM,CAAA,SAAU,CAAA,OAAQ,CAAA,IAAxB,CAA6B,IAA7B,EAV8B,QAAQ,CAAC,0BAAD,CAAU;AAC1C,WAAM,CAAA,OAAN,CAAc,0BAAd,CAAJ,IAAsC,CAAtC,GAA8B,iBAA9B,IACM,0BACJ,GADY,KAAM,CAAA,SAAU,CAAA,IAAK,CAAA,IAArB,CAA0B,0BAA1B,EAAmC,iBAAnC,GAA2C,CAA3C,CACZ,EAAA,YAAU,CAAA,IAAK,CAAA,KAAf,CAAqB,YAArB,EAAgC,0BAAhC,CAFF,IAIE,YAAU,CAAA,IAAV,CAAe,0BAAf,CAJF;AAD8C,KAUhD,CAAA;AACA,WAAO,YAAP;AAfyB,GAb3B;AADsD,CAAxD,CAAA;ACAQA,mBAAR,CAAiB,sBAAjB,EAAyC,QAAQ,CAAC,iBAAD,CAAO;AACtD,SAAI,iBAAJ,GAAiB,iBAAjB,GAae,QAAQ,CAAC,qDAAD,EAAW,wBAAX,CAAwB;ACCS,KAAA,CAAA;ADA1B,UAAA,6BAAA,IAAA;ACC1B,gCAAJ,YAAqB,MAArB,KACE,0BADF,GACsC,MAAA,CAAO,0BAAP,CADtC;AAIA,WADA,IAAI,2BAAM,0BAAM,CAAA,MAAhB,EACS,yBAAI,CAAb,EAAgB,sBAAhB,GAAoB,wBAApB,EAAyB,sBAAA,EAAzB,CAA8B;AAC5B,YAAI,6BAAQ,0BAAA,CAAM,sBAAN,CAAZ;AACA,YDPkC,qDCOrB,CAAA,IAAT,CDPwC,wBCOxC,EAAuB,0BAAvB,EAA8B,sBAA9B,EAAiC,0BAAjC,CAAJ,CAA6C;AAAA,+DAAA,GAAiB,0BAAjB;AAAA,gBAAA,CAAA;AAAA;AAFjB;AAI9B,2DAAA,GAAkB,IAAK,EAAvB;AATwD;ADAtD,WAAyD,qDAAzD;AAD6C,GAb/C;AADsD,CAAxD,CAAA;A;;;;;AEwBA,IAAAiB,iBAMI,IANJA,IASIC,IATJ;AAk5DgBC,QAAA,iBAAQ,CAACC,qBAAD,EAAYC,sBAAZ,CAAwB;AAE9CC,UAASA,YAAQ,EAAG;;AACpBA,aAASC,CAAAA,SAAT,GAAqBF,sBAAWE,CAAAA,SAAhC;AACAH,uBAAUI,CAAAA,aAAV,GAAwBH,sBAAWE,CAAAA,SAAnC;AACAH,uBAAUG,CAAAA,SAAV,GAAsB,IAAID,WAAJ,EAAtB;AAEAF,uBAAUG,CAAAA,SAAUE,CAAAA,WAApB,GAAkCL,qBAAlC;AAmBAA,uBAAUM,CAAAA,MAAV,GAAiBC,QAAQ,CAACC,KAAD,EAAKC,aAAL,EAAiBC,qBAAjB,CAA2B;AAIlD,SADA,IAAIC,mBAAWC,KAAJ,CAAUC,SAAUC,CAAAA,MAApB,GAA6B,CAA7B,CAAX,EACSC,iBAAI,CAAb,EAAgBA,cAAhB,GAAoBF,SAAUC,CAAAA,MAA9B,EAAsCC,cAAA,EAAtC;AACEJ,sBAAA,CAAKI,cAAL,GAAS,CAAT,CAAA,GAAcF,SAAA,CAAUE,cAAV,CAAd;AADF;AAGA,WAAOd,sBAAWE,CAAAA,SAAX,CAAqBM,aAArB,CAAiCO,CAAAA,KAAjC,CAAuCR,KAAvC,EAA2CG,gBAA3C,CAAP;AAPkD,GAApD;AA1B8C;AAqP/BM,QAAA,kBAAQ,CAACC,aAAD,CAAI;AAC3B,SAAOA,aAAP;AAD2B;A,CC3lERC,QAAA,wEAAQ,CAACC,aAAD,EAAaC,oBAAb,EAAqBC,gBAArB,EAA0BC,OAA1B,CAAgC;AAAA,MACvDC,OAAIX,SAAUC,CAAAA,MADyC,EAEvDW,gBAAQ,CAAJ,GAAAD,IAAA,GAAYH,oBAAZ,GACK,IAAT,KAAAE,OAAA,GAAgBA,OAAhB,GAAuBG,MAAOC,CAAAA,wBAAP,CAAgCN,oBAAhC,EAAwCC,gBAAxC,CAAvB,GACgBC,OAJuC,EAKvDK,aALuD;AAQ3D,MAAuB,QAAvB,KAAI,MAAOC,QAAX,IAAmCA,OAAnC,IACmC,UADnC,KACI,MAAOA,QAAA,CAAA,QADX;AAEEJ,iBAAA,GAAII,OAAA,CAAA,QAAA,CAAoBT,aAApB,EAAgCC,oBAAhC,EAAwCC,gBAAxC,EAA6CC,OAA7C,CAAJ;AAFF;AAIE,SAAK,IAAIR,iBAAIK,aAAWN,CAAAA,MAAfC,GAAwB,CAAjC,EAAyC,CAAzC,IAAoCA,cAApC,EAA4CA,cAAA,EAA5C;AACE,UAAIa,aAAJ,GAAQR,aAAA,CAAWL,cAAX,CAAR;AACEU,qBAAA,IAAS,CAAJ,GAAAD,IAAA,GAAQI,aAAA,CAAEH,aAAF,CAAR,GAAmB,CAAJ,GAAAD,IAAA,GAAQI,aAAA,CAAEP,oBAAF,EAAUC,gBAAV,EAAeG,aAAf,CAAR,GAA4BG,aAAA,CAAEP,oBAAF,EAAUC,gBAAV,CAAhD,KAAmEG,aAAnE;AADF;AADF;AAJF;AAOA,SAAW,CAAJ,GAAAD,IAAA,IAASC,aAAT,IAAcC,MAAOI,CAAAA,cAAP,CAAsBT,oBAAtB,EAA8BC,gBAA9B,EAAmCG,aAAnC,CAAd,EAAqDA,aAA5D;AAf2D;AA2CxCM,QAAA,wEAAQ,CAACC,cAAD,EAAcC,gBAAd,CAA6B;AAGxD,MAAuB,QAAvB,KAAI,MAAOJ,QAAX,IAAmCA,OAAnC,IACmC,UADnC,KACI,MAAOA,QAAA,CAAA,QADX;AAEE,WAAOA,OAAA,CAAA,QAAA,CAAoBG,cAApB,EAAiCC,gBAAjC,CAAP;AAFF;AAHwD;A,CC9HnDC,QAAeA,mGAAS,CAC7BZ,gBAD6B,EAE7Ba,iBAF6B,CAGhB;AAAb,MAAAC,WAAA,IAAA,EAAA,KAAAA,QAAA,GAAQ,CAAA,CAAR,GAAAA,QAAA;AAKE,MAAA,qBAAA,EAFA,qBAEA;AALW,SAAAC,8CAAA,CAAA,QAAA,CAAA,wCAAA,CAAA;AAEb,QAAID,QAAJ;AACE,aAAA,qBAAA,GAA+B,EAA/B,EAAA,iCAAA,CAAA,wCAAA,EAAME,MAAOC,CAAAA,OAAQH,CAAAA,KAAMI,CAAAA,GAArB,EAAyB,qBAAA,CAAElB,gBAAF,CAAA,GAAQa,iBAAR,EAAA,qBAAzB,EAAN,EAAA,CAAA,CAAA;AADF;AAGE,yBAAA,GAA8B,EAA9B;AAAA,WAAA,iCAAA,CAAA,wCAAA,EAAMG,MAAOC,CAAAA,OAAQE,CAAAA,IAAKD,CAAAA,GAApB,EAAwB,qBAAA,CAAElB,gBAAF,CAAA,GAAQa,iBAAR,EAAA,qBAAxB,EAAN,EAAA,CAAA,CAAA;AALW,GAAA,CAAA;AAAA;AAaRO,QAAeA,kGAAQ,CAACpB,gBAAD,CAA2B;AAAb,MAAAc,oBAAA,IAAA,EAAA,KAAAA,iBAAA,GAAQ,CAAA,CAAR,GAAAA,iBAAA;AAAa,MACnDD,iBADmD;AAAA,SAAAE,8CAAA,CAAA,QAAA,CAAA,wCAAA,CAAA;AAAA,WAAA,wCAAA,CAAA,GAAA;AAAA,WAAA,CAAA;AAEvD,eAAID,iBAAJ,GACS,iCAAA,CAAA,wCAAA,EAAME,MAAOC,CAAAA,OAAQH,CAAAA,KAAMO,CAAAA,GAArB,CAAyB,CAACrB,gBAAD,CAAzB,CAAN,EAAA,CAAA,CADT,GAGS,iCAAA,CAAA,wCAAA,EAAMgB,MAAOC,CAAAA,OAAQE,CAAAA,IAAKE,CAAAA,GAApB,CAAwB,CAACrB,gBAAD,CAAxB,CAAN,EAAA,CAAA,CAHT;AAFuD,WAAA,CAAA;AAKrDa,yBAAA,GAAO,wCAAA,CAAA,GAAP;AADK,gD7BwVF,CAAA,GAAL,G6BxVO,C7BwVP;A6BxVO;AAJgD,WAAA,CAAA;AAGrDA,yBAAA,GAAO,wCAAA,CAAA,GAAP;AAHqD,WAAA,CAAA;AAOvD,eAAA,wCAAA,CAAA,MAAA,CAAOA,iBAAA,GAAOA,iBAAA,CAAKb,gBAAL,CAAP,GAAmB,EAA1B,CAAA;AAPuD;AAAA,GAAA,CAAA;AAAA;A,CCazDsB,QAASA,+CAAU,CAACC,eAAD,EAAkBC,QAAlB,CAAqC;AAEtD,MAAIC,KAAMC,CAAAA,iBAAV;AACED,SAAMC,CAAAA,iBAAN,CAAwB,IAAxB,EAA8BJ,8CAA9B,CAAA;AADF,QAEO;AACL,QAAMK,WAAYF,KAAJ,EAAYE,CAAAA,KAA1B;AACIA,YAAJ,KAEE,IAAKA,CAAAA,KAFP,GAEeA,QAFf;AAFK;AAQHJ,iBAAJ,KAEE,IAAKK,CAAAA,OAFP,GAEiBC,MAAA,CAAON,eAAP,CAFjB;AAKcO,MAAAA,EAAd,KAAIN,QAAJ,KAEE,IAAKA,CAAAA,KAFP,GAEeA,QAFf;AAjBsD;AA+BnD/C,gBAAL,CAAc6C,8CAAd,EAA0BG,KAA1B,CAAA;AAIAH,8CAAWzC,CAAAA,SAAUkD,CAAAA,IAArB,GAA4B,aAA5B;ACNAC,QAASA,+CAAc,CAACC,8CAAD,EAAiBC,cAAjB,CAA8B;AA2C7CC,gDAAAA,GA1CqBF,8CA0CAG,CAAAA,KAAR,CAAc,IAAd,CAAbD;AAMN,OALA,IAAIE,oCAAe,EAAnB,EAIMC,+BAAUH,8CAAW3C,CAAAA,MAArB8C,GAA8B,CAJpC,EAKS7C,yBAAI,CAAb,EAAgBA,sBAAhB,GAAoB6C,4BAApB,EAA6B7C,sBAAA,EAA7B;AAGE4C,qCAAA,IAAgBF,8CAAA,CAAW1C,sBAAX,CAAhB,IADaA,sBAAD8C,GAlD6BL,cAkDnB1C,CAAAA,MAAV+C,GAlD6BL,cAkDT,CAAKzC,sBAAL,CAApB8C,GAA8B,IAC1C;AAHF;ADxCQjB,gDCRGkB,CAAAA,IAAX,CAAgB,IAAhB,EAqDOH,iCArDP,GAqDsBF,8CAAA,CAAWG,4BAAX,CArDtB,CAAA;AADmD;AAUhD7D,gBAAL,CAAcuD,8CAAd,EAA8BV,8CAA9B,CAAA;AAIAU,8CAAenD,CAAAA,SAAUkD,CAAAA,IAAzB,GAAgC,gBAAhC;ACjEwB,IAAA,uCAAA;ACwCtBhD,QAAA,gCAAW,CAAC0D,mBAAD,CAAe;AAaxB,MAAKC,CAAAA,GAAL,GAA+DD,mBAA/D;AAbwB;AA0B1BE,+BAAA,CAAA,SAAA,CAAA,QAAAC,GAAAA,QAAQ,EAAG;AACT,SAAO,IAAKF,CAAAA,GAAZ,GAAsE,EAAtE;AADS,CAAXE;AAgEoDC,QAAA,uDAAQ,CAC1DC,8BAD0D,CACtC;AAStB,SAAIA,8BAAJ,YAA4CH,+BAA5C,IACIG,8BAAmB/D,CAAAA,WADvB,KACiD4D,+BADjD,GAESG,8BACFJ,CAAAA,GAHP,GAQS,+BART;AATsB;AAmOxB,IAAAK,6DAA0D,EAA1D;AAagEC,QAAA,yFAAQ,CAACC,6CAAD,CAAM;AD/U5E,MAA6CnB,IAAAA,EAA7C,KAA2BoB,uCAA3B,CAAA;ALkpEIC,QAAAA,kEAAS,IAATA;AACJ,QAAIC,qCAAqBC,cAAOC,CAAAA,YAAhC;AACA,QAAKF,kCAAL,IAAuBA,kCAAcG,CAAAA,YAArC,CAAA;AAQA,SAAI;AACFJ,uEAAA,GAASC,kCAAcG,CAAAA,YAAd,CKprEwBC,WLorExB,EAAiC,CACxCC,WAAiB9D,iBADuB,EAExC+D,aAAmB/D,iBAFqB,EAGxCgE,gBAAsBhE,iBAHkB,CAAjC,CAAT;AADE,OAMF,QAAOiE,sBAAP,CAAU;AA7wCHC,sBAAOC,CAAAA,OAAhB,IACOD,cAAOC,CAAAA,OAAZ,CAAA,KAAA,CA6wCmBF,sBAAEhC,CAAAA,OA7wCrB,CADF;AA6wCY;AAGZ,6CAAA,GAAOuB,+DAAP;AAjBA,KAAA;AACE,6CAAA,GAAOA,+DAAP;AADF;AKppEA;ACoVMV,+CAAAA,GAAQ,CD/Ud,+DC+Uc,GD/UgBS,uCC+UhB,IADCC,+DACeQ,CAAAA,eAAP,CAAuBI,6CAAvB,CAAT,GAA+CA,6CAAvDtB;AACN,SAAO,IAAcE,+BAAd,CACHF,6CADG,EACiCM,0DADjC,CAAP;AAN4E;A,CC3S5EhE,QANIiF,+CAMO,CAACvB,mBAAD,CAAe;AAYxB,MAAKwB,CAAAA,GAAL,GAAqDxB,mBAArD;AAZwB;AA0B1B,8CAAA,CAAA,SAAA,CAAA,QAAAG,GAAAA,QAAQ,EAAG;AACT,SAAO,IAAKqB,CAAAA,GAA8CrB,CAAAA,QAAnD,EAAP;AADS,CAAXA;AA0BAsB,QAAO,iEAAiB,CAACC,oBAAD,CAAW;AAOjC,SAAIA,oBAAJ,YAAwBH,8CAAxB,IAAoCG,oBAASpF,CAAAA,WAA7C,KAA6DiF,8CAA7D,GACSG,oBAASF,CAAAA,GADlB,GAMS,qBANT;AAPiC;AA4tBrC,IAAAG,uDAAiB,IAAIJ,8CAAJ,CACPX,cAAOC,CAAAA,YADA,IACqBe,cAAOf,CAAAA,YAAagB,CAAAA,SADzC,IACuD,EADvD,EAh0BiBC,EAg0BjB,CAAjB;ACyMA,IAAAC,wBAAsB3C,MAAOhD,CAAAA,SAAU4F,CAAAA,MAAlB,GAA4B,QAAQ,CAACC,kBAAD,EAASlF,mBAAT,CAAiB;AAGxE,SAAOkF,kBAAOD,CAAAA,MAAP,CAAcjF,mBAAd,CAAP;AAHwE,CAArD,GAIjB,QAAQ,CAACkF,kBAAD,EAASlF,mBAAT,CAAiB;AAE3B,SAAWF,KAAJ,CAAUE,mBAAV,GAAmB,CAAnB,CAAsBmF,CAAAA,IAAtB,CAA2BD,kBAA3B,CAAP;AAF2B,CAJ7B;AAuBwBE,QAAA,yBAAQ,CAACC,2BAAD,EAAMrF,mBAAN,CAA6B;AAE3D,MAAI,CAACsF,MAAOC,CAAAA,QAAP,CAAgBF,2BAAhB,CAAL;AAA2B,WAAOhD,MAAA,CAAOgD,2BAAP,CAAP;AAA3B;AACIjF,6BAAAA,GAC6DiC,MAAA,CAAOgD,2BAAP,CAD7DjF;AAEJ,MAAIoF,sBAAQpF,2BAAEqF,CAAAA,OAAF,CAAU,GAAV,CAAZ;AACc,GAAC,CAAf,KAAID,mBAAJ,KACEA,mBADF,GACUpF,2BAAEJ,CAAAA,MADZ;AAGA,MAAM0F,UAAgB,GAAT,KAAAtF,2BAAA,CAAE,CAAF,CAAA,GAAe,GAAf,GAAqB,EAAlC;AACIsF,SAAJ,KACEtF,2BADF,GACMA,2BAAEuF,CAAAA,SAAF,CAAY,CAAZ,CADN;AAGA,SAAOD,OAAP,GAA0BV,qBAAZ,CAAmB,GAAnB,EAAwBY,IAAKC,CAAAA,GAAL,CAAS,CAAT,EAAY7F,mBAAZ,GAAqBwF,mBAArB,CAAxB,CAAd,GAAqEpF,2BAArE;AAb2D;A,CC5P5C0F,QAAA,kBAAQ,EAAgC;AAarD,MAAKC,CAAAA,GAAL,GAAY,IAAIC,IAAJ,CT2vBPA,IAAKC,CAAAA,GAAL,ES3vBO,CAAZ;AACA,MAAIC,kBAAe,IAAKH,CAAAA,GAAKI,CAAAA,OAAV,EAAnB;AACA,MAAKJ,CAAAA,GAAKK,CAAAA,QAAV,CAAmB,CAAnB,CAAA;AACA,MAAKL,CAAAA,GAAKM,CAAAA,UAAV,CAAqB,CAArB,CAAA;AACA,MAAKN,CAAAA,GAAKO,CAAAA,UAAV,CAAqB,CAArB,CAAA;AACA,MAAKP,CAAAA,GAAKQ,CAAAA,eAAV,CAA0B,CAA1B,CAAA;AAIKC,0CAAL,CAAAA,IAAA,EAAkBN,eAAlB,CAAA;AAtBqD;AAmFzD,4BAAA,GAAA,iBAAA,CAAA,SAAA;AAAyBO,4BAAzBC,CAAAA,WAAA,GAAuCC,QAAQ,EAAG;AAEhD,SAAO,IAAKZ,CAAAA,GAAKW,CAAAA,WAAV,EAAP;AAFgD,CAAlD;AAqByBD,4BAAzBG,CAAAA,QAAA,GAAoCC,QAAQ,EAAG;AAE7C,SAAuC,IAAKd,CAAAA,GAAKa,CAAAA,QAAV,EAAvC;AAF6C,CAA/C;AASyBH,4BAAzBN,CAAAA,OAAA,GAAmCW,QAAQ,EAAG;AAE5C,SAAO,IAAKf,CAAAA,GAAKI,CAAAA,OAAV,EAAP;AAF4C,CAA9C;AAsOyBM,4BAAzB/E,CAAAA,GAAA,GAA+BqF,QAAQ,CAAChB,iBAAD,CAAO;AAE5C,MAAKA,CAAAA,GAAL,GAAY,IAAIC,IAAJ,CAASD,iBAAKW,CAAAA,WAAL,EAAT,EAA6BX,iBAAKa,CAAAA,QAAL,EAA7B,EAA8Cb,iBAAKI,CAAAA,OAAL,EAA9C,CAAZ;AAF4C,CAA9C;AA6HyBM,4BAAzBO,CAAAA,GAAA,GAA+BC,QAAQ,CAACC,qCAAD,CAAW;AAEhD,MAAIA,qCAASC,CAAAA,GAAb,IAAsBD,qCAASE,CAAAA,GAA/B,CAAuC;AAMrC,QAAIC,mCAAQ,IAAKT,CAAAA,QAAL,EAARS,GAA0BH,qCAASE,CAAAA,GAAnCC,GAA6D,EAA7DA,GAA4CH,qCAASC,CAAAA,GAAzD,EACIG,gCAAOC,IA5XDb,CAAAA,WAAL,EA4XDY,GAAwB1B,IAAK4B,CAAAA,KAAL,CAAWH,gCAAX,GAAmB,EAAnB,CAD5B;AAEAA,oCAAA,IAAS,EAAT;AACY,KAAZ,GAAIA,gCAAJ,KACEA,gCADF,IACW,EADX;AApoCqD,KAAA,CAAA;AAEvD,aAsoCiEA,gCAtoCjE;AACE,aAxHGI,CAwHH;AACE,cAAA,wDAhCe,CAgCR,IAooCgDH,6BApoChD,GAhCG,CAgCH,IAhC4B,CAgC5B,IAooCgDA,6BApoChD,GAhCqB,GAgCrB,IAhC+C,CAgC/C,IAooCgDA,6BApoChD,GAhCwC,GAgCxC,GAAkC,EAAlC,GAA6B,EAApC;AAAA,gBAAA,CAAA;AACF,aAtHGI,CAsHH;AACA,aApHGC,CAoHH;AACA,aAnHGC,EAmHH;AACA,aA3HGC,CA2HH;AACE,+DAAA,GAAO,EAAP;AAAA,gBAAA,CAAA;AAPJ;AASA,2DAAA,GAAO,EAAP;AAXuD;AAyoCjD9B,yDAAAA,GAAOH,IAAKkC,CAAAA,GAAL,CADaC,qDACb,EAA4B,IAAK5B,CAAAA,OAAL,EAA5B,CAAPJ;AAGJiC,QA/FGjC,CAAAA,GAAKiC,CAAAA,OAAV,CA+FejC,CA/Ff,CAAA;AAiGEkC,QArIGlC,CAAAA,GAAKkC,CAAAA,WAAV,CAqImBX,6BArInB,CAAA;AAsIEY,QA7GGnC,CAAAA,GAAKmC,CAAAA,QAAV,CA6GgBb,gCA7GhB,CAAA;AA8GEW,QAnGGjC,CAAAA,GAAKiC,CAAAA,OAAV,CAmGejC,qDAnGf,CAAA;AA8EuC;AAwBnCmB,uCAASiB,CAAAA,GAAb,KAWQC,6BAcN,GAdoBb,IAxZVb,CAAAA,WAAL,EAsaL,EAbM2B,gCAaN,GAbsC,CAAf,IAAAD,6BAAA,IAAmC,EAAnC,IAAoBA,6BAApB,GAAwC,CAAC,IAAzC,GAAgD,CAavE,EARME,qCAQN,GARe,IAAItC,IAAJ,CAAcuC,CADhBC,IAAIxC,IAAJwC,CAASJ,6BAATI,EAAsB,IAAK5B,CAAAA,QAAL,EAAtB4B,EAAuC,IAAKrC,CAAAA,OAAL,EAAvCqC,EAAuD,EAAvDA,CACgBD,EAAAA,OAAL,EAAT,GAA0C,KAA1C,GAA0BrB,qCAASiB,CAAAA,GAAnC,CAQf,EALAH,IA1HGjC,CAAAA,GAAKiC,CAAAA,OAAV,CA0HejC,CA1Hf,CA+HE,EAJAkC,IA/JGlC,CAAAA,GAAKkC,CAAAA,WAAV,CA+JmBK,qCAAO5B,CAAAA,WAAP,EA/JnB;AA+J0C2B,kCA/J1C,CAmKE,EAHAH,IAvIGnC,CAAAA,GAAKmC,CAAAA,QAAV,CAuIgBI,qCAAO1B,CAAAA,QAAPS,EAvIhB,CA0IE,EAFAW,IA7HGjC,CAAAA,GAAKiC,CAAAA,OAAV,CA6HeM,qCAAOnC,CAAAA,OAAPJ,EA7Hf,CA+HE,EAAKS,wCAAL,CAAAA,IAAA,EAAkB8B,qCAAOnC,CAAAA,OAAP,EAAlB,CAzBF;AA1BgD,CAAlD;AAqEuCsC,QAAA,iDAAQ,CAARA,8HAAQ,EAACC,wDAAD,EAAcC,6BAAd,CAAsB;AAG9C,MAAA,oEAAA,8HAAKjC,CAAAA,WAAL,EAAA,EA70BfhB,4BAAc,CAAP,GAAA4B,iEAAA,GAAW,GAAX,GAAyB,GAAR,IAAAA,iEAAA,GAAgB,GAAhB,GAAsB,EA60B/B;AAKd,0DAAA,GANGsB,CA30BHlD,yBA20BGkD,GA30BgBxD,wBAAZ,CAAsBQ,IAAKiD,CAAAA,GAAL,CAASvB,iEAAT,CAAtB,EAAsC5B,yBAAA,GAAO,CAAP,GAAW,CAAjD,CA20BJkD,EAEIxD,wBAAZ,CAAsB,8HAAKwB,CAAAA,QAAL,EAAtB,GAAwC,CAAxC,EAA2C,CAA3C,CAFQgC,EAGIxD,wBAAZ,CAAsB,8HAAKe,CAAAA,OAAL,EAAtB;AAAsC,GAAtC,CAHQyC,CAMCzD,CAAAA,IAAJ,CAAUuD,wDAAD,GAAgB,GAAhB,GAAsB,EAA/B,CAAA;AACFC,+BAAA,IAhODG,8HAEJ,GA8NcC,8HA7OFhD,CAAAA,GAAKgD,CAAAA,iBAAV,EAeP,EAAc,CAAd,IAAID,8HAAJ,GACEE,8HADF;AACO,KADP,IAGMC,iEAGJ,GAHQrD,IAAKiD,CAAAA,GAAL,CAASC,8HAAT,CAGR,GAH2B,EAG3B,EAFII,6BAEJ,GAFQtD,IAAK4B,CAAAA,KAAL,CAAWyB,iEAAX,CAER,EADIE,iEACJ,GADkB,EAClB,IADSF,iEACT,GADaC,6BACb;AAAAF,gIAAA,IAAe,CAAT,GAAAF,8HAAA,GAAa,GAAb,GAAmB,GAAzB,IAA4C1D,wBAAZ,CAAsB8D,6BAAtB,EAAyB,CAAzB,CAAhC,GAA8D,GAA9D,GACgB9D,wBAAZ,CAAsB+D,iEAAtB,EAAyB,CAAzB,CAPN,CA8NK,IAA0C,8HAA1C;AAA0C,IAA1C;AADL,SAAO,wDAAP,GACK,8HADL;AARmE;AAwD5C1C,4BAAzBrD,CAAAA,QAAA,GAAoCgG,QAAQ,EAAG;AAE7C,SAAYC,gDAAL,CAAAA,IAAA,CAAP;AAF6C,CAA/C;AAYwCC,QAAA,yCAAQ,CAARA,6CAAQ,EAACC,WAAD,CAAW;AAErD,+CAAKpD,CAAAA,OAAL,EAAJ,IAAsBoD,WAAtB,IAEE,6CAAKxD,CAAAA,GAAKyD,CAAAA,WAAV,CAAsB,6CAAKzD,CAAAA,GAAK0D,CAAAA,WAAV,EAAtB,IADU,6CAAKtD,CAAAA,OAAL,EAAAuD,GAAiBH,WAAjBG,GAA4B,CAA5BA,GAAgC,CAAC,CAC3C,EAFF;AAFyD;AAalCjD,4BAAzBkD,CAAAA,OAAA,GAAmCC,QAAQ,EAAG;AAE5C,SAAO,IAAK7D,CAAAA,GAAK4D,CAAAA,OAAV,EAAP;AAF4C,CAA9C;ACp6CC,IAAA,wBAU2C,EAV3C,EAUKE,kHAAsC,qBAAA,CAAA,cAAA,GACT,CAAA,CADS,EAAA,qBAAA,CAAA,gBAAA,GAEN,CAAA,CAFM,EAAA,qBAAA,CAAA,yBAAA,GAGI,CAAA,CAHJ,EAAA,qBAAA,CAAA,oBAAA,GAID,CAAA,CAJC,EAAA,qBAAtCA,CAVL;AA4BMC,QAAeA,yGAAe,EAAA;AAAA,MAC7BC,eAD6B,EAKjB,kBALiB,EAKjB,yCALiB,EAKnC,gBALmC,EAM3BC,iBAN2B;AAAA,SAAAzI,8CAAA,CAAA,QAAA,CAAA,yCAAA,CAAA;AAAA,WAAA,yCAAA,CAAA,GAAA;AAAA,WAAA,CAAA;ACqYnC,YAAM0I,2BAAM,EAAZ,EACWzJ,wBADX;AACA,aAAWA,wBAAX,GDpYEqJ,+GCoYF;AACEI,kCAAA,CAAIzJ,wBAAJ,CAAA,GDrYAqJ,8GCqYW,CAAIrJ,wBAAJ,CAAX;AADF;ADrYMuJ,uBAAAA,GCwYCE,wBDxYDF;AAIY,0BAAA,GAAApL,uBAAA,CAAAiC,MAAOsJ,CAAAA,IAAP,CAAYH,eAAZ,CAAA,CAAA;AAAA,iDAAA,GAAA,kBAAA,CAAA,IAAA,EAAA;AALiB,WAAA,CAAA;AAKnC,YAAA,yCAAA,CAAA,IAAA,CAAA;AAAA,mDrCkUK,CAAA,GAAL,GqClUA,CrCkUA;AqClUA;AAAA;AAAA,wBAAA,GAAA,yCAAA,CAAA,KAAA;AACyB,eAAA,iCAAA,CAAA,yCAAA,EAAMnI,iGAAA,CAASpB,gBAAT,CAAN,EAAA,CAAA,CAAA;AANU,WAAA,CAAA;AAOjC,SADMwJ,iBACN,GADuB,yCAAA,CAAA,GACvB,MACED,eAAA,CAAavJ,gBAAb,CADF,GACuC2J,IAAKC,CAAAA,KAAL,CACnCJ,iBADmC,CADvC;AAFF,iDAAA,GAAA,kBAAA,CAAA,IAAA,EAAA;AAAA,iDrCkUK,CAAA,GAAL,GqClUA,CrCkUA;AqClUA;AALmC,WAAA,CAAA;AAcnC,eAAA,yCAAA,CAAA,MAAA,CAAOD,eAAP,CAAA;AAdmC;AAAA,GAAA,CAAA;AAAA;AAkB9BM,QAAeA,0GAAgB,CACpC7J,gBADoC,EAEpCyC,mBAFoC,CAEtB;AAAA1B,gDAAA,CAAA,QAAA,CAAA,yCAAA,CAAA;AAEd,WAAA,iCAAA,CAAA,yCAAA,EAAMH,kGAAA,CAAUZ,gBAAV,EAAyB2J,IAAKG,CAAAA,SAAL,CAAerH,mBAAf,CAAzB,CAAN,EAAA,CAAA,CAAA;AAFc,GAAA,CAAA;AAAA;A;;;;;AEiBgB,IAK1BsH,gHAAe,IAAIC,GAAJ,EALW,EAQ1BC,iHAAgB,IAAIC,GAAJ,EARU;AAsBoCC,QAAA,iHAAA,CAClEC,WADkE,EAElEC,2BAFkE,CAGhE;AAIF,MACsBvI,IAAAA,EADtB,KACEwI,MAAOC,CAAAA,QADT,KAEmBC,CAAhBF,MAAOC,CAAAA,QAASC,CAAAA,YAFnB,IAEoCF,MAAOC,CAAAA,QAASE,CAAAA,SAFpD,EAAA;AAcSC,QAAAA,mCAAAA,EACAA,mCADAA,EAFHC,UACJ,CACiBC,IAAAA,KAAVF,mCAAUE,GAAjBN,MAAOI,CAAAA,QAAUE,IAAAA,CAAAA,GAAVF,mCAAUE,CAAAA,KADjB,KAE6B,CAAA,CAF7B,MAEiBC,IAAAA,KAAVH,mCAAUG,GAAjBP,MAAOI,CAAAA,QAAUG,IAAAA,IAAAA,EAAAA,GAAVH,mCAAUG,CAAAA,OAFjB,IAGIP,MAAOI,CAAAA,QAAUC,CAAAA,IAHrB,GAII,QAAA,CAACG,gBAAD,CAAgBA;AAAAA,aAAAA,gBAAAA;AAAAA,KAHbJ,EAQHK,iBAAcA,QAAA,CAAChJ,kBAAD,CAAiB;AAAA,UAC/BiJ,cAAWf,8GAAc5I,CAAAA,GAAd,CAAkBU,kBAAlB,CADoB;AAElBD,UAAAA,EAAjB,KAAIkJ,WAAJ,IACEf,8GAAc/I,CAAAA,GAAd,CAAkBa,kBAAlB,EAAyBiJ,WAAzB,GAAoC,EAApC,CADF;AAGA,aAAOA,WAAP;AALmC,KAR5BN,EA+CHO,yBAAsB,IAAIf,GAAJ,EA/CnBQ,EAyDHQ,2BAAwBd,WAASe,CAAAA,aAzD9BT;AA0DTN,eAASe,CAAAA,aAAT,GAAyBC,QAAA,CAAUC,mCAAV,EAAwBC,sDAAxB,CAA+C;AAChEC,yCAAAA,GAAUL,wBAAsB1I,CAAAA,IAAtB,CAA2B4H,WAA3B,EAAqCiB,mCAArC,EAA2CC,sDAA3C,CAAVC;AACAC,4DAAAA,GAAiBA,IAAAA,IAATF,sDAASE,GAAAA,IAAAA,EAAAA,GAATF,sDAASE,CAAAA,KAAjBA;AACQ1J,UAAAA,EAAd,KAAI0J,sDAAJ,KACOlB,MAAOC,CAAAA,QAAUC,CAAAA,YAKtB,IAJEF,MAAOC,CAAAA,QAAUkB,CAAAA,kBAAjB,CAAoCF,mCAApC,EAA6CC,sDAA7C,CAIF,EA7DO1J,IAAAA,EA6DP,KAAuB0J,sDAAvB,IA7DqBzB,6GAAa2B,CAAAA,GAAb,CA6DEF,sDA7DF,CA6DrB,KACQR,sDAON;AAPiBD,oBAAA,CAAYS,sDAAZ,CAOjB,EAAAR,sDAASW,CAAAA,IAAT,CAAA,KAAA,CAAAX,sDAAA,EAAAY,4BAAA,CACKtM,KAAMuM,CAAAA,IAAN,CANUN,mCAAQO,CAAAA,OAAQC,CAAAA,gBAAhBC,CACb,OADaA,CAMV,CAAmBC,CAAAA,GAAnB,CAAuB,QAAA,CAACC,kBAAD,CAAU;AAC5BC,YAAAA,mCAAAA;AAAN,YAAA,KAAMA,mCAAN,GAAAD,kBAAMC,CAAAA,UAAN,KAAMA,mCAAYC,CAAAA,WAAlB,CAA8BF,kBAA9B,CAAA;AACA,eAAOA,kBAAMG,CAAAA,WAAb;AAFkC,OAAjC,CADL,CAAA,CARF,CANF;AAsBA,aAAOd,mCAAP;AAzBsE,KAAxE;AA0BE,QAEIe,qBAAkBC,QAASC,CAAAA,sBAAT,EAFtB,EAGIC,2BAAwBF,QAASG,CAAAA,aAAT,CAAuB,EAAvB,CAH5B;AAKIC,+BAAAA,GAAiBtC,2BAAUxL,CAAAA,SAA3B8N;AAAoC,QAIpCC,cAAWD,2BAAeE,CAAAA,YAJU;AAK1CF,+BAAeE,CAAAA,YAAf,GAA4BC,QAAA,CAE1BrK,qCAF0B,EAG1BsK,sDAH0B,CAGa;AAAvCA,4DAAA,GAAA,IAAA,EAAA,KAAAA,sDAAA,GAAmC,IAAnC,GAAAA,sDAAA;AAAuC,UAEjCC,wBAAYrC,OAAA,CAAK,IAAKsC,CAAAA,aAAV,CAAuBd,CAAAA,UAFF,EAGpBb,6CAHoB,EAGjCE,4CAAsBA,IAAAA,KAATF,6CAASE,GAAdF,IAAKA,CAAAA,OAASE,IAAAA,IAAAA,EAAAA,GAATF,6CAASE,CAAAA,KAHW,EAOfF,2CAPe;AAIvC,WAAK0B,qBAAL,YAA0BE,UAA1B,IAGKF,qBAHL,MAGiCV,IAAAA,KAAThB,2CAASgB,GAAdhB,IAAKA,CAAAA,OAASgB,IAAAA,IAAAA,EAAAA,GAAThB,2CAASgB,CAAAA,iBAHjC,MA/FSxK,IAAAA,EA+FT,KAIuB0J,yCAJvB,IA/FsB,CAACzB,6GAAa2B,CAAAA,GAAb,CAmGAF,yCAnGA,CA+FvB,CAI+B;AASvB2B,qDAAAA,GAAY,IAAKF,CAAAA,aAAjBE;AACAC,mDAAAA,GAAU,IAAKC,CAAAA,WAAfD;AAGNd,0BAAgBgB,CAAAA,WAAhB,CAA4Bb,wBAA5B,CAAA;AACA,YAAKQ,CAAAA,aAAL,GAAmBR,wBAAnB;AACA,YAAKY,CAAAA,WAAL,GAAiB,IAAjB;AAIAT,mBAASpK,CAAAA,IAAT,CAAc,IAAd,EAAoBC,qCAApB,EAA2BsK,sDAA3B,CAAA;AAKMQ,6CAAAA,GAAW,CAAA,IAAA,IAAC9K,qCAAD,GAAA,CAAA,GAACA,qCAAD,CAAA,UAAA,IACZ,IAAK+K,CAAAA,kBAA+CC,CAAAA,YAAWC,CAAAA,IADnD,GAEbnB,QAASpB,CAAAA,aAAT,CAAuB,UAAvB,CAFEoC;AA/GFvC,8DAAAA,GAAWD,cAAA,CAkHDS,yCAlHC,CAAXR;AAA4B,YAC5B2C,mCAAkC,CAAlCA,KAAc3C,sDAASxL,CAAAA,MADK;AAElC,YAAImO,gCAAJ,CAAiB;AAAC,cACVzB,6BAAQK,QAASpB,CAAAA,aAAT,CAAuB,OAAvB,CADE;AAEhBe,oCAAMG,CAAAA,WAAN,GAAoBrB,sDAASrG,CAAAA,IAAT,CAAc,IAAd,CAApB;AA8GsB4I,+CA3GbzB,CAAAA,OAAQwB,CAAAA,WAAjB,CAA6BpB,0BAA7B,CAAA;AALe;AAQjBnC,qHAAavD,CAAAA,GAAb,CAwGgBgF,yCAxGhB,CAAA;AAEAvB,sHAAc2D,CAAAA,MAAd,CAsGgBpC,yCAtGhB,CAAA;AAGAlB,cAAOC,CAAAA,QAAUsD,CAAAA,qBAAjB,CAmGwBN,qCAnGxB,EAmGgB/B,yCAnGhB,CAAA;AAIImC,wCAAJ,IAAmBrD,MAAOC,CAAAA,QAAUC,CAAAA,YAApC,KAGQ0B,yCACN,GA2FsBqB,qCA5FCzB,CAAAA,OAAQgC,CAAAA,aAAjB,CAA+B,OAA/B,CACd,EAAc,IAAd,KAAI5B,yCAAJ,IA2FsBqB,qCA1FXzB,CAAAA,OAAQwB,CAAAA,WAAjB,CAA6BpB,yCAA7B,CALJ;AAkGEI,0BAAgBF,CAAAA,WAAhB,CAA4BK,wBAA5B,CAAA;AAEWlC,YAAAA,mDAAAA;AAAX,YAAqBC,IAAAA,KAAVD,mDAAUC,GAAjBF,MAAOC,CAAAA,QAAUC,IAAAA,CAAAA,GAAVD,mDAAUC,CAAAA,YAArB;AACQ0B,6DACN,GADcqB,qCAASzB,CAAAA,OAAQgC,CAAAA,aAAjB,CAA+B,OAA/B,CACd,EAAc,IAAd,KAAI5B,mDAAJ,IACEI,kBAAgBgB,CAAAA,WAAhB,CAA4BpB,mDAAM6B,CAAAA,SAAN,CAAgB,CAAA,CAAhB,CAA5B,CADF;AAFF;AAMAf,6BAAUgB,CAAAA,YAAV,CAAuB1B,kBAAvB,EAAwCc,2CAAxC,CAAA;AAEA,YAAKH,CAAAA,aAAL,GAAmBE,6CAAnB;AACA,YAAKE,CAAAA,WAAL,GAAiBD,2CAAjB;AAzC6B,OAJ/B;AA+CER,mBAASpK,CAAAA,IAAT,CAAc,IAAd,EAAoBC,qCAApB,EAA2BsK,sDAA3B,CAAA;AA/CF;AAJuC,KAHzC;AA8DAJ,+BAAesB,CAAAA,eAAf,GAA+BC,QAAA,CAE7BpG,mBAF6B,CAEF;AAERwD,UAAAA,kDAAAA,EAAbE,sCAAsBA,IAAAA,KAATF,kDAASE,GAAdF,IAAKA,CAAAA,OAASE,IAAAA,IAAAA,EAAAA,GAATF,kDAASE,CAAAA,KAATF;AACf6C,wDAAAA,GAAgBlD,sBAAoB5J,CAAAA,GAApB,CAAwBmK,mCAAxB,CAAhB2C;AACkBrM,UAAAA,EAAtB,KAAIqM,kDAAJ,IACElD,sBAAoB/J,CAAAA,GAApB,CAAwBsK,mCAAxB,EAAgC2C,kDAAhC,GAAgD,IAAIjE,GAAJ,EAAhD,CADF;AAGIqD,yCAAAA,GAAWY,kDAAc9M,CAAAA,GAAd,CAAkByG,mBAAOsG,CAAAA,SAAzB,CAAXb;AACazL,UAAAA,EAAjB,KAAIyL,mCAAJ,IACEY,kDAAcjN,CAAAA,GAAd,CACE4G,mBAAOsG,CAAAA,SADT,EAEGb,mCAFH,GAEc,IAAInD,WAAJ,CAAatC,mBAAb,EAAqB,IAAKwD,CAAAA,OAA1B,CAFd,CADF;AAMA,aAAOiC,mCAAP;AAd2B,KAF7B;AA1KA;AAJE;AAwMuC,IAAA,yCAAA;AAAoCc,IAApC,IAAoCA,CAAR/D,yCAAQ+D,GAAR/D,MAAQ+D,EAAAA,sBAApC,KAA4B/D,yCAAmCH,CAAAA,sBAA/D,GAA+DA,gHAA/D;AAC1C,IAEGmE,6GAAY,EAFf;AAGD,IAAmChE,MAAOiE,CAAAA,MAA1C,CAAyD;AAAC,MAClD3O,iBAAI2O,MAAA,EAD8C;AAEvC,UAAjB,KAAI,MAAO3O,eAAX,KAGE0O,0GAHF,GAGclO,MAAOsJ,CAAAA,IAAP,CAAY9J,cAAZ,CAAA,CAAe,CAAf,CAHd;AAFuD;AAOxD,IAEK4O,sHAAmC,EAAnCA,KAAqBF,0GAF1B,EAQYG,qHACPD,mHAAJ,GACS,QAAA,CAAC/L,mBAAD,CAAoB;AAAA,SAAS,IAAT,IAAAA,mBAAA,IAGkCX,IAAAA,EAHlC,KAGKW,mBAAD,CAAe6L,0GAAf,CAHJ;AAAA,CAD7B,GAMS,QAAA,EAAoB;AAAA,SAAA,CAAA,CAAA;AAAA,CAf9B;AAoBD,IAAIE,mHAAJ,IAEM,CAAClE,MAAOiE,CAAAA,MAAOG,CAAAA,GAFrB,CAE0B;AAAC,MACjBzC,kBAAM,IAAI/B,GAAJ,EADW;AAEvBI,QAAOiE,CAAAA,MAAOG,CAAAA,GAAd,GAAoBC,QAAA,CAAC3O,iBAAD,CAAQ;AACrBiM,mBAAIP,CAAAA,GAAJ,CAAQ1L,iBAAR,CAAL,IACEiM,eAAI/K,CAAAA,GAAJ,CAAQlB,iBAAR,EAAauO,MAAA,CAAOvO,iBAAP,CAAb,CADF;AAGA,WAAOiM,eAAI5K,CAAAA,GAAJ,CAAQrB,iBAAR,CAAP;AAJ0B,GAA5B;AAFsB;A,CC5RFmK,QAAA,yHAAA,CAAC,0CAAD,CAInB;AAIH,MACsBrI,IAAAA,EADtB,KACEwI,MAAOC,CAAAA,QADT,KAEmBC,CAAhBF,MAAOC,CAAAA,QAASC,CAAAA,YAFnB,IAEoCF,MAAOC,CAAAA,QAASE,CAAAA,SAFpD,EAAA;AAYMmE,8CAAAA,GApBiB,0CACvBC,CAAAA,eAmBqChQ,CAAAA,SAA/B+P;AAKJtE,UAAOI,CAAAA,QADT,IAEEJ,MAAOI,CAAAA,QAASE,CAAAA,KAFlB,IAG8B,CAAA,CAH9B,KAGEN,MAAOI,CAAAA,QAASG,CAAAA,OAHlB,IAKEP,MAAOI,CAAAA,QAASoE,CAAAA,iBAAhB,CAAkCF,0CAAlC,CALF;AAMC,QAKKG,sBAAmBH,0CAAaG,CAAAA,kBALrC;AAMDH,8CAAaG,CAAAA,kBAAb,GAAgCC,QAAA,EAAA;AAAA,UAGxBjN,qBAAO,IAAKkN,CAAAA,SAHY;AAM9B,UAAI3E,MAAOC,CAAAA,QAAUC,CAAAA,YAArB;AACE,eAAOuE,mBAAiBvM,CAAAA,IAAjB,CAAsB,IAAtB,CAAP;AADF;AAGE,UAAI,CAAC,IAAKzD,CAAAA,WAAYmQ,CAAAA,cAAjB,CAxEIC,UAwEJ,CAAL,CAA8C;AAC3C,YAAKpQ,CAAAA,WAAN,CAAA,QAAA,GACE,CAAA,CADF;AACO,YAEDqQ,SACJ,IAAKrQ,CAAAA,WACLsQ,CAAAA,eAAcpD,CAAAA,GAFJ,CAEQ,QAAA,CAACqD,cAAD,CAClB;AAAA,iBAAAA,cAAA,YAAaC,aAAb,GACIjQ,KAAMuM,CAAAA,IAAN,CAAWyD,cAAEE,CAAAA,QAAb,CAAuBC,CAAAA,MAAvB,CACE,QAAA,CAACC,cAAD,EAAYvP,aAAZ,CAA4B;AAAA,mBAAAuP,cAAA,GAAKvP,aAAEwP,CAAAA,OAAP;AAAA,WAD9B,EAEE,EAFF,CADJ,GAKIL,cAAEK,CAAAA,OALN;AAAA,SAHU,CAFL,EAYApF,kCAZA,EAYUqF,kCAZV;AAYP,YAAA,KAAOrF,kCAAP,GAAAD,MAAOC,CAAAA,QAAP,KAAA,IAAA,KAAiBqF,kCAAjB,GAAOrF,kCAAUqF,CAAAA,WAAjB,KAAiBA,kCAAaC,CAAAA,qBAA9B,CAAoDT,MAApD,EAAyDrN,kBAAzD,CAAA;AACgDD,YAAAA,EAAhD,KAAI,IAAK/C,CAAAA,WAAY+Q,CAAAA,wBAArB,IACExF,MAAOC,CAAAA,QAAUsD,CAAAA,qBAAjB,CACEtB,QAASpB,CAAAA,aAAT,CAAuB,UAAvB,CADF,EAEEpJ,kBAFF,CADF;AAf4C;AAuBvCgO,UAAAA,uBAAAA;AADP,aACOA,IAAL,KAAKA,uBAAL,GAAAA,IAAKA,CAAAA,UAAL,IAAKA,uBAAL,GACA,IAAKC,CAAAA,YAAL,CACG,IAAKjR,CAAAA,WACHkR,CAAAA,mBAFL,CAFF;AA/B4B,KAAhC;AAuCE,QAKIC,uBAAoBtB,0CAAasB,CAAAA,iBALrC;AAMFtB,8CAAasB,CAAAA,iBAAb,GAAiCC,QAAA,EAAA;AAC/BD,0BAAkB1N,CAAAA,IAAlB,CAAuB,IAAvB,CAAA;AAGI,UAAK4N,CAAAA,YAAT,IACE9F,MAAOC,CAAAA,QAAU8F,CAAAA,YAAjB,CAA8B,IAA9B,CADF;AAJ+B,KAAjC;AAOE,QAMIC,eAAY1B,0CAAa2B,CAAAA,aAN7B;AAOF3B,8CAAa2B,CAAAA,aAAb,GAA2BC,QAAA,CAEzBC,6BAFyB,CAEC;AAIrB,UAAKL,CAAAA,YAAV,IACE9F,MAAOC,CAAAA,QAAU8F,CAAAA,YAAjB,CAA8B,IAA9B,CADF;AAGAC,kBAAU9N,CAAAA,IAAV,CAAe,IAAf,EAAqBiO,6BAArB,CAAA;AAP0B,KAF5B;AAvFA;AAJG;AA2GH,IAAA,wCAAA;AAAoCC,IAApC,IAAoCA,CAARpG,wCAAQoG,GAARpG,MAAQoG,EAAAA,8BAApC,KAA4BpG,wCAA2CH,CAAAA,8BAAvE,GAAuEA,wHAAvE;AClHsBA,QAAA,oHAAA,CAAC,wDAAD,CAAoD;AAAlDwG,0DAAAA,GAAD,wDAAC,CAAA,UAAAA;AAIxB,MACsB7O,IAAAA,EADtB,KACEwI,MAAOC,CAAAA,QADT,KAEmBC,CAAhBF,MAAOC,CAAAA,QAASC,CAAAA,YAFnB,IAEoCF,MAAOC,CAAAA,QAASE,CAAAA,SAFpD,EAAA;AAaEkG,4DACAb,CAAAA,wBAFF,GAE2B,CAAA,CAF3B;AAOMc,4DAAAA,GAAkBD,wDAAW9R,CAAAA,SAA7B+R;AAAsC,QACtC7B,+BAAmB6B,wDAAgB7B,CAAAA,kBADG;AAE5C6B,4DAAgB7B,CAAAA,kBAAhB,GAAmC8B,QAAA,EAAA;AAIjC,UAAKC,CAAAA,eAActF,CAAAA,KAAnB,GAA2B,IAAKyD,CAAAA,SAAhC;AACA,aAAOF,4BAAiBvM,CAAAA,IAAjB,CAAsB,IAAtB,CAAP;AALiC,KAAnC;AArBA;AAJ0E;AAqC1E,IAAA,yCAAA;AAAoCuO,IAApC,IAAoCA,CAARzG,yCAAQyG,GAARzG,MAAQyG,EAAAA,yBAApC,KAA4BzG,yCAAsCH,CAAAA,yBAAlE,GAAkEA,mHAAlE;A;;;;;;;;;AC6C2B,IAAA,sCAAA6G,oCAAA,CAAA,CAAA,yBAAA,CAAA,CAAA,EA5GhBC,oHAC4BC,sHA2GZ;AAzG7BA,QAASA,uHAAoB,CACzBpG,6BADyB,EACbqG,0BADa,EACIC,kBADJ,CACgC;AAE3D,MAAsB,CAAtB,KAAItG,6BAAKuG,CAAAA,QAAT;AACE,WAAOC,+GAAP;AADF;AAGMvP,4BAAAA,GAAOoP,0BAAQI,CAAAA,WAAR,EAAPxP;AACN,MAAa,WAAb,KAAIA,0BAAJ,IAAqC,WAArC,KAA4BA,0BAA5B,IAA6D,aAA7D,KAAoDA,0BAApD,IACa,WADb,KACIA,0BADJ;AAYE,WAAO,QAAA,EAAqByP;AAAAA,aAAAA,8GAAAA;AAAAA,KAA5B;AAZF;AAaC,MACKC,cACFC,mHAAkBrQ,CAAAA,GAAlB,CAA0ByJ,6BAAiB6G,CAAAA,OAA3C,GAAsB,GAAtB,GAAiE5P,0BAAjE,CAFH;AAGD,SAAiBD,IAAAA,EAAjB,KAAI2P,WAAJ,GACSA,WADT,GAgBI,KAAMG,CAAAA,IAAN,CAAW7P,0BAAX,CAAJ,IAAiC,WAAjC,KAAwBqP,kBAAxB,KACQS,6BAwBF,GAxBkB/G,6BAAiB6G,CAAAA,OAAQG,CAAAA,QAA1B,CAAmC,GAAnC,CAAD,GAuBfC,WAAYlT,CAAAA,SAvBG,GAYhBiM,6BAYA,EAAA/I,0BAAA,IAAQ8P,6BAzBd,IA0BW,QAAA,EAAmB;AAUxB,UAAUpQ,KAAJ,CATQG,iBASR,CAAN;AAVwB,GA1B9B,GAyCO0P,+GAzDP;AAtB2D;AAsFX,IAU5CU,iIACF,2DAX8C,EAgB5CC,uHC1E6BpP,sDAA1B,CC2HTC,QAAkC,CAChCoP,uBADgC,CAEZ;AAAA,MAAA,mBAAAC,2BAAA,CAAA,KAAA,CAAA,CAAA,EAAA,SAAA,CAAA;AAOpB,MAAoB,CAApB,KAAIC,gBAAK5S,CAAAA,MAAT;AACE,WDzJKwD,wFAAA,CCyJ4BkP,uBAAAjP,CAAY,CAAZA,CDzJ5B,CCyJL;AADF;AA0BA,OAHC,IAEGA,mBAAMiP,uBAAA,CAAY,CAAZ,CAFT,EAGQzS,kBAAI,CAAb,EAAgBA,eAAhB,GAAoB2S,gBAAK5S,CAAAA,MAAzB,EAAiCC,eAAA,EAAjC;AACEwD,oBAAA,IAAOoP,kBAAA,CAAmBD,gBAAA,CAAK3S,eAAL,CAAnB,CAAP,GAAqCyS,uBAAA,CAAYzS,eAAZ,GAAgB,CAAhB,CAArC;AADF;AAGA,SDrLOuD,wFAAA,CCqL0BC,gBDrL1B,CCqLP;AApCoB,CFjDOR,CAAA,mCAAAA,CC5EpB,CD0DyC,EAwB5C+O,iHG/EmBc,gEAAhB,CH+EuBlO,oDG/EvB,CHuDyC;AA6B5BkN,QAAA,gHAAA,CAAC7O,mBAAD,CAAoBA;AAAAA,SAAAA,mBAAAA;AAAAA;AACT8P,QAAA,2HAAA,CAACtP,gBAAD,CAAiB;AAChD,SAAK+O,8HAA6BJ,CAAAA,IAA7B,CAAkC/P,MAAA,CAAOoB,gBAAP,CAAlC,CAAL,GAWOA,gBAXP,GASSgP,oHATT;AADgD;AAcAO,QAAA,4IAAA,EAAmB;AAQnE,SAAOP,oHAAP;AARmE;AAuBnCQ,QAAA,4HAAA,CAACC,mBAAD,CAA8B;AAC9D,SAAmBA,mBAAnB,YC3IY/P,+BD2IZ,GC9HiCE,sDAA1B,CDwIkB6P,mBCxIlB,CD8HP,GAQST,oHART;AAD8D;AAsBC,IAG3DP,sHAAoB,IAAIxH,GAAJ,CAA8C,CAEtE,CAAC,QAAD,EAAWqI,0HAAX,CAFsE,EAGtE,CAAC,WAAD,EAAcA,0HAAd,CAHsE,EAItE,CAAC,WAAD,EAAcC,2IAAd,CAJsE;AAKtE,CAAC,mBAAD,EAAsBD,0HAAtB,CALsE,EAMtE,CAAC,WAAD,EAAcC,2IAAd,CANsE,EAOtE,CAAC,aAAD,EAAgBD,0HAAhB,CAPsE,EAQtE,CAAC,WAAD,EAAcC,2IAAd,CARsE;AAStE,CAAC,YAAD,EAAeC,2HAAf,CATsE,EAUtE,CAAC,eAAD,EAhDsBE,QAAA,CAACC,gBAAD,CAA2B;AACjD,SAAYA,gBAAZ,YGxHYC,8CHwHZ,GG9GuBP,gEAAhB,CHwHWM,gBGxHX,CH8GP,GAQSpB,8GART;AADiD,CAgDjD,CAVsE,EAWtE,CAAC,kBAAD,EAAqBe,0HAArB,CAXsE,EAYtE,CAAC,WAAD,EAAcE,2HAAd,CAZsE,EAatE,CAAC,iBAAD,EAAoBD,2IAApB,CAbsE,EActE,CAAC,aAAD,EAAgBA,2IAAhB,CAdsE;AAmBtE,CAAC,aAAD,EAAgBC,2HAAhB,CAnBsE,EAoBtE,CAAC,YAAD,EAAeA,2HAAf,CApBsE,EAqBtE,CAAC,aAAD,EAAgBD,2IAAhB,CArBsE,EAsBtE,CAAC,UAAD,EAAaC,2HAAb,CAtBsE,CAA9C,CAHuC;AIkCxD/H,IAAAA,oCAAAA,EACCA,oCADDA,EAEsBA,oCAFtBA,EAFHC,gGACJ,CACiBC,IAAAA,KAAVF,oCAAUE,GAzNCkI,cAyNXpI,CAAAA,QAAUE,IAAAA,CAAAA,GAAVF,oCAAUE,CAAAA,KADjB,MAE8B,CAAA,CAF9B,MAEkBC,IAAAA,KAAVH,oCAAUG,GA1NAiI,cA0NVpI,CAAAA,QAAUG,IAAAA,IAAAA,EAAAA,GAAVH,oCAAUG,CAAAA,OAFlB,KAGmD,WAHnD,MAGuCA,IAAAA;CAAVH,oCAAUG,GA3NrBiI,cA2NWpI,CAAAA,QAAUG,IAAAA,IAAAA,EAAAA,GAAVH,oCAAUG,CAAAA,OAHvC,KAxNkBkI,cA4NNrI,CAAAA,QAAUC,CAAAA,IAJtB,GAKI,QAAA,CAAiBG,iBAAjB,CAA6BA;AAAAA,SAAAA,iBAAAA;AAAAA,CAJ1BJ,EAMHpH,wGA/NcD,cA+N+BC,CAAAA,YAN1CoH,EAgBHvH,kGAAyBG,qGAAA,GAC3BA,qGAAaC,CAAAA,YAAb,CAA0B,UAA1B,EAAsC,CACpCE,WAAYA,QAAA,CAAC7D,cAAD,CAAOA;AAAAA,SAAAA,cAAAA;AAAAA,CADiB,CAAtC,CAD2B,GAI3BkC,IAAAA,EApBK4I;AA8DgCsI,QAAA,0GAAA,CAACvQ,mBAAD,CAAoBA;AAAAA,SAAAA,mBAAAA;AAAAA;AACrBwQ,QAAA,uGAAA,EAInCD;AAAAA,SAAAA,yGAAAA;AAAAA;AA+B+B,IAM9BE,kGAAS,MAATA,GAAgBrR,MAAA,CAAOuD,IAAK+N,CAAAA,MAAL,EAAP,CAAsBC,CAAAA,KAAtB,CAA4B,CAA5B,CAAhBF,GAAS,GANqB,EAS9BG,uGAAc,GAAdA,GAAoBH,+FATU,EAa9BI,sGAAa,GAAbA,GAAiBD,oGAAjBC;AAAa,GAbiB,EAe9BhT,6FAOAiM,QAtB8B;AA6BhBgH,QAAA,qGAAA,CAAC9Q,mBAAD,CAAwC;AAAA,SAAU,IAAV,KAAAA,mBAAA,IACvC,QADuC,IACvD,MAAOA,oBADgD,IACX,UADW,IAC3B,MAAOA,oBADoB,IAExDgM,kHAAA,CAAmBhM,mBAAnB,CAFwD;AAAA;AAE/B,IACvB+Q,mGAAUlU,KAAMkU,CAAAA,OADO,EAyBvBC,wGAAe,qDAzBQ,EA8BvBC,2GAAkB,SA9BK,EAkCvBC;AAAmB,IAlCI,EA0DvBC,uGAAkBC,MAAJ,CAClB,8FADkB,EAElB,GAFkB,CA1DS,EAmEvBC,mHAA0B,IAnEH,EAoEvBC,mHAA0B,IApEH,EA2EvBC;AAAiB,oCA3EM;AAgOTC,QAAA,6FAAA,CAAC7F,mBAAD,CACqB;AAAA,MAAA,sBAAA+D,2BAAA,CAAA,KAAA,CAAA,CAAA,EAAA,SAAA,CAAA,EACnC,wBAAO,EAD4B;AACnC,SAAO,qBAAA,CAAA,UAAA,GApJO+B,CAoJP,EAAA,qBAAA,CAAA,SAAA,GAGL9F,mBAHK,EAAA,qBAAA,CAAA,MAAA,GAIL+F,mBAJK,EAAA,qBAAP;AADmC;AA8C5B,IAAAC,mGAA0C7F,MAAOG,CAAAA,GAAP,GAAaH,MAAOG,CAAAA,GAAP,CAAW,cAAX,CAAb,GAA0CH,MAAA,CAAO,cAAP,CAApF,EAqBA8F,kGAAyC9F,MAAOG,CAAAA,GAAP,GAAaH,MAAOG,CAAAA,GAAP,CAAW,aAAX,CAAb,GAAyCH,MAAA,CAAO,aAAP,CArBlF,EA8BPJ,yGAAgB,IAAImG,OAAJ,EA9BT,EAmEPC;AAAwBjU,0FAAEkU,CAAAA,gBAAF,CAC5BlU,0FAD4B,EAE5B,GAF4B,CAnEjB;AA6GbmU,QAASA,iHAAuB,CAC9BC,MAD8B,EAE9BC,gBAF8B,CAET;AAOrB,MAAI,CAACrV,KAAMkU,CAAAA,OAAN,CAAckB,MAAd,CAAL,IAA2B,CAACA,MAAIxF,CAAAA,cAAJ,CAAmB,KAAnB,CAA5B;AAiBE,UAAUzN,KAAJ,CAhBQG,gCAgBR,CAAN;AAjBF;AAmBA,SAAkBE,IAAAA,EAAX,KAAAqB,+FAAA,GACHA,+FAAOM,CAAAA,UAAP,CAAkBkR,gBAAlB,CADG,GAEFA,gBAFL;AA1BqB;AA6MrB5V,QAAA,iGAAA,CAEE,wCAFF,EAGEuM,+CAHF,CAGyB;AADtB,MAAA8C,wHAAD,wCAAC,CAAA,SAAA,EAAyBgD,mEAA1B,wCAAU,CAAA,UAAT;AAJH,MAAAwD,CAAAA,GAAA,GAA6B,EAA7B;AAtIA,OA8ImB,IACbC,mBADAC,wCACAD,GADY,CAAC,EAEXE,eAAY3G,qHAAQ5O,CAAAA,MAApBuV,GAA6B,CAFlB,EAGXH,qBAAQ,IAAKA,CAAAA,GAHF,EA9JbI,uDAoKsC5G,qHApK1B5O,CAAAA,MAAZwV,GAAqB,CA8JR,EA1JbC,qDAA2B,EA0Jd,EAzJf5J;AAzWa6J,GAyWN,KA+J0C9D,gEA/J1C,GAAsB,OAAtB,GAAgC,EAyJxB,EApJf+D,+IAoJe,EAhJfC,6BAAQ3B,qGAgJO,EA9IVhU,yBAAI,CAAb,EAAgBA,sBAAhB,GAAoBuV,oDAApB,EAAuBvV,sBAAA,EAAvB,CAA4B;AAc1B,SAd2B,IACrBG,yBAmJoCwO,qHAnJhC,CAAQ3O,sBAAR,CADiB,EAOvB4V,2DAAmB,CAAC,CAPG,EAQvBC,gCAAAA,IAAAA,EARuB,EASvBC,uDAAY,CATW,EAUvBC,0BAIJ,EAAOD,oDAAP,GAAmB3V,sBAAEJ,CAAAA,MAArB,CAAA,CAA6B;AAE3B4V,gCAAMG,CAAAA,SAAN,GAAkBA,oDAAlB;AACAC,gCAAA,GAAQJ,0BAAMK,CAAAA,IAAN,CAAW7V,sBAAX,CAAR;AACA,UAAc,IAAd,KAAI4V,0BAAJ;AACE;AADF;AAGAD,0DAAA,GAAYH,0BAAMG,CAAAA,SAAlB;AACIH,gCAAJ,KAAc3B,qGAAd,GAC+B,KAA7B,KAAI+B,0BAAA,CAhcUE,CAgcV,CAAJ,GACEN,0BADF,GACU1B,wGADV,GAEoC5R,IAAAA,EAA7B,KAAI0T,0BAAA,CAlcGE,CAkcH,CAAJ,GAELN,0BAFK,GAEGzB,yGAFH,GAGwB7R,IAAAA,EAAxB;AAAI0T,gCAAA,CApcFG,CAocE,CAAJ,IACD3B,uGAAepC,CAAAA,IAAf,CAAoB4D,0BAAA,CArcjBG,CAqciB,CAApB,CAKJ,KAFER,+IAEF,GAFoB,IAAItB,MAAJ,CAAW,IAAX,GAAgB2B,0BAAA,CAxc7BG,CAwc6B,CAAhB,EAAmC,GAAnC,CAEpB,GAAAP,0BAAA,GAAQxB,oGANH;AAOgC9R,UAAAA,EAPhC,KAOI0T,0BAAA,CA1cMI,CA0cN,CAPJ,KAcLR,0BAdK,GAcGxB,oGAdH,CANT,GAsBWwB,0BAAJ,KAAcxB,oGAAd,GACuB,GAA5B,KAAI4B,0BAAA,CAlbSK,CAkbT,CAAJ,IAGUV,wDAGR,GAHQA,IAAAA,EAGR,EAHAC,0BAGA,GAHQD,IAAA,KAAAA,wDAAA;AAAAA,qJAAA,IAAAA,wDAAA,GAAmB1B,qGAG3B,EAAA4B,wDAAA,GAAmB,CAAC,CANtB,IAOqCvT,IAAAA,EAA9B,KAAI0T,0BAAA,CAxbIM,CAwbJ,CAAJ,GAELT,wDAFK,GAEc,CAAC,CAFf,IAILA,wDAEA;AAFmBD,gCAAMG,CAAAA,SAEzB,GAFqCC,0BAAA,CA3brBO,CA2bqB,CAAyBvW,CAAAA,MAE9D,EADA8V,6BACA,GADWE,0BAAA,CA7bEM,CA6bF,CACX,EAAAV,0BAAA,GACwBtT,IAAAA,EAAtB,KAAA0T,0BAAA,CA7bOQ,CA6bP,CAAA,GACIpC,oGADJ,GAE0B,GAAtB,KAAA4B,0BAAA,CA/bGQ,CA+bH,CAAA,GACAjC,gHADA,GAEAD,gHAXD,CARF;AAsBLsB,gCADK,KACKrB,gHADL,IAELqB,0BAFK,KAEKtB,gHAFL,GAILsB,0BAJK,GAIGxB,oGAJH,GAKIwB,0BAAJ,KAAc1B,wGAAd;AAAiC0B,gCAAjC,KAA2CzB,yGAA3C,GACLyB,0BADK,GACG3B,qGADH,IAKL2B,0BACA,GADQxB,oGACR,EAAAuB,+IAAA;AAAkBrT,UAAAA,EANb,CAhDP;AAR2B;AA4FvBmU,wDAAAA,GACJb,0BAAA,KAAUxB,oGAAV,IAyCwCxF,qHAzCf,CAAQ3O,sBAAR,GAAY,CAAZ,CAAeyW,CAAAA,UAAf,CAA0B,IAA1B,CAAzB,GAA2D,GAA3D,GAAiE,EAD7DD;AAEN5K,6BAAA,IACE+J,0BAAA,KAAU3B,qGAAV,GACI7T,sBADJ,GACQ0T,mGADR,GAEwB,CAApB,IAAA+B,wDAAA,IACCJ,kDAAUtJ,CAAAA,IAAV,CAAe2J,6BAAf,CAAA,EACD1V,sBAAEwT,CAAAA,KAAF,CAAQ,CAAR,EAAWiC,wDAAX,CADC;AAllBkBc,WAklBlB,GAGCvW,sBAAEwT,CAAAA,KAAF,CAAQiC,wDAAR,CAJF,IAKAnC,+FALA,GAMA+C,oDANA,GAOArW,sBAPA,GAOIsT,+FAPJ,IAOmC,CAAC,CAAtB,KAAAmC,wDAAA,GAA0B5V,sBAA1B,GAA8BwW,oDAP5C,CAHN;AA5G0B;AA6H5B,uHAAA,GAAO,CAACxB,gHAAA,CAuBoCrG,qHAvBpC,EAHN/C,yBAGM,IAuBoC+C,qHA1BlC,CAAQ4G,oDAAR,CAGF;AAHgB,OAGhB,KAjfSE,CA8eiB,KA0BmB9D,gEA1BnB,GAAsB,QAAtB,GAAiC,EAG3D,EAAD,EAA+C6D,kDAA/C,CAAP;AAuBQ,uHAAA,GAAA9W,uBAAA,CAAoB,qHAApB,CAAA;AAACiY,iJAAAA,GAAD,qHAAA,CAAA,IAAA,EAAA,CAAA,KAACA;AAAMC,uHAAAA,GAAP,qHAAA,CAAA,IAAA,EAAA,CAAA,KAAOA;AACb,MAAK3I,CAAAA,IAAL,GAAU4I,gGAASnL,CAAAA,aAAT,CADCiL,+IACD,EAA6B9K,+CAA7B,CAAV;AACAiJ,iGAAOgC,CAAAA,WAAP,GAAqB,IAAK7I,CAAAA,IAAG5B,CAAAA,OAA7B;AA1gBeoJ,GA6gBf,KAAI9D,gEAAJ,KACQoF,+CACN,GADmB,IAAK9I,CAAAA,IAAG5B,CAAAA,OAAQ2K,CAAAA,UACnC,EAAAD,+CAAWE,CAAAA,WAAX,CAAA,KAAA,CAAAF,+CAAA,EAAA5K,4BAAA,CAA0B4K,+CAAWG,CAAAA,UAArC,CAAA,CAFF;AAMA,OAAA,EAAsC,IAAtC,MAAQ7L,+CAAR,GAAeyJ,+FAAOqC,CAAAA,QAAP,EAAf,KAA8ChC,kBAAMpV,CAAAA,MAApD,GAA6DuV,YAA7D,CAAA,CAAwE;AACtE,QAAsB,CAAtB,KAAIjK,+CAAKuG,CAAAA,QAAT,CAAyB;AAuBvB,UAAKvG,+CAAiB+L,CAAAA,aAAlB,EAAJ;AACE,aAAmB,gEAAA,GAAA1Y,uBAAA,CAAC2M,+CAAiBgM,CAAAA,iBAAlB,EAAA,CAAA,EAAA,+IAAA,GAAA,gEAAA,CAAA,IAAA,EAAnB,EAAA,CAAA,+IAAA,CAAA,IAAA,EAAA,+IAAA;AAAA,wEAAA,CAAA,IAAA,EAAA;AAAA,yJACE,GADF,+IAAA,CAAA,KACE,EAAI/U,+IAAKgV,CAAAA,QAAL,CA3pBaZ,OA2pBb,CAAJ,IACQa,kDAkBN;AAxDYX,+HAsCK,CAAUxB,gBAAA,EAAV,CAkBjB,EAhBMoC,oDAgBN,GAjBenM,+CAAiBoM,CAAAA,YAAlBzU,CAA+BV,+IAA/BU,CACQL,CAAAA,KAAN,CAAY8Q,+FAAZ,CAgBhB;AAfMvK,4DAeN,GAfU,cAAe8M,CAAAA,IAAf,CAAoBuB,kDAApB,CAeV,EAdApC,kBAAMjJ,CAAAA,IAAN,CAAW,CACTyF,KA7iBO+F,CA4iBE,EAETnS,MAAO8P,wCAFE,EAGT/S,KAAM4G,kDAAA,CAAE,CAAF,CAHG,EAITyF,UAAS6I,oDAJA,EAKTG,OACW,GAAT,KAAAzO,kDAAA,CAAE,CAAF,CAAA,GACI0O,oGADJ;AAEa,aAAT,KAAA1O,kDAAA,CAAE,CAAF,CAAA,GACA2O,4GADA,GAES,GAAT,KAAA3O,kDAAA,CAAE,CAAF,CAAA,GACA4O,iGADA,GAEAC,qGAZG,CAAX,CAcA,EAAC1M,+CAAiB2M,CAAAA,eAAlB,CAAkC1V,+IAAlC,CAnBF;AAoBWA,yJAAKmU,CAAAA,UAAL,CAAgBhD,+FAAhB,CApBX,KAqBE0B,kBAAMjJ,CAAAA,IAAN,CAAW,CACTyF,KAxjBKsG,CAujBI,EAET1S,MAAO8P,wCAFE,CAAX,CAIA,EAAChK,+CAAiB2M,CAAAA,eAAlB,CAAkC1V,+IAAlC,CAzBF,CAAA;AADF;AADF;AAiCA,UAAIiS,uGAAepC,CAAAA,IAAf,CAAqB9G,+CAAiB6G,CAAAA,OAAtC,CAAJ,KAIQvD,gEAEF,GAFatD,+CAAiBuB,CAAAA,WAAajK,CAAAA,KAA/B,CAAqC8Q,+FAArC,CAEZ,EADEqC,+IACF;AADcnH,sEAAQ5O,CAAAA,MACtB,GAD+B,CAC/B,EAAY,CAAZ,GAAA+V,+IANN,EAMqB;AAChBzK,uDAAiBuB,CAAAA,WAAlB,GAAgC/I,qGAAA,GAC3BA,qGAAaqU,CAAAA,WADc,GAE5B,EAFJ;AAQA,aAASlY,oDAAT,GAAa,CAAb,EAAgBA,oDAAhB,GAAoB8V,+IAApB,EAA+B9V,oDAAA,EAA/B;AACGqL,yDAAiB8M,CAAAA,MAAlB,CAAyBxJ,gEAAA,CAAQ3O,oDAAR,CAAzB,EAjrBaa,0FAAEoM,CAAAA,aAAF,CAAgB,EAAhB,CAirBb,CAGA,EADA6H,+FAAOqC,CAAAA,QAAP,EACA,EAAAhC,kBAAMjJ,CAAAA,IAAN,CAAW,CAACyF,KAxlBPyG,CAwlBM,EAAmB7S,MAAO,EAAE8P,wCAA5B,CAAX,CAAA;AAJF;AASChK,uDAAiB8M,CAAAA,MAAlB,CAAyBxJ,gEAAA,CAAQmH,+IAAR,CAAzB,EAzrBejV,0FAAEoM,CAAAA,aAAF,CAAgB,EAAhB,CAyrBf,CAAA;AAlBiB;AA9DE,KAAzB,KAmFO,KAAsB,CAAtB,KAAI5B,+CAAKuG,CAAAA,QAAT;AAEL,UADcvG,+CAAiBjK,CAAAA,IAC/B,KAAawS,oGAAb;AACEuB,0BAAMjJ,CAAAA,IAAN,CAAW,CAACyF,KAnmBHyG,CAmmBE,EAAmB7S,MAAO8P,wCAA1B,CAAX,CAAA;AADF;AAIE,aADIrV,gEACJ,GADQ,CAAC,CACT,EAA+D,CAAC,CAAhE,MAAQA,gEAAR,GAAaqL,+CAAiBjK,CAAAA,IAAKoE,CAAAA,OAAvB,CAA+BiO,+FAA/B,EAAuCzT,gEAAvC,GAA2C,CAA3C,CAAZ,EAAA;AAGEmV,4BAAMjJ,CAAAA,IAAN,CAAW,CAACyF,KApmBH0G,CAomBE,EAAqB9S,MAAO8P,wCAA5B,CAAX,CAEA,EAAArV,gEAAA,IAAKyT,+FAAO1T,CAAAA,MAAZ,GAAqB,CAArB;AALF;AAJF;AAFK;AAePsV,4CAAA,EAAA;AAnGsE;AApBjD;AAwIlBwB,gGAAA,CAAA,aAAPnL,GAAAA,QAAoB,CAACE,iBAAD,CAA4C;AAAA,MACxDqC,iBAAKpN,0FAAE6K,CAAAA,aAAF,CAAgB,UAAhB,CADmD;AAE9DuC,gBAAGqK,CAAAA,SAAH,GAAe1M,iBAAf;AACA,SAAOqC,cAAP;AAH8D,CAAhEvC;AAoBF6M,QAASA,0GAAgB,CACvBC,gBADuB,EAEvBxV,mBAFuB,EAGvByV,mBAHuB,EAIvBC,iBAJuB,CAIA;AADvBD,qBAAA,GAAA,IAAA,EAAA,KAAAA,mBAAA,GAA0BD,gBAA1B,GAAAC,mBAAA;AAKA,MAAIzV,mBAAJ,KAAc2R,gGAAd;AACE,WAAO3R,mBAAP;AADF;AAKgC2V,MAAAA,6DAAAA,EAF5BC,sBACiBvW,IAAAA,EAAnB,KAAAqW,iBAAA,GACI,IAAA,KAA0BC,6DAA1B,GAACF,mBAAyBE,CAAAA,GAA1B,IAAA,IAAA,EAAA,GAA0BA,6DAA1B,CAAyCD,iBAAzC,CADJ,GAEKD,mBAA+CI,CAAAA,GADtBF;AAE1BG,+DAAAA,GAA2BhF,oGAAA,CAAY9Q,mBAAZ,CAAA,GAC7BX,IAAAA,EAD6B,GAG5BW,mBAAD,CAAA,eAHE8V;AAIFF,MAAAA,oCAAAA;AAAJ,OAAsBtZ,IAAAA,KAAlBsZ,oCAAkBtZ,GAAlBsZ,mBAAkBtZ,IAAAA,IAAAA,EAAAA,GAAlBsZ,oCAAkBtZ,CAAAA,WAAtB,MAAsCwZ,6DAAtC,CAAgE;AAE9DF,QAAAA,qCAAAA,EAAA,qCAAAA;AAAA,QAAA,KAAAA,qCAAA,GAAAA,mBAAA,KAAA,IAAA,KAAA,qCAAA,GAAAA,qCAAA,CAAA,kCAAA,KAAA,qCAAA,CAAA,IAAA,CAAAA,qCAAA,EAA2D,CAAA,CAA3D,CAAA;AACiCvW,QAAAA,EAAjC,KAAIyW,6DAAJ,GACEF,mBADF,GACqBvW,IAAAA,EADrB,IAGEuW,mBACA,GADmB,IAAIE,6DAAJ,CAA6BN,gBAA7B,CACnB,EAAAI,mBAAiBG,CAAAA,cAAjB,CAA8BP,gBAA9B,EAAoCC,mBAApC,EAA4CC,iBAA5C,CAJF,CAAA;AAMA,QAAuBrW,IAAAA,EAAvB,KAAIqW,iBAAJ,CAAkC;AAC/B,UAAA,0CAAA,EAA0BC,wBAA1B;AAAD,OAA2BA,IAA1B,KAA0BA,wBAA1B,GAA0BA,CAAzBF,0CAAyBE,GAAzBF,mBAAyBE,EAAAA,GAA1B,IAA0BA,wBAA1B,GAACF,0CAA0C,CAAA,GAA3C,GAA2C,EAA5C,EAAgDC,iBAAhD,CAAA,GACEE,mBADF;AADgC,KAAlC;AAIGH,yBAAiCI,CAAAA,GAAlC,GAAgDD,mBAAhD;AAJF;AAT8D;AAgBvCvW,MAAAA,EAAzB,KAAIuW,mBAAJ,KACE5V,mBADF,GACUuV,yGAAA,CACNC,gBADM,EAENI,mBAAiBI,CAAAA,WAAjB,CAA2BR,gBAA3B,EAAkCxV,mBAA0B0R,CAAAA,MAA5D,CAFM,EAGNkE,mBAHM,EAINF,iBAJM,CADV;AAQA,SAAO1V,mBAAP;AAvCuB;AAwDvB1D,QAAA,yGAAA,CAAYwO,oBAAZ,EAAgC2K,mBAAhC,CAAiD;AAPjD,MAAAQ,CAAAA,GAAA,GAAmC,EAAnC;AAKA,MAAAC,CAAAA,GAAA,GAAiD7W,IAAAA,EAAjD;AAGE,MAAK2L,CAAAA,YAAL,GAAkBF,oBAAlB;AACA,MAAKqL,CAAAA,GAAL,GAAgBV,mBAAhB;AAF+C;AAiBjDW,wGAAA,CAAA,SAAA,CAAA,GAAAC,GAAAA,QAAM,CAACxN,qBAAD,CAAmC;AACjC,MAAA,iDAGF,IAAKmC,CAAAA,YAHH,EACC3B,qCAAL,8CAAA,CAAA,IAAK,CAAA,OADD;AAEG8I,gDAAAA,GAAP,8CAAA,CAAA,GAAOA;AAEkBmE,MAAAA,2CAAAA,EAArBC,uBAAyCC,CAApBF,IAAT,KAASA,2CAAT,GAASA,IAAAA,IAATzN,qBAASyN,GAAAA,IAAAA,EAAAA,GAATzN,qBAASyN,CAAAA,eAAT,IAASA,2CAAT,GAA0BzY,0FAAG2Y,EAAAA,UAA9B,CAAyCnN,kCAAzC,EAAkD,CAAA,CAAlD,CAAUiN;AAC3BxE,iGAAOgC,CAAAA,WAAP,GAAqByC,oBAArB;AAEIlO,oCAAAA,GAAOyJ,+FAAOqC,CAAAA,QAAP,EAAP9L;AAKJ,OAJiB,IACboO,eADApE,2CACAoE,GADY,CAAC,EAEbC,kBAAevE,8CAAA,CAAM,CAAN,CAEnB,EAAwB9S,IAAAA,EAAxB,KAAOqX,eAAP,CAAA,CAAmC;AACjC,QAAIrE,2CAAJ,KAAkBqE,eAAanU,CAAAA,KAA/B,CAAsC;AAAC,UACjCiT,sDAAAA,IAAAA,EADiC;AA/uB1BJ,OAivBX,KAAIsB,eAAa/H,CAAAA,IAAjB,GACE6G,mDADF,GACS,IAAImB,iGAAJ,CACLtO,kCADK,EAELA,kCAAKuO,CAAAA,WAFA,EAGL,IAHK,EAIL/N,qBAJK,CADT,GAlvBe6L,CAyvBR,KAAIgC,eAAa/H,CAAAA,IAAjB,GACL6G,mDADK,GACE,IAAIkB,eAAa/B,CAAAA,MAAjB,CACLtM,kCADK,EAELqO,eAAapX,CAAAA,IAFR,EAGLoX,eAAa/K,CAAAA,SAHR;AAIL,UAJK,EAKL9C,qBALK,CADF,GApvBMoM,CAovBN,KAQIyB,eAAa/H,CAAAA,IARjB,KASL6G,mDATK,GASE,IAAIqB,mGAAJ,CAAgBxO,kCAAhB,EAAqC,IAArC,EAA2CQ,qBAA3C,CATF,CAPP;AAkBA,UAAKoN,CAAAA,GAAQ/M,CAAAA,IAAb,CAAkBsM,mDAAlB,CAAA;AACAkB,qBAAA,GAAevE,8CAAA,CAAM,EAAEsE,YAAR,CAAf;AArBoC;AAuBpBC,uDAAAA,GAAAA,IAAAA,EAAAA;AAAdrE,+CAAJ,MAAgC9P,IAAAA,KAAdmU,mDAAcnU,GAAdmU,eAAcnU,IAAAA,IAAAA,EAAAA,GAAdmU,mDAAcnU,CAAAA,KAAhC,MACE8F,kCACA,GADOyJ,+FAAOqC,CAAAA,QAAP,EACP,EAAA9B,2CAAA,EAFF;AAxBiC;AAgCnCP,iGAAOgC,CAAAA,WAAP,GAAqBjW,0FAArB;AACA,SAAO0Y,oBAAP;AA9CuC,CAAzCF;AAiDAD,wGAAA,CAAA,SAAA,CAAA,GAAAU,GAAAA,QAAO,CAACpF,mBAAD,CAAuB;AAE5B,OAF4B,IACxB1U,kBAAI,CADoB,EAEJiZ,qBAAAva,uBAAAua,CAALA,IAAKA,CAAAA,GAAAA,CAFI,EAEJA,4DAAAA,kBAAAA,CAAAA,IAAAA,EAAxB,EAAA,CAAA,yDAAA,CAAA,IAAA,EAAA,yDAAA,GAAA,kBAAA,CAAA,IAAA,EAAA;AAAA,6DAqBE,GArBF,yDAAA,CAAA,KAqBE,EApBa5W,IAAAA,EAoBb,KApBImW,yDAoBJ,KAV0CnW,IAAAA,EAAxC,KAAKmW,yDAAuB7J,CAAAA,SAA5B,IACG6J,yDAAuBpL,CAAAA,YAAxB,CAAmCsH,mBAAnC,EAA2C8D,yDAA3C,EAAkExY,eAAlE,CAIA,EAAAA,eAAA,IAAMwY,yDAAuB7J,CAAAA,SAAS5O,CAAAA,MAAtC;AAA+C,KALjD,IAOEyY,yDAAKpL,CAAAA,YAAL,CAAgBsH,mBAAA,CAAO1U,eAAP,CAAhB,CAGJ,GAAAA,eAAA,EAAA;AArBF;AAF4B,CAA9B8Z;AA3EFC,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAAMX,wGAAN,CAAA,SAAA,EAAA,CAAA,WAeM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAU1M,QAAA,EAAA;AACZ,SAAO,IAAKyM,CAAAA,GAASzM,CAAAA,UAArB;AADY,CAAV,CAfN,EAAA,gBAoBM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAasN,QAAA,EAAA;AACf,SAAO,IAAKb,CAAAA,GAASa,CAAAA,eAArB;AADe,CAAb,CApBN,CAAA,CAAA;AA8LE1a,QAAA,kGAAA,CACEoO,qBADF,EAEEC,mBAFF,EAGE8K,mBAHF,EAIE5M,qBAJF,CAIoC;AA/C3B,MAAA8F,CAAAA,IAAA,GA11BQyG,CA01BR;AAET,MAAArK,CAAAA,kBAAA,GAA4B6G,+FAA5B;AA+BA,MAAAsE,CAAAA,GAAA,GAAiD7W,IAAAA,EAAjD;AAgBE,MAAKmL,CAAAA,aAAL,GAAmBE,qBAAnB;AACA,MAAKE,CAAAA,WAAL,GAAiBD,mBAAjB;AACA,MAAKwL,CAAAA,GAAL,GAAgBV,mBAAhB;AACA,MAAK5M,CAAAA,OAAL,GAAeA,qBAAf;AAI8BoO,MAAAA,wBAAAA;AAA9B,MAAKC,CAAAA,GAAL,GAA8BD,IAAT,KAASA,wBAAT,GAASA,IAAAA,IAATpO,qBAASoO,GAAAA,IAAAA,EAAAA,GAATpO,qBAASoO,CAAAA,WAAT,IAASA,wBAAT,GAAwB,CAAA,CAA7C;AAGE,MAAKE,CAAAA,GAAL,GAAsB9X,IAAAA,EAAtB;AAZgC;AAiEpC+K,4BAAAA,GAAAA,iGAAAA,CAAAA,SAAAA;AAAAgN,4BAAAhN,CAAAA,YAAAA,GAAAA,QAAU,CAACpK,mBAAD,EAAiBsK,2BAAjB,CAAwD;AAMhEtK,qBAAA,GAAQuV,yGAAA,CAAiB,IAAjB,EAAuBvV,mBAAvB,EANiB,IAAA,EAAAsK,KAAAA,2BAAAA,GAAmC,IAAnCA,GAAAA,2BAMjB,CAAR;AACIwG,sGAAA,CAAY9Q,mBAAZ,CAAJ,GAIMA,mBAAJ,KAAc4R,+FAAd,IAAkC,IAAlC,IAAyB5R,mBAAzB,IAAoD,EAApD,KAA0CA,mBAA1C,IACM,IAAK+K,CAAAA,kBAWT,KAX8B6G,+FAW9B,IAFE,IAAKyF,CAAAA,SAAL,EAEF,EAAA,IAAKtM,CAAAA,kBAAL,GAAwB6G,+FAZ1B;AAaW5R,qBAbX,KAaqB,IAAK+K,CAAAA,kBAb1B,IAa8C/K,mBAb9C,KAawD2R,gGAbxD,IAcE,IAAK2F,CAAAA,aAAL,CAAiBtX,mBAAjB,CAlBJ,GAqBuDX,IAAAA,EAAhD,KAAKW,mBAAD,CAAA,UAAJ,GACL,IAAKuX,CAAAA,uBAAL,CAA2BvX,mBAA3B,CADK,GAEiCX,IAAAA,EAAjC,KAAKW,mBAAe4O,CAAAA,QAApB,GAgBL,IAAK4I,CAAAA,aAAL,CAAiBxX,mBAAjB,CAhBK,GA3jCT+Q,gGAAA,CA4kCwB/Q,mBA5kCxB,CA4kCS;AA1kCoC,YA0kCpC,KA1kCT,OAAO,IAAA,IA0kCiBA,mBA1kCjB,GAAA,IAAA,EAAA,GA0kCiBA,mBA1kCjB,CAAiB8L,MAAO2L,CAAAA,QAAxB,CAAP,CA0kCS,GACL,IAAKC,CAAAA,iBAAL,CAAqB1X,mBAArB,CADK,GAIL,IAAKsX,CAAAA,aAAL,CAAiBtX,mBAAjB,CA5CF;AAPgE,CAAlEoK;AAuDQgN,4BAAAO,CAAAA,SAAAA,GAAAA,QAAO,CAAiBtP,iBAAjB,CAAwB;AACrC,SAAOH,6FAAA,CAAKA,6FAAA,CAAK,IAAKsC,CAAAA,aAAV,CAAuBd,CAAAA,UAA5B,CAAyC6B,CAAAA,YAAzC,CACLlD,iBADK,EAEL,IAAKuC,CAAAA,WAFA,CAAP;AADqC,CAA/B+M;AAOAP,4BAAAI,CAAAA,aAAAA,GAAAA,QAAW,CAACxX,mBAAD,CAAY;AAC7B,MAAI,IAAK+K,CAAAA,kBAAT,KAA8B/K,mBAA9B,CAAqC;AACnC,QAAKqX,CAAAA,SAAL,EAAA;AACA,QA1wB2C7I,iHA0wB3C,KAE+BgC,sGAF/B,CAGE;AACwC9G,UAAAA,qCAAAA,EAAlCkO,oBAA8CC,IAAAA,KAAZnO,qCAAYmO,GAA7BnO,IAAKc,CAAAA,aAAYd,CAAAA,UAAYmO,IAAAA,IAAAA,EAAAA,GAAZnO,qCAAYmO,CAAAA,QAAZnO;AACxC,UAAuB,OAAvB,KAAIkO,iBAAJ,IAAqD,QAArD,KAAkCA,iBAAlC;AAmBE,cAAU5Y,KAAJ,CAlBQG,WAkBR,CAAN;AAnBF;AAFA;AAgCF,QAAK4L,CAAAA,kBAAL,GAAwB,IAAK4M,CAAAA,SAAL,CAAa3X,mBAAb,CAAxB;AArCmC;AADR,CAAvBwX;AA0CAJ,4BAAAE,CAAAA,aAAAA,GAAAA,QAAW,CAACtX,mBAAD,CAAe;AAIhC,MACE,IAAK+K,CAAAA,kBADP,KAC4B6G,+FAD5B,IAEEd,oGAAA,CAAY,IAAK/F,CAAAA,kBAAjB,CAFF,CAGE;AAAC,QACK1C,sCAAOH,6FAAA,CAAK,IAAKsC,CAAAA,aAAV,CAAuBoM,CAAAA,WADnC;AAG6BvX,QAAAA,EAA5B,KAAI,IAAK8X,CAAAA,GAAT,KACE,IAAKA,CAAAA,GADP,GA3zByC3I,iHA3XxC,CAurCuCnG,mCAvrCvC,EAurC6C/I,MAvrC7C,EAurCqDqP,UAvrCrD,CAsrCD;AAGA3O,uBAAA,GAAQ,IAAKmX,CAAAA,GAAL,CAAoBnX,mBAApB,CAAR;AASDqI,uCAAcjK,CAAAA,IAAf,GAAsB4B,mBAAtB;AAfA,GAHF;AAqBU8X,uCAiBN,GAjBiBja,0FAAEka,CAAAA,cAAF,CAAiB,EAAjB,CAiBjB,EAhBA,IAAKP,CAAAA,aAAL,CAAiBM,mCAAjB,CAgBA,EAX4BzY,IAAAA,EAW5B,KAXI,IAAK8X,CAAAA,GAWT,KAVE,IAAKA,CAAAA,GAUP,GA31ByC3I,iHA3XxC,CA4sCuCsJ,mCA5sCvC,EAurC6CxY,MAvrC7C,EAurCqDqP,UAvrCrD,CAstCD,GARA3O,mBAQA,GARQ,IAAKmX,CAAAA,GAAL,CAAoBnX,mBAApB,CAQR,EAAA8X,mCAAS1Z,CAAAA,IAAT;AAAgB4B,uBAAhB;AAtCJ;AAkDA,MAAK+K,CAAAA,kBAAL,GAAwB/K,mBAAxB;AAtDgC,CAA1BsX;AAyDAF,4BAAAG,CAAAA,uBAAAA,GAAAA,QAAqB,CAC3BlS,uDAD2B,CACoB;AAGxC,MAAAqM,sBAAgCrM,uDAAhC,CAAA,MAAA,EAAwBsJ,qBAAQtJ,uDAAxB,CAAA,UAAR;AAKDyF,yDAAAA,GACY,QAAhB,KAAA,MAAO6D,mBAAP,GACI,IAAKnD,CAAAA,eAAL,CAAmBnG,uDAAnB,CADJ,IAEiBhG,IAAAA,EAAZ,KAAAsP,kBAAK1D,CAAAA,IAAL,KACE0D,kBAAK1D,CAAAA,IADP,GACY4I,gGAASnL,CAAAA,aAAT,CACTsJ,gHAAA,CAAwBrD,kBAAK1I,CAAAA,GAA7B,EAAgC0I,kBAAK1I,CAAAA,GAAL,CAAO,CAAP,CAAhC,CADS;AAET,MAAK4C,CAAAA,OAFI,CADZ,GAKD8F,kBAPJ,CADI7D;AAUIC,MAAAA,uDAAAA;AAAV,GAAiDC,IAAAA,KAAvCD,uDAAuCC,GAA5CD,IAAKA,CAAAA,kBAAuCC,IAAAA,IAAAA,EAAAA,GAAvCD,uDAAuCC,CAAAA,YAAjD,MAAgEF,uDAAhE,GAUG,IAAKC,CAAAA,kBAAsC+L,CAAAA,GAA5C,CAAoDpF,mBAApD,CAVF,IAYQsG,uDAwBN,GAxBiB,IAAI5B,wGAAJ,CAAqBtL,uDAArB;AAA2C,MAA3C,CAwBjB,EAvBMyL,uDAuBN,GAvBiByB,uDAAS3B,CAAAA,GAAT,CAAgB,IAAKxN,CAAAA,OAArB,CAuBjB,EAZAmP,uDAASlB,CAAAA,GAAT,CAAiBpF,mBAAjB,CAYA,EADA,IAAK8F,CAAAA,aAAL,CAAiBjB,uDAAjB,CACA,EAAA,IAAKxL,CAAAA,kBAAL,GAAwBiN,uDApC1B,CAAA;AAlB+C,CADzCT;AA6DRH,4BAAA5L,CAAAA,eAAAA,GAAAA,QAAa,CAACnG,mBAAD,CAAiC;AACd,MAC1ByF,uBAAWY,sGAAc9M,CAAAA,GAAd,CADCyG,mBAAOsG,CAAAA,SACR,CADe;AAEbtM,MAAAA,EAAjB,KAAIyL,oBAAJ,IAUIY,sGAAcjN,CAAAA,GAAd,CAAkB4G,mBAAOsG,CAAAA,SAAzB,EAAmCb,oBAAnC,GAA8C,IAAImN,gGAAJ,CAAa5S,mBAAb,CAA9C,CAVJ;AAcA,SAAOyF,oBAAP;AAjB4C,CAA9CU;AAoBQ4L,4BAAAM,CAAAA,iBAAAA,GAAAA,QAAe,CAAC1X,mCAAD,CAAyB;AAWzC+Q,kGAAA,CAAQ,IAAKhG,CAAAA,kBAAb,CAAL,KACE,IAAKA,CAAAA,kBACL,GADwB,EACxB,EAAA,IAAKsM,CAAAA,SAAL,EAFF;AAGC,MAIKa,eAAY,IAAKnN,CAAAA,kBAJtB,EAKG0L,wBAAY,CALf,EAMG0B,WANH;AAQkBnY,qCAAAA,GAAAtE,uBAAAsE,CAAAA,mCAAAA,CAAAA;AAAnB,OAAmBA,IAAAA,8DAAAA,mCAAAA,CAAAA,IAAAA,EAAnB,EAAA,CAAA,2DAAA,CAAA,IAAA,EAAA,2DAAA,GAAA,mCAAA,CAAA,IAAA,EAAA;AAAA,+DAmBE,GAnBF,2DAAA,CAAA,KAmBE,EAlBIyW,qBAAJ,KAAkByB,YAAUnb,CAAAA,MAA5B,GAKEmb,YAAUhP,CAAAA,IAAV,CACGiP,WADH,GACc,IAAIxB,iGAAJ,CACV,IAAKgB,CAAAA,SAAL,CAtzCe9Z,0FAAEoM,CAAAA,aAAF,CAAgB,EAAhB,CAszCf,CADU,EAEV,IAAK0N,CAAAA,SAAL,CAvzCe9Z,0FAAEoM,CAAAA,aAAF,CAAgB,EAAhB,CAuzCf,CAFU;AAGV,QAHU,EAIV,IAAKpB,CAAAA,OAJK,CADd,CALF,GAeEsP,WAfF,GAeaD,YAAA,CAAUzB,qBAAV,CAGb,EADA0B,WAAS/N,CAAAA,YAAT,CAAoBgO,2DAApB,CACA,EAAA3B,qBAAA,EAAA;AAnBF;AAsBIA,uBAAJ,GAAgByB,YAAUnb,CAAAA,MAA1B,KAEE,IAAKsa,CAAAA,SAAL,CACEc,WADF,IACcjQ,6FAAA,CAAKiQ,WAASvN,CAAAA,WAAd,CAA0BgM,CAAAA,WADxC,EAEEH,qBAFF,CAKA,EAAAyB,YAAUnb,CAAAA,MAAV,GAAmB0Z,qBAPrB;AA5C8C,CAAxCiB;AAkERN,4BAAAC,CAAAA,SAAAA,GAAAA,QAAO,CACLgB,kBADK,EAELjP,4BAFK,CAEQ;AADbiP,oBAAA,GAAA,IAAA,EAAA,KAAAA,kBAAA,GAA0BnQ,6FAAA,CAAK,IAAKsC,CAAAA,aAAV,CAAuBoM,CAAAA,WAAjD,GAAAyB,kBAAA;AAGKC,MAAAA,qCAAAA;AACL,OADA,IACA,KADKA,qCACL,GADAA,IAAKA,CAAAA,GACL,KADKA,qCAAAA,CAAAA,IAAL,CAAAA,IAAA,EAAiC,CAAA,CAAjC,EAAwC,CAAA,CAAxC,EAA8ClP,4BAA9C,CACA,EAAOiP,kBAAP,IAAgBA,kBAAhB,KAA0B,IAAKzN,CAAAA,WAA/B,CAAA;AACQ5E,gCAEN,GAFUkC,6FAAA,CAAKmQ,kBAAL,CAAazB,CAAAA,WAEvB,EADC1O,6FAAA,CAAKmQ,kBAAL,CAAyBE,CAAAA,MAA1B,EACA,EAAAF,kBAAA,GAAQrS,4BAAR;AAHF;AAHa,CAFfqR;AAkBAmB,QAAA,yCAAY,CAAZA,6CAAY,EAACvB,cAAD,CAAqB;AAC/B,MAAsB5X,IAAAA,EAAtB,KAAI,6CAAK8W,CAAAA,GAAT,CAAiC;AAC/B,iDAAKe,CAAAA,GAAL,GAAqBD,cAArB;AACKqB,QAAAA,qCAAAA;AAAL,QAAA,KAAKA,qCAAL,GAAAA,6CAAKA,CAAAA,GAAL,KAAKA,qCAAAA,CAAAA,IAAL,CAAAA,6CAAA,EAAiCrB,cAAjC,CAAA;AAF+B;AADF;AAvbnCF,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAAMJ,iGAAN,CAAA,SAAA,EAAA,CAAA,gBAwBM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAaK,QAAA,EAAA;AAIHb,MAAAA,qCAAAA,EAAUa,wBAAVb;AAAZ,SAAsBa,IAAf,KAAeA,wBAAf,GAAeA,IAAAA,KAAVb,qCAAUa,GAAfb,IAAKA,CAAAA,GAAUa,IAAAA,IAAAA,EAAAA,GAAVb,qCAAUa,CAAAA,eAAf,IAAeA,wBAAf,GAAgC,IAAKE,CAAAA,GAA5C;AAJe,CAAb,CAxBN,EAAA,WAkFM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAUxN,QAAA,EAAA;AAAA,MACRA,gBAAmBxB,6FAAA,CAAK,IAAKsC,CAAAA,aAAV,CAAuBd,CAAAA,UADlC,EAEN+L,sBAAS,IAAKU,CAAAA,GAFR,EAKVzM,qCALU;AAICrK,MAAAA,EADb,KACEoW,mBADF,IAE2B,EAF3B,MAEc7G,IAAAA,KAAZlF,qCAAYkF,GAAZlF,aAAYkF,IAAAA,IAAAA,EAAAA,GAAZlF,qCAAYkF,CAAAA,QAFd,MAOElF,aAPF,GAOgB+L,mBAAwC/L,CAAAA,UAPxD;AASA,SAAOA,aAAP;AAZY,CAAV,CAlFN,CAAA,CAAA;AAggBEpN,QAAA,sGAAA,CACEwM,oBADF,EAEExJ,kBAFF,EAGEqM,mBAHF,EAIE8J,mBAJF,EAKE5M,qBALF,CAKoC;AAxC3B,MAAA8F,CAAAA,IAAA,GAvzCY+F,CAuzCZ;AAgBT,MAAA3J,CAAAA,kBAAA,GAA6C6G,+FAA7C;AAMA,MAAAsE,CAAAA,GAAA,GAAiD7W,IAAAA,EAAjD;AAoBE,MAAKyJ,CAAAA,OAAL,GAAeA,oBAAf;AACA,MAAKxJ,CAAAA,IAAL,GAAYA,kBAAZ;AACA,MAAK6W,CAAAA,GAAL,GAAgBV,mBAAhB;AACA,MAAK5M,CAAAA,OAAL,GAAeA,qBAAf;AACqB,GAArB,GAAI8C,mBAAQ5O,CAAAA,MAAZ,IAAyC,EAAzC,KAA0B4O,mBAAA,CAAQ,CAAR,CAA1B,IAA8D,EAA9D,KAA+CA,mBAAA,CAAQ,CAAR,CAA/C,IACE,IAAKZ,CAAAA,kBACL,GAD4BlO,KAAJ,CAAU8O,mBAAQ5O,CAAAA,MAAlB,GAA2B,CAA3B,CAA8B0b,CAAAA,IAA9B,CAAmC,IAAIrZ,MAAJ,EAAnC,CACxB,EAAA,IAAKuM,CAAAA,SAAL,GAAeA,mBAFjB,IAIE,IAAKZ,CAAAA,kBAJP,GAI0B6G,+FAJ1B;AAOE,MAAK8G,CAAAA,YAAL,GAAkBrZ,IAAAA,EAAlB;AAbgC;AAuCpC0V,qGAAA,CAAA,SAAA,CAAA,YAAA3K,GAAAA,QAAU,CACRpK,mBADQ,EAERsK,2BAFQ,EAGRqO,aAHQ,EAIRC,WAJQ,CAIU;AAFlBtO,6BAAA,GAAA,IAAA,EAAA,KAAAA,2BAAA,GAAmC,IAAnC,GAAAA,2BAAA;AAEkB,MAEZqB,sBAAU,IAAKA,CAAAA,SAFH,EAKdkN,YAAS,CAAA,CALK;AAOlB,MAAgBxZ,IAAAA,EAAhB,KAAIsM,mBAAJ;AAME,QAJA3L,mBACA6Y,GADQtD,yGAAA,CAAiB,IAAjB,EAAuBvV,mBAAvB,EAA8BsK,2BAA9B,EAA+C,CAA/C,CACRuO,EAAAA,SAAAA,GACE,CAAC/H,oGAAA,CAAY9Q,mBAAZ,CADH6Y,IAEG7Y,mBAFH6Y,KAEa,IAAK9N,CAAAA,kBAFlB8N,IAEsC7Y,mBAFtC6Y,KAEgDlH,gGAChD;AACE,UAAK5G,CAAAA,kBAAL,GAAwB/K,mBAAxB;AADF;AANF,QASO;AAAC,QAEA0R,sBAAS1R,mBAFT;AAGNA,uBAAA,GAAQ2L,mBAAA,CAAQ,CAAR,CAAR;AAAmB,QAEf3O,eAFe;AAGnB,SAAKA,eAAL,GAAS,CAAT,EAAYA,eAAZ,GAAgB2O,mBAAQ5O,CAAAA,MAAxB,GAAiC,CAAjC,EAAoCC,eAAA,EAApC,CAAyC;AACvC,UAAA6P,iBAAI0I,yGAAA,CAAiB,IAAjB,EAAuB7D,mBAAA,CAAOiH,aAAP,GAAqB3b,eAArB,CAAvB,EAAgDsN,2BAAhD,EAAiEtN,eAAjE,CAAJ;AAEI6P,oBAAJ,KAAU8E,gGAAV,KAEE9E,cAFF,GAEO,IAAK9B,CAAAA,kBAAN,CAA0C/N,eAA1C,CAFN;AAIA6b,eAAA,KAAAA,SAAA,GACE,CAAC/H,oGAAA,CAAYjE,cAAZ,CADH,IACqBA,cADrB,KAC4B,IAAK9B,CAAAA,kBAAN,CAA0C/N,eAA1C,CAD3B;AAEA,UAAI6P,cAAJ,KAAU+E,+FAAV;AACE5R,2BAAA,GAAQ4R,+FAAR;AADF,YAEO,KAAI5R,mBAAJ,KAAc4R,+FAAd,CAAuB;AAClB/E,YAAAA,2BAAAA,IAAAA,EAAAA;AAAV7M,2BAAA,KAAU6M,IAAA,KAAAA,wBAAA,GAAAA,cAAA,IAAAA,wBAAA,GAAK,EAAf,IAAqBlB,mBAAA,CAAQ3O,eAAR,GAAY,CAAZ,CAArB;AAD4B;AAK7B,UAAK+N,CAAAA,kBAAN,CAA0C/N,eAA1C,CAAA,GAA+C6P,cAA/C;AAhBuC;AANpC;AAyBHgM,WAAJ,IAAc,CAACD,WAAf,IACE,IAAKE,CAAAA,cAAL,CAAkB9Y,mBAAlB,CADF;AAzCkB,CAJpBoK;AAmDA2K,qGAAA,CAAA,SAAA,CAAA,cAAA+D,GAAAA,QAAY,CAAC9Y,mBAAD,CAAe;AACzB,MAAIA,mBAAJ,KAAc4R,+FAAd;AACG1J,iGAAA,CAAK,IAAKY,CAAAA,OAAV,CAA+BkM,CAAAA,eAAhC,CAAgD,IAAK1V,CAAAA,IAArD,CAAA;AADF,QAEO;AAEqBD,QAAAA,EAAxB,KAAI,IAAKqZ,CAAAA,YAAT,KACE,IAAKA,CAAAA,YADP,GA5rCyClK,iHA6rCrB,CAChB,IAAK1F,CAAAA,OADW,EAEhB,IAAKxJ,CAAAA,IAFW,EAGhB,WAHgB,CADpB;AAOwBU,QAAAA,wBAAAA;AAAxBA,uBAAA,GAAQ,IAAK0Y,CAAAA,YAAL,CAAgB1Y,IAAA,KAAAA,wBAAA,GAAAA,mBAAA,IAAAA,wBAAA,GAAS,EAAzB,CAAR;AAYCA,QAAAA,wBAAAA;AAFFkI,iGAAA,CAAK,IAAKY,CAAAA,OAAV,CAA+BiQ,CAAAA,YAAhC,CACE,IAAKzZ,CAAAA,IADP,EAEGU,IAAA,KAAAA,wBAAA,GAAAA,mBAAA,IAAAA,wBAAA,GAAS,EAFZ,CAAA;AAnBK;AAHkB,CAA3B8Y;AAnIF/B,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAAMhC,qGAAN,CAAA,SAAA,EAAA,CAAA,QA2BM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAO7F,QAAA,EAAA;AACT,SAAO,IAAKpG,CAAAA,OAAQoG,CAAAA,OAApB;AADS,CAAP,CA3BN,EAAA,gBAgCM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAa8H,QAAA,EAAA;AACf,SAAO,IAAKb,CAAAA,GAASa,CAAAA,eAArB;AADe,CAAb,CAhCN,CAAA,CAAA;AAkKA1a,QAAA,qGAAA,EAAA;AAAA0c,uGAAA,CAAA,KAAA,CAAA,IAAA,EAAAlc,SAAA,CAAA;AACoB,MAAA6R,CAAAA,IAAA,GAv9CEsK,CAu9CF;AADpB;AAA2BC,mBAAAC,CAArBvE,oGAAqBuE,EAAApE,qGAAAoE,CAAAA;AAIhBvE,oGAAA,CAAA,SAAA,CAAA,cAAAkE,GAAAA,QAAY,CAAC9Y,mBAAD,CAAe;AAERX,MAAAA,EAAxB,KAAI,IAAKqZ,CAAAA,YAAT,KACE,IAAKA,CAAAA,YADP,GA5tC2ClK,iHA6tCvB,CAChB,IAAK1F,CAAAA,OADW,EAEhB,IAAKxJ,CAAAA,IAFW,EAGhB,UAHgB,CADpB;AAOAU,qBAAA,GAAQ,IAAK0Y,CAAAA,YAAL,CAAgB1Y,mBAAhB,CAAR;AAWD,MAAK8I,CAAAA,OAAN,CAAsB,IAAKxJ,CAAAA,IAA3B,CAAA,GAAmCU,mBAAA,KAAU4R,+FAAV,GAAoBvS,IAAAA,EAApB,GAAgCW,mBAAnE;AApBkC,CAA3B8Y;AAyBXxc,QAAA,6GAAA,EAAA;AAAA0c,uGAAA,CAAA,KAAA,CAAA,IAAA,EAAAlc,SAAA,CAAA;AACoB,MAAA6R,CAAAA,IAAA,GAn/CWyK,CAm/CX;AADpB;AAAmCF,mBAAAC,CAA7BtE,4GAA6BsE,EAAApE,qGAAAoE,CAAAA;AAIxBtE,4GAAA,CAAA,SAAA,CAAA,cAAAiE,GAAAA,QAAY,CAAC9Y,mBAAD,CAAe;AASjCkI,+FAAA,CAAK,IAAKY,CAAAA,OAAV,CAA+BuQ,CAAAA,eAAhC,CACE,IAAK/Z,CAAAA,IADP,EAEE,CAAC,CAACU,mBAFJ,IAEaA,mBAFb,KAEuB4R,+FAFvB,CAAA;AATkC,CAA3BkH;AAkCTxc,QAAA,kGAAA,CACEwM,oBADF,EAEExJ,kBAFF,EAGEqM,mBAHF,EAIE8J,mBAJF,EAKE5M,qBALF,CAKoC;AAElCyQ,uGAAA,CAAA,IAAA,CAAA,IAAA,EAAMxQ,oBAAN,EAAexJ,kBAAf,EAAqBqM,mBAArB,EAA8B8J,mBAA9B,EAAsC5M,qBAAtC,CAAA;AATgB,MAAA8F,CAAAA,IAAA,GArhDD4K,CAqhDC;AAOkB;AARdL,mBAAAC,CAAlBrE,iGAAkBqE,EAAApE,qGAAAoE,CAAAA;AAwBbrE,iGAAA,CAAA,SAAA,CAAA,YAAA1K,GAAAA,QAAU,CACjBoP,cADiB,EAEjBlP,uCAFiB,CAEsB;AAGrC,MAAA,6CAAA;AADFkP,gBAAA,GACE,IAAA,KAAA,6CAAA,GAAAjE,yGAAA,CAAiB,IAAjB,EAAuBiE,cAAvB,EAHF,IAAA,EAAAlP,KAAAA,uCAAAA,GAAmC,IAAnCA,GAAAA,uCAGE,EAAqD,CAArD,CAAA,IAAA,6CAAA,GAA2DsH,+FAD7D;AAEA,MAAI4H,cAAJ,KAAoB7H,gGAApB,CAAA;AAGM8H,2CAAAA,GAAc,IAAK1O,CAAAA,kBAAnB0O;AAIAC,iDAAAA,GACHF,cADGE,KACa9H,+FADb8H,IACwBD,uCADxBC,KACwC9H,+FADxC8H,IAEHF,cAAyCG,CAAAA,OAFtCD,KAGDD,uCAAyCE,CAAAA,OAHxCD,IAIHF,cAAyCI,CAAAA,IAJtCF,KAKDD,uCAAyCG,CAAAA,IALxCF,IAMHF,cAAyCK,CAAAA,OANtCH,KAODD,uCAAyCI,CAAAA,OAPxCH;AAO+C,QAI/CI,uBACJN,cADIM,KACYlI,+FADZkI,KAEHL,uCAFGK,KAEalI,+FAFbkI,IAEwBJ,6CAFxBI,CAJ+C;AAmBjDJ,iDAAJ,IACE,IAAK5Q,CAAAA,OAAQiR,CAAAA,mBAAb,CACE,IAAKza,CAAAA,IADP,EAEE,IAFF,EAGEma,uCAHF,CADF;AAOIK,wBAAJ,IAIE,IAAKhR,CAAAA,OAAQkR,CAAAA,gBAAb,CACE,IAAK1a,CAAAA,IADP,EAEE,IAFF,EAGEka,cAHF,CAJF;AAUA,QAAKzO,CAAAA,kBAAL,GAAwByO,cAAxB;AAlDA;AAJuC,CAFhCpP;AA2DT0K,iGAAA,CAAA,SAAA,CAAA,WAAAmF,GAAAA,QAAW,CAACC,iBAAD,CAAa;AACtB,MAAqC,UAArC,KAAI,MAAO,KAAKnP,CAAAA,kBAAhB,CAAiD;AACflC,QAAAA,qCAAAA,EAASsR,wBAATtR;AAAhC,QAAKkC,CAAAA,kBAAiBhL,CAAAA,IAAtB,CAAyCoa,IAAd,KAAcA,wBAAd,GAAcA,IAAAA,KAATtR,qCAASsR,GAAdtR,IAAKA,CAAAA,OAASsR,IAAAA,IAAAA,EAAAA,GAATtR,qCAASsR,CAAAA,IAAd,IAAcA,wBAAd,GAAsB,IAAKrR,CAAAA,OAAtD,EAA+DoR,iBAA/D,CAAA;AAD+C,GAAjD;AAGG,QAAKnP,CAAAA,kBAAyCkP,CAAAA,WAA/C,CAA2DC,iBAA3D,CAAA;AAHF;AADsB,CAAxBD;AA2BA3d,QAAA,oGAAA,CACSwM,oBADT,EAEE2M,mBAFF,EAGE5M,qBAHF,CAGoC;AAF3B,MAAAC,CAAAA,OAAA,GAAAA,oBAAA;AAjBA,MAAA6F,CAAAA,IAAA,GAjnDUsG,CAinDV;AAYT,MAAAiB,CAAAA,GAAA,GAAiD7W,IAAAA,EAAjD;AASE,MAAK8W,CAAAA,GAAL,GAAgBV,mBAAhB;AACA,MAAK5M,CAAAA,OAAL,GAAeA,qBAAf;AAHkC;AAWpCgO,mGAAA,CAAA,SAAA,CAAA,YAAAzM,GAAAA,QAAU,CAACpK,mBAAD,CAAe;AAQvBuV,2GAAA,CAAiB,IAAjB,EAAuBvV,mBAAvB,CAAA;AARuB,CAAzBoK;AA/BF2M,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAAMF,mGAAN,CAAA,SAAA,EAAA,CAAA,gBA2BM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAaG,QAAA,EAAA;AACf,SAAO,IAAKb,CAAAA,GAASa,CAAAA,eAArB;AADe,CAAb,CA3BN,CAAA,CAAA;AAoFEtP,IAAAA,qCAAAA;AAAA,IAAA,KAAAA,qCAAA,GADmCG,MAAO+D,CAAAA,sBAC1C,KAAAlE,qCAAA,CAAkBuQ,gGAAlB,EAA4BtB,iGAA5B,CAAA;AAyCoB,IAAA,sCAAA,EAnCdyD,qBAmCc;AAnCUlR,CAAxBkR,IAAP,KAAOA,qBAAP,GAAAte,cAAOse,CAAAA,eAAP,IAAOA,qBAAP,GA9nEmBC,cA8nEQ,CAAA,eAA3B,GAA2B,EAAInR,EAAAA,IAAhC,CAAqC,OAArC,CAAA;AA+FA,sCAAA,GA1DeoR,QAAA,CACbta,0BADa,EAEbuK,8BAFa,EAGb1B,4BAHa,CAID;AASmB0R,MAAAA,sEAAAA,EAAzBC,qCAAyBD,IAAT,KAASA,sEAAT,GAASA,IAAAA,IAAT1R,4BAAS0R,GAAAA,IAAAA,EAAAA,GAAT1R,4BAAS0R,CAAAA,cAAT,IAASA,sEAAT,GAAyBhQ,8BAAhBgQ;AAG3B/E,wEAAAA,GAAmBgF,kCAAD,CAAA,UAAlBhF;AAUJ,MAAanW,IAAAA,EAAb,KAAImW,sEAAJ,CAAwB;AACG+E,QAAAA,qBAAAA;AAAnB5P,0EAAAA,GAAmB4P,IAAT,KAASA,qBAAT,GAASA,IAAAA,IAAT1R,4BAAS0R,GAAAA,IAAAA,EAAAA,GAAT1R,4BAAS0R,CAAAA,cAAT,IAASA,qBAAT,GAAyB,IAAnC5P;AAGL6P,sCAAD,CAAA,UAAA,GAAuChF,sEAAvC,GAA8C,IAAImB,iGAAJ,CAC5CpM,8BAAUgB,CAAAA,YAAV,CA92DqB1N,0FAAEoM,CAAAA,aAAF,CAAgB,EAAhB,CA82DrB,EAAuCU,sEAAvC,CAD4C,EAE5CA,sEAF4C;AAG5CtL,QAAAA,EAH4C,EAI5CwJ,IAAA,IAAAA,4BAAA,GAAAA,4BAAA,GAAW,EAJiC,CAA9C;AAJsB;AAWxB2M,wEAAKpL,CAAAA,YAAL,CAAgBpK,0BAAhB,CAAA;AAUA,SAAOwV,sEAAP;AA3CY,CAsDd;ACluEa,IAAAiF,6HALOC,cAMXjQ,CAAAA,UADIgQ,KAEUpb,IAAAA,EAFVob,KALOE,cAOV7S,CAAAA,QAFG2S,IALOG,cAOuB9S,CAAAA,QAASC,CAAAA,YAFvC0S,KAGX,oBAHWA,IAGaI,QAASze,CAAAA,SAHtBqe,IAIX,SAJWA,IAIE3N,aAAc1Q,CAAAA,SAJhB,EAsBP0e,oHAAoBhP,MAAA,EAtBb,EAwBPiP;AAAc,IAAIlJ,OAAJ,EAxBP;AAwCXvV,QAAA,yGAAA,CACE4Q,mBADF,EAEEvB,oBAFF,EAGEqP,YAHF,CAGmB;AARnB,MAAA,CAAA,YAAA,GAAmB,CAAA,CAAnB;AAUE,MAAIA,YAAJ,KAAkBF,iHAAlB;AACE,UAAU9b,KAAJ,CACJ,mEADI,CAAN;AADF;AAKA,MAAKkO,CAAAA,OAAL,GAAeA,mBAAf;AACA,MAAK+N,CAAAA,GAAL,GAAgBtP,oBAAhB;AARiB;AAgDnBuP,wGAAA,CAAA,SAAA,CAAA,QAAA/a,GAAAA,QAAQ,EAAA;AACN,SAAO,IAAK+M,CAAAA,OAAZ;AADM,CAAR/M;AA1DF4W,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAAamE,wGAAb,CAAA,SAAA,EAAA,CAAA,IAwBM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAUC,QAAA,EAAA;AAYX,MAGGA,yBAAa,IAAKC,CAAAA,GAHrB,EAIKzP,uBAAU,IAAKsP,CAAAA,GAJpB;AAKD,MAAIR,0HAAJ,IAAkDpb,IAAAA,EAAlD,KAAmC8b,sBAAnC,CAA6D;AAAC,QACtDE,eAAwBhc,IAAAA,EAAxBgc,KAAY1P,oBAAZ0P,IAAwD,CAAxDA,KAAqC1P,oBAAQ5O,CAAAA,MADS;AAExDse,gBAAJ,KACEF,sBADF,GACeJ,2GAAYnc,CAAAA,GAAZ,CAAgB+M,oBAAhB,CADf;AAGmBtM,QAAAA,EAAnB,KAAI8b,sBAAJ,KACwDG,CAArD,IAAKF,CAAAA,GAAgDE,GAAlCH,sBAAkCG,GAArB,IAAIxO,aAAJ,EAAqBwO,EAAAA,WAAtD,CACE,IAAKpO,CAAAA,OADP,CAGA,EAAImO,YAAJ,IACEN,2GAAYtc,CAAAA,GAAZ,CAAgBkN,oBAAhB,EAAyBwP,sBAAzB,CALJ;AAL2D;AAc7D,SAAOA,sBAAP;AA/BY,CAAV,CAxBN,CAAA,CAAA;AAgImBI,QAAA,mGAAA,CACjB5P,oBADiB,CAGJ;AAAA,MAAA,sBAAA+D,2BAAA,CAAA,KAAA,CAAA,CAAA,EAAA,SAAA,CAAA;AACb,SAAQhJ,QAAO,EAAA;AAAA,QACTwG,sBACe,CAAnB,KAAAvB,oBAAQ5O,CAAAA,MAAR,GACI4O,oBAAA,CAAQ,CAAR,CADJ,GAEI+F,mBAAO1E,CAAAA,MAAP,CACE,QAAA,CAACwO,MAAD,EAAM3O,kDAAN,EAAS4O,MAAT,CAAiB;AA5CzB,UAA6C,CAAA,CAA7C,KA4CiD5O,kDA5C7C,CAAA,YAAJ;AACE,0DAAA,GA2C+CA,kDA3CnBK,CAAAA,OAA5B;AADF;AAEO,YAAqB,QAArB,KAAI,MA0CsCL,mDA1C1C;AAGL,gBAAU7N,KAAJ,CACJ,kEADI,IAuCyC6N,kDAvCzC,GAEF,sFAFE,EAAN;AAHK;AAFP;AA4CyB,aAAA2O,MAAA,GAAM,kDAAN,GAA6B7P,oBAAA,CAAQ8P,MAAR,GAAc,CAAd,CAA7B;AAAA,KADnB,EAEE9P,oBAAA,CAAQ,CAAR,CAFF,CAJS;AAQf,WAAO,IAAKuP,wGAAL,CACLhO,mBADK,EAELvB,oBAFK,EAGLmP,iHAHK,CAAP;AARe,GAAR,EAAP;AADa;AAyBYY,QAAA,2GAAA,CACzBC,aADyB,EAEzBpS,kCAFyB,CAGvB;AACF,MAAIkR,0HAAJ;AACGkB,iBAA0BC,CAAAA,kBAA3B,GAAgDrS,kCAAOC,CAAAA,GAAP,CAAW,QAAA,CAACrM,cAAD,CACzD;AAAA,aAAAA,cAAA,YAAa2P,aAAb,GAA6B3P,cAA7B,GAAiCA,cAAEge,CAAAA,GAAnC;AAAA,KAD8C,CAAhD;AADF,QAIO;AACW5R,sCAAAA,GAAA7N,uBAAA6N,CAAAA,kCAAAA,CAAAA;AAAhB,SAAgBA,IAAAA,uDAAAA,kCAAAA,CAAAA,IAAAA,EAAhB,EAAA,CAAA,oDAAA,CAAA,IAAA,EAAA,oDAAA,GAAA,kCAAA,CAAA,IAAA,EAAA,CAAwB;AAAxB,0DAAA,GAAA,oDAAA,CAAA,KAAA;AAAyB,UACjBE,qBAAQK,QAASpB,CAAAA,aAAT,CAAuB,OAAvB,CADS,EAGjBmT,oBAAS/f,cAAD,CAAA,QAHS;AAITuD,UAAAA,EAAd,KAAIwc,iBAAJ,IACEpS,kBAAMsP,CAAAA,YAAN,CAAmB,OAAnB,EAA4B8C,iBAA5B,CADF;AAGApS,wBAAMG,CAAAA,WAAN,GAAqBzM,oDAAgB+P,CAAAA,OAArC;AACAyO,mBAAW9Q,CAAAA,WAAX,CAAuBpB,kBAAvB,CAAA;AARsB;AADnB;AALL;AA2BS,IAAAqS,oHACXrB,0HAAA,GAEI,QAAA,CAACtd,cAAD,CAA0BA;AAAAA,SAAAA,cAAAA;AAAAA,CAF9B,GAGI,QAAA,CAACA,iCAAD,CACE;AAAA,MAAAA,iCAAA,YAAa2P,aAAb,CAAA;AAZFI,QAAAA,0DAAU,EAAVA;AACqBH,qCAAAA,GAAArR,uBAAAqR,CAWUgP,iCAXVhP,CAAAA,QAAAA,CAAAA;AAAzB,SAAyBA,IAAAA,sDAAAA,iCAAAA,CAAAA,IAAAA,EAAzB,EAAA,CAAA,mDAAA,CAAA,IAAA,EAAA,mDAAA,GAAA,iCAAA,CAAA,IAAA,EAAA;AACEG,6DAAA,IADF,mDAAA8O,CAAAA,KACkB9O,CAAAA,OAAhB;AADF;AAGA,2DAAA,GArEA,IAAKgO,wGAAL,CACmB,QAAjB,KAAA,MAoEehO,wDApEf,GAoEeA,uDApEf,GAAoC9N,MAAA,CAoErB8N,uDApEqB,CADtC,EAEE7N,IAAAA,EAFF,EAGEyb,iHAHF,CAqEA;AAQM,GAAA;AAA0D3d,2DAAAA,GAAAA,iCAAAA;AAA1D;AAAA,SAAA,uDAAA;AAAA,CALK;A;;;;;AC/Mb,IAAM8e,2FACF,CCHwCC,CAflB,yBAA0B/M,CAAAA,IAA1BgN,CAA+B,QAAA,EAAA;CAAShc,CAAAA,QAAT,EAA/Bgc,CDiBpBF,IAGF3M,WAAA,CAAA,UAHE2M,IAMsB5c,IAAAA,EANtB4c,KAMGG,cAAOte,CAAAA,OANVme,IAO6B5c,IAAAA,EAP7B4c,KAOGI,cAAOC,CAAAA,cAPVL,IAUGI,cAAOC,CAAAA,cAAZ,CAAA,yBAVEL,IAUyD,CAAA,CAV/D,EA2BIM,6FA3BJ;AAiCyBC,QAAA,yFAAA,EAAM;AA6BWlN,UAASA,QAAW,EAAG;AAe3D,WAAOmN,UAAQC,CAAAA,SAAR,CACHC,qBADG,EACiB,EADjB,EAC+C,IAAKrgB,CAAAA,WADpD,CAAP;AAf2D;AA5B/D,MAAMqgB,wBAAqBrN,WAA3B;AACA,MAAI2M,wFAAJ;AACE,WAAOU,qBAAP;AADF;AAQA,MAA2Btd,IAAAA,EAA3B,KAAIkd,6FAAJ;AACE,WAAOA,6FAAP;AADF;AAUA,MAAME,aAAeL,cAAOte,CAAAA,OAA5B;AA6BA8e,SAAKxgB,CAAAA,SAAL,GAAiBugB,qBAAmBvgB,CAAAA,SAApC;AACAwgB,SAAKxgB,CAAAA,SAAUE,CAAAA,WAAf,GAA6BsgB,OAA7B;AACAA,SAAKC,CAAAA,UAAL,GAAkB,CAAA,CAAlB;AACAlf,QAAOmf,CAAAA,cAAP,CAAsBF,OAAtB,EAA4BD,qBAA5B,CAAA;AAEA,SADAJ,6FACA,GADqBK,OACrB;AAtD6B;AA0D/B,IAAIG,qFAAU,CAAA,CAAd;AAM2Bd,wFAAzB,IAGIc,kFAHJ,KAMAA,kFACA,GADU,CAAA,CACV,EAAKjhB,cAAL,CAAA,WAAA,GAAqCkhB,wFAAR,EAP7B;AE3FD,IACK1N,uHAAc0N,wFAAA,EADnB,EAyBK,iCAOFrf,MAhCH,EA0BCsf,8GAAA,8BAAA,CAAA,EA1BD,EA2BClf;AAAA,8BAAA,CAAA,cA3BD,EA4BCH,oIAAA,8BAAA,CAAA,wBA5BD,EA6BCsf,+HAAA,8BAAA,CAAA,mBA7BD,EA8BCC;AAAA,8BAAA,CAAA,qBA9BD,EA+BCC,0HAAA,8BAAA,CAAA,cA/BD,EA+CKvc,wHAVcD,cAWjBC,CAAAA,YAhDF,EAsDKwc;AAAiCxc,qHAAA,GAClCA,qHAAaqU,CAAAA,WADqB,GAEnC,EAxDH,EA0DKxN,2HArBc4V,cAuBTrP,CAAAA,8BA5DV,EAwSYsP;AAA8C,CACzD,cAAAC,QAAW,CAACxd,mBAAD,EAAiB2O,kBAAjB,CAA+B;AACxC,SAAQA,kBAAR;AACE,SAAK8O,OAAL;AACEzd,yBAAA,GAAQA,mBAAA,GAAQqd,uIAAR,GAAyC,IAAjD;AACA;AACF,SAAK1f,MAAL;AACA,SAAKd,KAAL;AAGEmD,yBAAA,GAAiB,IAAT,IAAAA,mBAAA,GAAgBA,mBAAhB,GAAwBkH,IAAKG,CAAAA,SAAL,CAAerH,mBAAf,CAAhC;AARJ;AAWA,SAAOA,mBAAP;AAZwC,CADe,EAgBzD,gBAAA0d,QAAa,CAAC1d,mBAAD,EAAuB2O,kBAAvB,CAAqC;AAAA,MAC5CgP,eAAqB3d,mBADuB;AAEhD,SAAQ2O,kBAAR;AACE,SAAK8O,OAAL;AACEE,kBAAA,GAAsB,IAAtB,KAAY3d,mBAAZ;AACA;AACF,SAAKqC,MAAL;AACEsb,kBAAA,GAAsB,IAAV,KAAA3d,mBAAA,GAAiB,IAAjB,GAAwBqC,MAAA,CAAOrC,mBAAP,CAApC;AACA;AACF,SAAKrC,MAAL;AACA,SAAKd,KAAL;AAIE,SAAI;AAEF8gB,oBAAA,GAAYzW,IAAKC,CAAAA,KAAL,CAAWnH,mBAAX,CAAZ;AAFE,OAGF,QAAOmB,cAAP,CAAU;AACVwc,oBAAA,GAAY,IAAZ;AADU;AAfhB;AAoBA,SAAOA,YAAP;AAtBgD,CAhBO,CAxS1D;AA0VmCC,QAAA,iHAAA,CAAC5d,mBAAD,EAAiB6d,MAAjB,CAClC;AAAA,SAAA,CAACZ,2GAAA,CAAGjd,mBAAH,EAAU6d,MAAV,CAAD;AAAA;AAAe,IAEXC,sIAAkD,CACtDC,YAAW,CAAA,CAD2C,EAEtDpP,KAAMvP,MAFgD,EAGtD4e,YAAWT,wHAH2C,EAItDd,UAAS,CAAA,CAJ6C,EAKtDwB,aAAYC,gHAL0C,CAFvC,EA8Bb,sCA9Ba;AAgCc,IAAvB,IAAIpS,MAAOqS,CAAAA,QAAX,KACGrS,MAA8BqS,CAAAA,QADjC,GAC4CrS,MAAA,CAAO,UAAP,CAD5C;AAGA,sCAAA,GAAOA,MAAOqS,CAAAA,QAAd;AAIK,IAAAC,8HACT,IAAIvM,OAAJ,EADS;AAmkBXvV,QAAA,wHAAA,EAAA;AACE,MAAA,sCAAA,oHAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,IAAA;AAvWM,qCAAA+hB,CAAAA,GAAA,GAAwChf,IAAAA,EAAxC;AAoUR,qCAAAif,CAAAA,GAAA,GAAkB,CAAA,CAAlB;AAOA,qCAAA3Q,CAAAA,YAAA,GAAa,CAAA,CAAb;AAkBQ,qCAAA4Q,CAAAA,GAAA,GAA2C,IAA3C;AAWN,qCAAKC,CAAAA,cAAL,EAAA;AAFF,SAAA,mCAAA;AAAA;AAjjBQtF,mBAAA5J,CATYmP,uHASZnP,EAAAA,oHAAAA,CAAAA;AAqFDoP,uHAAA,CAAA,gBAAPC,GAAAA,QAAqB,CAACC,cAAD,CAAyB;AAC5C,MAAKC,CAAAA,WAAL,EAAA;AACMC,MAAAA,wBAAAA;AAAsB5V,GAAtB4V,IAAL,KAAKA,wBAAL,GAAAA,IAAKA,CAAAA,eAAL,IAAKA,wBAAL,GAAAA,IAAuB,CAAA,eAAvB,GAAuB,EAAI5V,EAAAA,IAA5B,CAAiC0V,cAAjC,CAAA;AAF4C,CAA9CD;AAiJOI,uHAAA,CAAA,gBAAPC,GAAAA,QAAqB,CACnB1f,kBADmB,EAEnBuJ,yCAFmB,CAEsC;AAAzDA,2CAAA,GAAA,IAAA,EAAA,KAAAA,yCAAA,GAA+BiV,mIAA/B,GAAAjV,yCAAA;AAGIA,2CAAQoW,CAAAA,KAAZ,KACGpW,yCAAsDkV,CAAAA,WADzD,GACqE,CAAA,CADrE;AAGA,MAAKc,CAAAA,WAAL,EAAA;AACA,MAAKK,CAAAA,mBAAkBzgB,CAAAA,GAAvB,CAA2Ba,kBAA3B,EAAiCuJ,yCAAjC,CAAA;AACKA,2CAAQsW,CAAAA,YAAb,KAMQC,yCACN,GADmB,IAAKC,CAAAA,uBAAL,CAA2B/f,kBAA3B,EADfwM,MAAAvO,EACe,EAAsCsL,yCAAtC,CACnB,EAAmBxJ,IAAAA,EAAnB,KAAI+f,yCAAJ,IACErhB,uHAAA,CAAe,IAAK3B,CAAAA,SAApB,EAA+BkD,kBAA/B,EAAqC8f,yCAArC,CARJ;AARyD,CAF3DJ;AAkDiBM,uHAAA,CAAA,uBAAPD,GAAAA,QAA4B,CACpC/f,kBADoC,EAEpC/B,iBAFoC,EAGpCsL,qBAHoC,CAGR;AAET,MAAA,wBAAA,EAAb,iCAAa,IAAA,KAAA,wBAAA,GAAAjL,iIAAA,CAAyB,IAAKxB,CAAAA,SAA9B,EAAyCkD,kBAAzC,CAAA,IAAA,wBAAA,GAAkD,CACnE,IAAAV,QAAG,EAAA;AACD,WAAO,IAAA,CAAKrB,iBAAL,CAAP;AADC,GADgE,EAInE,IAAAkB,QAAG,CAAwBoO,cAAxB,CAAkC;AAClC,QAAD,CAAsDtP,iBAAtD,CAAA,GAA6DsP,cAA7D;AADmC,GAJ8B,CAAlD,EAAZjO,SAAA,8BAAA,CAAA,GAAY,EAAPH,kBAAA,8BAAA,CAAA,GAAO;AAyBnB,SAAO,CACL,IAAAG,QAAG,EAAA;AACD,WAAO,IAAA,IAAAA,MAAA,GAAA,IAAA,EAAA,GAAAA,MAAKmB,CAAAA,IAAL,CAAU,IAAV,CAAP;AADC,GADE,EAIL,IAAAtB,QAAG,CAAwBuB,mBAAxB,CAAsC;AAAA,QACjCuf,uBAAW,IAAA,IAAA3gB,MAAA,GAAA,IAAA,EAAA,GAAAA,MAAKmB,CAAAA,IAAL,CAAU,IAAV,CADsB;AAEvCtB,mBAAKsB,CAAAA,IAAL,CAAU,IAAV,EAAgBC,mBAAhB,CAAA;AACA,QAAKwf,CAAAA,eAAL,CAAmBlgB,kBAAnB,EAAyBigB,oBAAzB,EAAmC1W,qBAAnC,CAAA;AAHuC,GAJpC,EASL4W,aAAc,CAAA,CATT,EAULC,WAAY,CAAA,CAVP,CAAP;AA3B4B,CAHpBL;AA0DHM,uHAAA,CAAA,oBAAPC,GAAAA,QAAyB,CAACtgB,kBAAD,CAAkB;AAClC,MAAA,wBAAA;AAAP,SAAO,IAAA,KAAA,wBAAA,GAAA,IAAK4f,CAAAA,mBAAkBtgB,CAAAA,GAAvB,CAA2BU,kBAA3B,CAAA,IAAA,wBAAA,GAAoCwe,mIAA3C;AADyC,CAA3C8B;AAkBeC,uHAAA,CAAA,WAAPhB,GAAAA,QAAgB,EAAA;AACtB,MACE,CAAA,IAAKpS,CAAAA,cAAL,CAAoB,qBAApB,CADF,CAAA;AAKC,QAEKqT,eAAY1C,uHAAA,CAAe,IAAf,CAFjB;AAGD0C,gBAAUC,CAAAA,UAAV,EAAA;AAKgC1gB,QAAAA,EAAhC,KAAIygB,YAAUhB,CAAAA,eAAd,KACE,IAAKA,CAAAA,eADP,GACuB,EAAA,CAAA,MAAA,CAAA3V,4BAAA,CAAI2W,YAAUhB,CAAAA,eAAd,CAAA,CADvB;AAIA,QAAKI,CAAAA,mBAAL,GAAyB,IAAIzX,GAAJ,CAAQqY,YAAUZ,CAAAA,mBAAlB,CAAzB;AAjBA;AADsB,CAAhBL;AAgCSmB,uHAAA,CAAA,UAAPD,GAAAA,QAAe,EAAA;AACvBE,sHAAA,EAAA;AACA,MAAI,CAAA,IAAKxT,CAAAA,cAAL,CAAoB,aAApB,CAAJ,CAAA;AAGA,QAAKyT,CAAAA,WAAL,GAAiB,CAAA,CAAjB;AACA,QAAKrB,CAAAA,WAAL,EAAA;AAGA,QAAI,IAAKpS,CAAAA,cAAL,CAAoB,YAApB,CAAJ,CAA6D;AAAC,UACtD0T,iFAAQ,IAAKC,CAAAA,UADyC,EAEtDC,0MAAW,EAAA,CAAA,MAAA,CAAAlX,4BAAA,CACZ+T,4HAAA,CAAoBiD,8EAApB,CADY,CAAA;AAAAhX,kCAAA,CAEZgU,8HAAA,CAAsBgD,8EAAtB,CAFY,CAAA,CAF2C;AAM5CE,6MAAAA,GAAA3kB,uBAAA2kB,CAAAA,uMAAAA,CAAAA;AAAhB,WAAgBA,IAAAA,2LAAAA,uMAAAA,CAAAA,IAAAA,EAAhB,EAAA,CAAA,wLAAA,CAAA,IAAA,EAAA,wLAAA;AAAA,6MAAA,CAAA,IAAA,EAAA;AAAA,gMACE,GADF,wLAAA,CAAA,KACE,EAAA,IAAKrB,CAAAA,gBAAL,CAAoBsB,wLAApB;AAAuBH,sFAAA,CAAMG,wLAAN,CAAvB,CAAA;AADF;AAN2D;AAYvDnC,kFAAAA,GAAW,IAAA,CApbjBoC,sCAobiB,CAAXpC;AACN,QAAiB,IAAjB,KAAIA,8EAAJ,KACQiC,8EACF,GADeI,2HAAoB5hB,CAAAA,GAApB,CAAwBuf,8EAAxB,CACf,EAAe9e,IAAAA,EAAf,KAAA+gB,8EAFN;AAGI,WAA2BA,8EAAAA,GAAA1kB,uBAAA0kB,CAAAA,8EAAAA,CAAAA,EAAAA,uMAAAA,GAAAA,8EAAAA,CAAAA,IAAAA,EAA3B,EAAA,CAAA,uMAAA,CAAA,IAAA,EAAA,uMAAA;AAAA,oFAAA,CAAA,IAAA,EAAA;AAAW,gMACT,GADS1kB,uBAAA,CAAX,uMAAA,CAAA,KAAW,CACT,EADU+kB,uMACV;AADS,gMAAA,CAAA,IAAA,EAAA,CAAA,KACT,EADaC,wLACb,GADS,wLAAA,CAAA,IAAA,EAAA,CAAA,KACT;AAAA,YAAKxB,CAAAA,mBAAkBzgB,CAAAA,GAAvB,CADWgiB,uMACX,EADoBC,wLACpB,CAAA;AADF;AAHJ;AAUA,QAAKC,CAAAA,0BAAL,GAAgC,IAAIlZ,GAAJ,EAAhC;AACgCyX,kFAAAA,GAAAxjB,uBAAAwjB,CAALA,IAAKA,CAAAA,mBAAAA,CAAAA;AAAhC,SAAgCA,uMAAhC,GAAgCA,8EAAAA,CAAAA,IAAAA,EAAhC,EAAA,CAAA,uMAAA,CAAA,IAAA,EAAA,uMAAA;AAAA,kFAAA,CAAA,IAAA,EAAA;AAAW,8LAET,GAFSxjB,uBAAA,CAAX,uMAAA,CAAA,KAAW,CAET,EAFUklB,uMAEV;AAFS,8LAAA,CAAA,IAAA,EAAA,CAAA,KAET,EAFaC,wLAEb,GAFS,wLAAA,CAAA,IAAA,EAAA,CAAA,KAET;AADMC,8LACN,GADa,IAAKC,CAAAA,4BAAL,CAAgCT,uMAAhC,EADOO,wLACP,CACb;AAAaxhB,UAAAA,EAAb,KAAIyhB,wLAAJ,IACE,IAAKH,CAAAA,0BAAyBliB,CAAAA,GAA9B,CAAkCqiB,wLAAlC,EAAwCR,uMAAxC,CADF;AAFF;AAOA,QAAK1T,CAAAA,eAAL,GAAqB,IAAKoU,CAAAA,gBAAL,CAAoB,IAAKzX,CAAAA,QAAzB,CAArB;AAtCA;AAFuB,CAAfwW;AAsFOkB,uHAAA,CAAA,gBAAPD,GAAAA,QAAqB,CAC7BzX,+CAD6B,CACN;AAAA,MAEjBqD,mBAAgB,EAFC;AAGvB,MAAI/P,KAAMkU,CAAAA,OAAN,CAAcxH,+CAAd,CAAJ,CAA2B;AAInB9K,mDAAAA,GAAM,IAAI8I,GAAJ,CAASgC,+CAA0B2X,CAAAA,IAA3B,CAAgCC,QAAhC,CAA0CC,CAAAA,OAA1C,EAAR,CAAN3iB;AAEUA,mDAAAA,GAAA/C,uBAAA+C,CAAAA,+CAAAA,CAAAA;AAAhB,SAAgBA,IAAAA,2CAAAA,+CAAAA,CAAAA,IAAAA,EAAhB,EAAA,CAAA,wCAAA,CAAA,IAAA,EAAA,wCAAA,GAAA,+CAAA,CAAA,IAAA,EAAA;AACEmO,sBAAcyU,CAAAA,OAAd,CAAsBvF,iHAAA,CADxB,wCAAA3e,CAAAA,KACwB,CAAtB,CAAA;AADF;AANyB,GAA3B;AASsBkC,QAAAA,EAAf,KAAIkK,+CAAJ,IACLqD,gBAAc1D,CAAAA,IAAd,CAAmB4S,iHAAA,CAAmBvS,+CAAnB,CAAnB,CADK;AATP;AAYA,SAAOqD,gBAAP;AAfuB,CADfoU;AA8BKM,uHAAA,CAAA,4BAAPP,GAAAA,QAAiC,CACvCzhB,kBADuC,EAEvCuJ,wCAFuC,CAEX;AAEtBkV,0CAAAA,GAAYlV,wCAAQkV,CAAAA,WAApBA;AACN,SAAqB,CAAA,CAAd,KAAAA,wCAAA,GACH1e,IAAAA,EADG,GAEkB,QAArB,KAAA,MAAO0e,yCAAP,GACAA,wCADA,GAEgB,QAAhB,KAAA,MAAOze,mBAAP,GACAA,kBAAKwP,CAAAA,WAAL,EADA,GAEAzP,IAAAA,EANJ;AAH4B,CAFtB0hB;AAkEAvC,4BAAAA,GAAAA,uHAAAA,CAAAA,SAAAA;AAAA+C,4BAAA/C,CAAAA,cAAAA,GAAAA,QAAY,EAAA;AAAA,MAAA,gCAAA,IAAA;AAClB,MAAKgD,CAAAA,GAAL,GAAuB,IAAIC,OAAJ,CACrB,QAAA,CAACza,eAAD,CAAU;AAAA,WAAA,6BAAK0a,CAAAA,gBAAL,GAAsB1a,eAAtB;AAAA,GADW,CAAvB;AAGA,MAAK2a,CAAAA,GAAL,GAA2B,IAAIla,GAAJ,EAA3B;AAGA,MAAKma,CAAAA,0BAAL,EAAA;AAGA,MAAKpC,CAAAA,eAAL,EAAA;AAC6CV,MAAAA,oCAAAA;AAA7C,MAAA,KAA6CA,oCAA7C,GAACA,IAAKxiB,CAAAA,WAAuCwiB,CAAAA,eAA7C,KAA6CA,oCAAe+C,CAAAA,OAA5D,CAAoE,QAAA,CAAC7kB,eAAD,CAClE;AAAA,WAAAA,eAAA,CAAE,6BAAF,CAAA;AAAA,GADF,CAAA;AAXkB,CAAZwhB;AAyBRsD,QAAA,0CAAa,CAAbA,8CAAa,EAACC,sBAAD,CAA+B;AACpCC,MAAAA,wBAAAA;AAA6Bje,GAA7Bie,IAAL,KAAKA,wBAAL,GAAAA,8CAAKA,CAAAA,GAAL,IAAKA,wBAAL,GAAAA,8CAAuB,CAAA,GAAvB,GAAuB,IAAIza,GAAJ,EAAWxD,EAAAA,GAAnC,CAAuCge,sBAAvC,CAAA;AAKA,MAAwB1iB,IAAAA,EAAxB,KAAI,8CAAKsc,CAAAA,YAAT,IAAqC,8CAAK1E,CAAAA,WAA1C,CAAuD;AAC1CgL,QAAAA,oCAAAA;AAAX,QAAA,KAAWA,oCAAX,GAAAF,sBAAWE,CAAAA,eAAX,KAAWA,oCAAAA,CAAAA,IAAX,CAAAF,sBAAA,CAAA;AADqD;AANb;AA+BpCR,4BAAAK,CAAAA,0BAAAA,GAAAA,QAAwB,EAAA;AAI9B,OAJ8B,IACxBM,wBAAqB,IAAIza,GAAJ,EADG,EAId,qBAAA/L,uBAAA,CAFW,IAAKY,CAAAA,WAC7B4iB,CAAAA,mBAC+BjY,CAAAA,IAAlB,EAAA,CAJc,EAId,uDAAA,kBAAA,CAAA,IAAA,EAAhB,EAAA,CAAA,oDAAA,CAAA,IAAA,EAAA,oDAAA,GAAA,kBAAA,CAAA,IAAA,EAAA;AAAA,wDACE,GADF,oDAAA,CAAA,KACE,EAAI,IAAKwF,CAAAA,cAAL,CAAoB6T,oDAApB,CAAJ,KACE4B,qBAAmBzjB,CAAAA,GAAnB,CAAuB6hB,oDAAvB,EAA0B,IAAA,CAAKA,oDAAL,CAA1B,CACA,EAAA,OAAO,IAAA,CAAKA,oDAAL,CAFT,CAAA;AADF;AAM8B,GAA9B,GAAI4B,qBAAmBC,CAAAA,IAAvB,KACE,IAAK9D,CAAAA,GADP,GAC8B6D,qBAD9B;AAV8B,CAAxBN;AAwBEL,4BAAAjV,CAAAA,kBAAAA,GAAAA,QAAgB,EAAA;AAEjBgB,MAAAA,wBAAAA,EADDqO,yBACCrO,IAAL,KAAKA,wBAAL,GAAAA,IAAKA,CAAAA,UAAL,IAAKA,wBAAL,GACA,IAAKC,CAAAA,YAAL,CACG,IAAKjR,CAAAA,WAAuCkR,CAAAA,mBAD/C,CADKF;AAIP8U,4GAAA,CACEzG,sBADF,EAEG,IAAKrf,CAAAA,WAAuCsQ,CAAAA,eAF/C,CAAA;AAIA,SAAO+O,sBAAP;AAVwB,CAAhBrP;AAkBViV,4BAAA9T,CAAAA,iBAAAA,GAAAA,QAAiB,EAAA;AAE8BkO,MAA7C,IAACA,IAA4CA,CAAAA,YAA7C,KAACA,IACC,CAAA,YADF,GACE,IAAKrP,CAAAA,kBAAL,EADF;AAEA,MAAKoV,CAAAA,gBAAL,CAAoB,CAAA,CAApB,CAAA;AACKM,MAAAA,oCAAAA;AAAL,MAAA,KAAKA,oCAAL,GAAAA,IAAKA,CAAAA,GAAL,KAAKA,oCAAeH,CAAAA,OAApB,CAA4B,QAAA,CAACpkB,aAAD,CAAO;AAAEwkB,QAAAA,oCAAAA;AAAF,WAAA,IAAA,KAAEA,oCAAF,GAAAxkB,aAAEwkB,CAAAA,eAAF,IAAA,IAAA,EAAA,GAAEA,oCAAAA,CAAAA,IAAF,CAAAxkB,aAAA,CAAA;AAAA,GAAnC,CAAA;AALe,CAAjBgQ;AAcU8T,4BAAAG,CAAAA,gBAAAA,GAAAA,QAAc,EAA0B;CAAxCA;AAQVH,4BAAAc,CAAAA,oBAAAA,GAAAA,QAAoB,EAAA;AACbL,MAAAA,oCAAAA;AAAL,MAAA,KAAKA,oCAAL,GAAAA,IAAKA,CAAAA,GAAL,KAAKA,oCAAeH,CAAAA,OAApB,CAA4B,QAAA,CAACpkB,aAAD,CAAO;AAAE6kB,QAAAA,oCAAAA;AAAF,WAAA,IAAA,KAAEA,oCAAF,GAAA7kB,aAAE6kB,CAAAA,kBAAF,IAAA,IAAA,EAAA,GAAEA,oCAAAA,CAAAA,IAAF,CAAA7kB,aAAA,CAAA;AAAA,GAAnC,CAAA;AADkB,CAApB4kB;AAgBAd,4BAAAgB,CAAAA,wBAAAA,GAAAA,QAAwB,CACtBjjB,kBADsB,EAEtBkjB,OAFsB,EAGtBxiB,mBAHsB,CAGF;AAEpB,MAAKyiB,CAAAA,uBAAL,CAA2BnjB,kBAA3B,EAAiCU,mBAAjC,CAAA;AAFoB,CAHtBuiB;AAQQhB,4BAAAmB,CAAAA,uBAAAA,GAAAA,QAAqB,CAACpjB,kBAAD,EAAoBU,mBAApB,CAAkC;AAG1C,MACb6I,wBAFJ,IAAKvM,CAAAA,WACL4iB,CAAAA,mBAC6BtgB,CAAAA,GAAf,CAAmBU,kBAAnB,CADG,EAEbwhB,mBACJ,IAAKxkB,CAAAA,WACLykB,CAAAA,4BAFW,CAEgBzhB,kBAFhB,EAEsBuJ,qBAFtB,CAFM;AAKnB,MAAaxJ,IAAAA,EAAb,KAAIyhB,gBAAJ,IAA8C,CAAA,CAA9C,KAA0BjY,qBAAQ4T,CAAAA,SAAlC,CAAoD;AAEvCuB,QAAAA,oCAAAA,EAIL2E,eAAsBnF,CAH1Bne,IAAAA,EADA2e,MAAkDR,IAAAA,KAAzCQ,oCAAyCR,GAAjD3U,qBAAQmV,CAAAA,WAAyCR,IAAAA,IAAAA,EAAAA,GAAzCQ,oCAAyCR,CAAAA,aAAlDQ,IAEKnV,qBAAQmV,CAAAA,WAFbA,GAGIT,wHACsBC,EAAAA,aAAV,CAAuBxd,mBAAvB,EAA8B6I,qBAAQ8F,CAAAA,IAAtC,CAJPqP;AA4BX,QAAKO,CAAAA,GAAL,GAA4Bjf,kBAA5B;AACiB,QAAjB,IAAIqjB,YAAJ,GACE,IAAK3N,CAAAA,eAAL,CAAqB8L,gBAArB,CADF,GAGE,IAAK/H,CAAAA,YAAL,CAAkB+H,gBAAlB,EAAwB6B,YAAxB,CAHF;AAMA,QAAKpE,CAAAA,GAAL,GAA4B,IAA5B;AArCkD;AARS,CAAvDmE;AAkDRnB,4BAAAkB,CAAAA,uBAAAA,GAAAA,QAAqB,CAACnjB,2BAAD,EAAeU,mBAAf,CAAmC;AAAA,MAChD2U,sCAAO,IAAKrY,CAAAA,WADoC;AAIhDsmB,6BAAAA,GAAYjO,mCAAKgM,CAAAA,0BAA0C/hB,CAAAA,GAAhD,CAAoDU,2BAApD,CAAXsjB;AAGN,MAAiBvjB,IAAAA,EAAjB,KAAIujB,2BAAJ,IAA8B,IAAKrE,CAAAA,GAAnC,KAA4DqE,2BAA5D,CAAsE;AAC9D/Z,uCAAAA,GAAU8L,mCAAKiL,CAAAA,oBAAL,CAAwBgD,2BAAxB,CAAV/Z;AAIQmV,QAAAA,oCAAAA,EAHRA,wBACyB,UAA7B,KAAA,MAAOnV,oCAAQmV,CAAAA,WAAf,GACI,CAACN,gBAAe7U,mCAAQmV,CAAAA,WAAxB,CADJ,GAEyC3e,IAAAA,EAArC,MAAmBqe,IAAAA,KAAXM,oCAAWN,GAAnB7U,mCAAQmV,CAAAA,WAAWN,IAAAA,IAAAA,EAAAA,GAAXM,oCAAWN,CAAAA,eAAnB,IACA7U,mCAAQmV,CAAAA,WADR,GAEAT,wHAFQS;AAId,QAAKO,CAAAA,GAAL,GAA4BqE,2BAA5B;AACA,QAAA,CAAKA,2BAAL,CAAA,GAA+B5E,qBAAUN,CAAAA,eAAV,CAC7B1d,mBAD6B,EAE7B6I,mCAAQ8F,CAAAA,IAFqB,CAA/B;AAMA,QAAK4P,CAAAA,GAAL,GAA4B,IAA5B;AAhBoE;AAPhB,CAAxDkE;AAiDAlB,4BAAA/B,CAAAA,eAAAA,GAAAA,QAAa,CACXlgB,kBADW,EAEXigB,oBAFW,EAGX1W,qBAHW,CAKW;AADtB,MAAAga,aAAA,IAAA,EAAA,KAAAA,UAAA,GAAU,CAAA,CAAV,GAAAA,UAAA;AAIA,MAAaxjB,IAAAA,EAAb,KAAIC,kBAAJ,CAAwB;AACtBuJ,QAAA,IAAAA,qBAAA,KAAAA,qBAAA,GACE,IAAKvM,CAAAA,WACLsjB,CAAAA,oBAFU,CAEStgB,kBAFT,CAAZ;AAG2B2e,QAAAA,wBAAAA;AAE3B,QAAI,CAFuBA,IAARA,KAAQA,wBAARA,GAAApV,qBAAQoV,CAAAA,YAARA,IAAQA,wBAARA,GAAsBC,gHAErC,EADa2E,UAAAC,GARnBC,IAAAA,EAQmBD,GAAyB,IAAA,CAAKxjB,kBAAL,CACtC,EAAqBigB,oBAArB,CAAJ;AACE,UAAKyD,CAAAA,kBAAL,CAAsB1jB,kBAAtB,EAA4BigB,oBAA5B,EAAsC1W,qBAAtC,CAAA;AADF;AAIE;AAJF;AANsB;AAaK,GAAA,CAA7B,KAAI,IAAKyV,CAAAA,GAAT,KACE,IAAKkD,CAAAA,GADP,GACyB,IAAKyB,CAAAA,iBAAL,EADzB;AAhBsB,CALxBzD;AA6BA+B,4BAAAyB,CAAAA,kBAAAA,GAAAA,QAAgB,CACd1jB,kBADc,EAEdigB,oBAFc,EAGd1W,qBAHc,CAGc;AAIvB,MAAK8Y,CAAAA,GAAoB1Y,CAAAA,GAAzB,CAA6B3J,kBAA7B,CAAL,IACE,IAAKqiB,CAAAA,GAAoBljB,CAAAA,GAAzB,CAA6Ba,kBAA7B,EAAmCigB,oBAAnC,CADF;AAOA,MAAwB,CAAA,CAAxB,KAAI1W,qBAAQ4T,CAAAA,SAAZ,IAAgC,IAAK8B,CAAAA,GAArC,KAA8Djf,kBAA9D,CAAoE;AAC5D4jB,QAAAA,wBAAAA;AAAmDnf,KAAnDmf,IAAL,KAAKA,wBAAL,GAAAA,IAAKA,CAAAA,GAAL,IAAKA,wBAAL,GAAAA,IAAgC,CAAA,GAAhC,GAAgC,IAAI3b,GAAJ,EAAwBxD,EAAAA,GAAzD,CAA6DzE,kBAA7D,CAAA;AADkE;AAXxC,CAH9B0jB;AAsBczB,4BAAA0B,CAAAA,iBAAAA,GAAAA,QAAe,EAAA;AAAA,MAAA,wBAAA,IAAA,EAMlB9hB,cANkB,EAerBkE,mBAfqB;AAAA,SAAA/G,8CAAA,CAAA,QAAA,CAAA,2CAAA,CAAA;AAAA,WAAA,2CAAA,CAAA,GAAA;AAAA,WAAA,CAAA;AAKzB,eAJF,qBAAKggB,CAAAA,GAIH,GAJqB,CAAA,CAIrB,EAHE,2ClD94BD,CAAA,GkDi5BD,GAHE,CAGF,EAAA,iCAAA,CAAA,2CAAA,EAAM,qBAAKkD,CAAAA,GAAX,EAAA,CAAA,CAAA;AALyB,WAAA,CAAA;AAEvB,mDlDh3BD,CAAA,GAAL,GkDg3BM,ClDh3BN;AkDg3BM,mDlD/2BD,CAAA,GAAL,GAAqC,CAArC;AkD+2BM;AAFuB,WAAA,CAAA;AAMlBrgB,mDlDr2BN,CAAA,GAAL,GAA8C,CAA9C;AACc,YAAI,iCkDo2BPA,2ClDn2BgD,CAAA,GAClD,CAAA,WAFK;AkDo2BHA,mDlDj2BN,CAAA,GAAL,GAAyB,IAAzB;AACA,sBAAA,GAAO,8BAAP;AkDq2BS,6BAAKgiB,CAAAA,GAAV,IACU1B,OAAQ2B,CAAAA,MAAR,CAAejiB,cAAf,CADV;AAXyB,WAAA,CAAA;AAerBkE,2BAAAA,GA4Bcge,yCAALhe,CA5BAie,qBA4BAje,CA5BTA;AAIN,YAAc,IAAd,IAAIA,mBAAJ,CAAA;AAAA,qDlDv7BG,CAAA,GAAL,GkDu7BE,ClDv7BF;AkDu7BE;AAAA;AACE,eAAA,iCAAA,CAAA,2CAAA,EAAMA,mBAAN,EAAA,CAAA,CAAA;AApByB,WAAA,CAAA;AAsB3B,eAAA,2CAAA,CAAA,MAAA,CAAO,CAAC,qBAAKiZ,CAAAA,GAAb,CAAA;AAtB2B;AAAA,GAAA,CAAA;AAAA,CAAf2E;AAwEJI,QAAA,0CAAa,CAAbA,8CAAa,CAAA;AAIrB,MAAK,8CAAK/E,CAAAA,GAAV,CAAA;AAIA,QAAI,CAAC,8CAAK3Q,CAAAA,YAAV,CAAsB;AAGyBgO,UAA7C,IAACA,8CAA4CA,CAAAA,YAA7C,KAACA,8CACC,CAAA,YADF,GACE,8CAAKrP,CAAAA,kBAAL,EADF;AAyBA,UAAI,8CAAK+R,CAAAA,GAAT,CAA+B;AAG7B,aAA8BA,IAAAA,6EAAA3iB,uBAAA2iB,CAALA,8CAAKA,CAAAA,GAAAA,CAAAA,EAAAA,6MAAAA,0EAAAA,CAAAA,IAAAA,EAA9B,EAAA,CAAA,0MAAA,CAAA,IAAA,EAAA,0MAAA;AAAA,kFAAA,CAAA,IAAA,EAAA,CAAoD;AAAzC,cAAA,8IAAA3iB,uBAAA,CAAX,0MAAA,CAAA,KAAW,CAAA;AAAC6nB,oNAAAA,GAAD,2IAAA,CAAA,IAAA,EAAA,CAAA,KAACA;AAAGC,qJAAAA,GAAJ,2IAAA,CAAA,IAAA,EAAA,CAAA,KAAIA;AACb,wDAAA,CADWD,0MACX,CAAA,GADkBC,2IAClB;AADkD;AAGpD,sDAAKnF,CAAAA,GAAL,GAA4Bhf,IAAAA,EAA5B;AAN6B;AAkBzB6f,gFAAAA,GAAqB,8CAAK5iB,CAAAA,WAC7B4iB,CAAAA,mBADGA;AAEN,UAA6B,CAA7B,GAAIA,0EAAkBiD,CAAAA,IAAtB;AACE,aAA2BjD,0EAAAA,GAAAxjB,uBAAAwjB,CAAAA,0EAAAA,CAAAA,EAAAA,0MAAAA,GAAAA,0EAAAA,CAAAA,IAAAA,EAA3B,EAAA,CAAA,0MAAA,CAAA,IAAA,EAAA,0MAAA;AAAA,kFAAA,CAAA,IAAA,EAAA;AAAW,qJACT,GADSxjB,uBAAA,CAAX,0MAAA,CAAA,KAAW,CACT,EADU+nB,0MACV;AADS,qJAAA,CAAA,IAAA,EAAA,CAAA,KACT,EADaC,2IACb,GADS,2IAAA,CAAA,IAAA,EAAA,CAAA,KACT,EACsB,CAAA,CADtB,KACE7a,2IAAQ8a,CAAAA,SADV;AAEG,wDAAKhC,CAAAA,GAAoB1Y,CAAAA,GAAzB,CAA6BqX,0MAA7B,CAFH,IAG4BjhB,IAAAA,EAH5B,KAGE,8CAAA,CAAKihB,0MAAL,CAHF;AAKE,wDAAK0C,CAAAA,kBAAL,CAAsB1C,0MAAtB,EAAyB,8CAAA,CAAKA,0MAAL,CAAzB;AAAgDzX,qJAAhD,CALF;AADF;AADF;AAhDoB;AA4DlB+a,8EAAAA,GAAe,CAAA,CAAfA;AACE5V,8MAAAA,GAAoB,8CAAK2T,CAAAA,GAAzB3T;AACN,OAAI;AACF4V,gFAAA,GAqIK,CAAA,CArIL;AAGO5B,UAAAA,oCAAAA;AAAL,UAAA,KAAKA,oCAAL,GAAAA,8CAAKA,CAAAA,GAAL,KAAKA,oCAAeH,CAAAA,OAApB,CAA4B,QAAA,CAACpkB,aAAD,CAAO;AAAEomB,YAAAA,oCAAAA;AAAF,eAAA,IAAA,KAAEA,oCAAF,GAAApmB,aAAEomB,CAAAA,YAAF,IAAA,IAAA,EAAA,GAAEA,oCAAAA,CAAAA,IAAF,CAAApmB,aAAA,CAAA;AAAA,OAAnC,CAAA;AACA,oDAAKqmB,CAAAA,MAAL,CAAY9V,0MAAZ,CAAA;AALA,KASF,QAAO7M,cAAP,CAAU;AAMV,YAHAyiB,0EAGMziB,GAHS,CAAA,CAGTA,EADN,8CAAK4iB,CAAAA,eAAL,EACM5iB,EAAAA,cAAN;AANU;AASRyiB,8EAAJ,IACE,8CAAK9V,CAAAA,aAAL,CAAiBE,0MAAjB,CADF;AApFA;AAJqB;AAsHvBuT,4BAAAzT,CAAAA,aAAAA,GAAAA,QAAW,CAACE,6BAAD,CAAkC;AACtCgU,MAAAA,oCAAAA;AAAL,MAAA,KAAKA,oCAAL,GAAAA,IAAKA,CAAAA,GAAL,KAAKA,oCAAeH,CAAAA,OAApB,CAA4B,QAAA,CAACpkB,aAAD,CAAO;AAAEumB,QAAAA,oCAAAA;AAAF,WAAA,IAAA,KAAEA,oCAAF,GAAAvmB,aAAEumB,CAAAA,aAAF,IAAA,IAAA,EAAA,GAAEA,oCAAAA,CAAAA,IAAF,CAAAvmB,aAAA,CAAA;AAAA,GAAnC,CAAA;AACK,MAAKkQ,CAAAA,YAAV,KACE,IAAKA,CAAAA,YACL,GADkB,CAAA,CAClB,EAAA,IAAKsW,CAAAA,cAAL,CAAkBjW,6BAAlB,CAFF;AAIA,MAAKkW,CAAAA,SAAL,EAAA;AAN2C,CAA7CpW;AAyBQyT,4BAAAwC,CAAAA,eAAAA,GAAAA,QAAa,EAAA;AACnB,MAAKpC,CAAAA,GAAL,GAA2B,IAAIla,GAAJ,EAA3B;AACA,MAAK6W,CAAAA,GAAL,GAAuB,CAAA,CAAvB;AAFmB,CAAbyF;AAyEExC,4BAAAuC,CAAAA,MAAAA,GAAAA,QAAM,EAAmC;AAAA,MAAA,gCAAA,IAAA;AAIjD,MAAKZ,CAAAA,GAAL,KAAA,IAAgC,CAAA,GAAhC,GAAgC,IAAKA,CAAAA,GAAuBrB,CAAAA,OAA5B,CAAoC,QAAA,CAACvB,cAAD,CAClE;AAAA,WAAA,6BAAKoC,CAAAA,uBAAL,CAA2BpC,cAA3B,EAA8B,6BAAA,CAAKA,cAAL,CAA9B,CAAA;AAAA,GAD8B,CAAhC;AAGA,MAAKyD,CAAAA,eAAL,EAAA;AAPiD,CAAzCD;AAoBAvC,4BAAA2C,CAAAA,SAAAA,GAAAA,QAAO,EAAmC;CAA1CA;AAkBA3C,4BAAA0C,CAAAA,cAAAA,GAAAA,QAAY,EAAmC;CAA/CA;AA/qCZlN,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAAsB0H,uHAAtB,EAAA,CAAA,mBAwMa,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAkB0F,QAAA,EAAA;AAE3B,MAAKpE,CAAAA,UAAL,EAAA;AAKA,SACE,IAAKY,CAAAA,0BADP,IACmC,EAAA,CAAA,MAAA,CAAAxX,4BAAA,CAAI,IAAKwX,CAAAA,0BAAyB1Z,CAAAA,IAA9B,EAAJ,CAAA,CADnC;AAP2B,CAAlB,CAxMb,CAAA,CAAA;AAqKSmd,uHAAAxX,CAAAA,eAAA,GAA0C,EAA1C;AA8SAyX,uHAAA7W,CAAAA,mBAAA,GAAoC,CAAC8W,KAAM,MAAP,CAApC;AAiuBR7F,uHAAD,CAAA,mBAAA,GAEI,IAAIhX,GAAJ,EAFJ;AAGCgX,uHAAD,CAAA,WAAA,GAEI,IAAIhX,GAAJ,EAFJ;AAME,IAAA,IAAAC,wHAAA,IAAAA,wHAAA,CAAkB,CAAC0E,gBAAAqS,uHAAD,CAAlB,CAAA;AAsCgBwB,QAAA,qHAAA,EAAK;AAGfsE,MAAAA,wBAAAA;AAAgCrb,GAAhCqb,IAAP,KAAOA,wBAAP,GAAAzoB,cAAOyoB,CAAAA,uBAAP,IAAOA,wBAAP,GA5kDmBC,cA4kDgB,CAAA,uBAAnC,GAAmC,EAAItb,EAAAA,IAAxC,CAA6C,OAA7C,CAAA;AAQA+W,sHAAA,GAAcA,QAAA,EAAK;GAAnB;AAXuB;A,CC1hDvB3jB,QAAA,yGAAA,EAAA;AAAA,MAAA,uCCvF6CmoB,uHDuF7C,CAAA,KAAA,CAAA,IAAA,EAAA3nB,SAAA,CAAA,IAAA,IAAA;AAOW,sCAAAuR,CAAAA,eAAA,GAA+B,CAAC8L,KAAM,oCAAP,CAA/B;AAED,sCAAAuK,CAAAA,GAAA,GAAoCrlB,IAAAA,EAApC;AATV,SAAA,oCAAA;AAAA;AAAgC6Z,mBAAA9M,CAAnBuY,wGAAmBvY,EAAAqS,uHAAArS,CAAAA;AAAnBwY,wGD0wBgC,CAAA,mBAAA,GEj2BAP,uHFi2BA,CAAA,mBAAA;AC1wBhCQ,wGD4dsC,CAAA,eAAA,GEnjBNT,uHFmjBM,CAAA,eAAA;AC5dtCU,wGDwzBI,CAAA,4BAAA,GE/4B4BxD,uHF+4B5B,CAAA,4BAAA;ACxzBJyD,wGD0xBM,CAAA,gBAAA,GEj3B0B9D,uHFi3B1B,CAAA,gBAAA;AC1xBN+D,wGDoqBI,CAAA,WAAA,GE3vB4BnF,uHF2vB5B,CAAA,WAAA;ACpqBJoF,wGDkpBJ,CAAA,oBAAA,GEzuBoCtF,uHFyuBpC,CAAA,oBAAA;AClpBIuF,wGDwlBM,CAAA,uBAAA,GE/qB0B5F,uHF+qB1B,CAAA,uBAAA;ACxlBN6F,wGDsiBJ,CAAA,gBAAA,GE7nBoCpG,uHF6nBpC,CAAA,gBAAA;ACtiBIqG,wGDqZJ,CAAA,gBAAA,GE5eoC1G,uHF4epC,CAAA,gBAAA;ACvYYpS,4BAAAA,GAAAA,wGAAAA,CAAAA,SAAAA;AAAA+Y,4BAAA/Y,CAAAA,kBAAAA,GAAAA,QAAgB,EAAA;AAAA,MAC3BqP,yBAAa8C,uHAAA6G,CAAAA,SAAMhZ,CAAAA,kBAAAA,CAAAA,IAANA,CAAMA,IAANA,CADc,EAOjC,0CAPiC;AAOdiO,MAAnB,IAAmBA,CAAdlM,0CAAckM,GAAnBA,IAAKlM,CAAAA,eAAckM,EAAAA,cAAnB,KAAKlM,0CAA2C2F,CAAAA,cAAhD,GAAoC2H,sBAAY3H,CAAAA,UAAhD;AACA,SAAO2H,sBAAP;AARiC,CAAhBrP;AAkBA+Y,4BAAAvB,CAAAA,MAAAA,GAAAA,QAAM,CAAC9V,6BAAD,CAAkC;AAAA,MAInDhO,sBAAQ,IAAKsa,CAAAA,QAAL,EAJ2C;AAKpD,MAAK3M,CAAAA,YAAV,KACE,IAAKU,CAAAA,eAAc4I,CAAAA,WADrB,GACmC,IAAKA,CAAAA,WADxC;AAGAwH,yHAAA6G,CAAAA,SAAMxB,CAAAA,MAAAA,CAAAA,IAANA,CAAMA,IAANA,EAAa9V,6BAAb8V,CAAA;AACA,MAAKY,CAAAA,GAAL,GLuhEkBa,sCKvhEC,CAAOvlB,mBAAP,EAAc,IAAK2b,CAAAA,YAAnB,EAA+B,IAAKtN,CAAAA,eAApC,CAAnB;AATyD,CAAxCyV;AAgCVuB,4BAAA5X,CAAAA,iBAAAA,GAAAA,QAAiB,EAAA;AACxBgR,yHAAA6G,CAAAA,SAAM7X,CAAAA,iBAAAA,CAAAA,IAANA,CAAMA,IAANA,CAAA;AACKiX,MAAAA,oCAAAA;AAAL,MAAA,KAAKA,oCAAL,GAAAA,IAAKA,CAAAA,GAAL,KAAkBlM,wCAAlB,CAAKkM,oCAAL,EAA+B,CAAA,CAA/B,CAAA;AAFwB,CAAjBjX;AAwBA4X,4BAAAhD,CAAAA,oBAAAA,GAAAA,QAAoB,EAAA;AAC3B5D,yHAAA6G,CAAAA,SAAMjD,CAAAA,oBAAAA,CAAAA,IAANA,CAAMA,IAANA,CAAA;AACKqC,MAAAA,oCAAAA;AAAL,MAAA,KAAKA,oCAAL,GAAAA,IAAKA,CAAAA,GAAL,KAAkBlM,wCAAlB,CAAKkM,oCAAL,EAA+B,CAAA,CAA/B,CAAA;AAF2B,CAApBrC;AAYCgD,4BAAA/K,CAAAA,QAAAA,GAAAA,QAAM,EAAA;AACd,SAAO3I,gGAAP;AADc,CAAN2I;AAgHMkL,wGAAA,CAAA,UAAhBzF,GAAAA,QAAwB,EAAA;AACtBE,4GAAA,EAAA;AACA,SC7SyCwF,uHD6S5B1F,CAAAA,UAAShgB,CAAAA,IAAf,CAAoB,IAApB,CAAP;AAFsB,CAAxBggB;AAlNO4E,wGAAA,CAAA,aAAA,GAAoB,CAAA,CAApB;AA+NRA,wGAAD,CAAA,WAAA,GAEI,CAAA,CAFJ;AAaEjd,IAAAA,oCAAAA;AAAA,IAAA,KAAAA,oCAAA,GADgCG,MAAQyG,CAAAA,yBACxC,KAAA5G,oCAAA,CAAkB,CAACwG,WAAAyW,wGAAD,CAAlB,CAAA;AAkCgB1E,QAAA,2GAAA,EAAK;AAGtB,MAAA,0CAAA,EAAoCyF,wBAApC;AAA+Dxc,GAA3Bwc,IAApC,KAAoCA,wBAApC,GAAoCA,CAAR7d,0CAAQ6d,GAAR7d,MAAQ6d,EAAAA,kBAApC,IAAoCA,wBAApC,GAA4B7d,0CAA+B,CAAA,kBAA3D,GAA2D,EAAIqB,EAAAA,IAAhE,CAAqE,OAArE,CAAA;AAQA+W,4GAAA,GAAcA,QAAA,EAAK;GAAnB;AAXuB;A,CEjXV,IAAA0F,uGAJJC,kGAAA,CAAI,CAAC,wzFAAD,CAAJ,CAII;ACiBbC,QAAeA,iHAAmB,EAAA;AAAA,MAC1BxgB,mBAD0B,EAE5BygB,WAF4B;AAAA,SAAAxnB,8CAAA,CAAA,QAAA,CAAA,yCAAA,CAAA;AAAA,QAAA,CAAA,IAAA,yCAAA,CAAA,GAAA;AACjB,aAAA,iCAAA,CAAA,yCAAA,EAAMC,MAAOC,CAAAA,OAAQH,CAAAA,KAAMO,CAAAA,GAArB,CAAyB,UAAzB,CAAN,EAAA,CAAA,CAAA;AADiB;AAAA,QAAA,CAAA,IAAA,yCAAA,CAAA,GAAA,CAAA;AAGhC,UADIknB,WACJ,GADe,CADTzgB,mBACS,GADA,yCAAA,CAAA,GACA,IAASA,mBAAA,CAAA,QAAT,GAA8BhG,IAAAA,EAC7C,CAAA;AAAA,iDtDyUK,CAAA,GAAL,GsDzUA,CtDyUA;AsDzUA;AAAA;AACEymB,iBAAA,GAAW/pB,IAAKgqB,CAAAA,MAAOC,CAAAA,UAAZ,EAAX;AACA,aAAA,iCAAA,CAAA,yCAAA,EAAMznB,MAAOC,CAAAA,OAAQH,CAAAA,KAAMI,CAAAA,GAArB,CAAyB,CAAC,SAAYqnB,WAAb,CAAzB,CAAN,EAAA,CAAA,CAAA;AAL8B;AAOhC,WAAA,yCAAA,CAAA,MAAA,CAAOA,WAAP,CAAA;AAPgC,GAAA,CAAA;AAAA;AAiC3BG,QAAeA,sHAAwB,EAGnB;AADzBC,MAAAA,qBClC0C,CACtC,aAAgB,QADsB,EAEtC,aAAgB,aAFsB,CDkC1CA;AACA,MAAA5B,oBAAA,IAAA,EAAA,KAAAA,iBAAA,GAfI6B,YAeJ,GAAA7B,iBAAA;AAKe,MAAA,mCAAA,EAEiB,mCAFjB,EADT8B,gBACS,EAwBTC,UAxBS,EA4BTC,WA5BS,EA0CTC,oBA1CS,EAiDPC,mBAjDO;AALUloB,gDAAA,CAAA,QAAA,CAAA,yCAAA,CAAA;AAAA,WAAA,yCAAA,CAAA,GAAA;AAAA,WAAA,CAAA;AAKV,eAAA,iCAAA,CAAA,yCAAA,EAAMunB,gHAAA,EAAN,EAAA,CAAA,CAAA;AALU,WAAA,CAAA;AAWT,eAND,mCAMC,GAND,yCAAA,CAAA,GAMC,EAJgB,mCAIhB,GAJgB,CAC1B,MAAStnB,MAAOkoB,CAAAA,OAAQC,CAAAA,WAAf,EAA6BC,CAAAA,OADZ,CAIhB,EAAA,iCAAA,CAAA,yCAAA,EAAMpoB,MAAOqoB,CAAAA,IAAKC,CAAAA,kBAAZ,EAAN,EAAA,CAAA,CAAA;AAXS,WAAA,CAAA;AA+CR,eA3CXT,gBA2CW,GA3CJ,CACX,UAAa,mCADF,EAEX,gBAAmB,CACjB,yBAA4B,mCADX,EAIjB,yBAA4B,CAC1B,MAAU,yCAAA,CAAA,GACPlkB,CAAAA,IADM,CACD,IADC,CAENQ,CAAAA,SAFM,CAEI,CAFJ,EAEO,GAFP,CADiB,CAJX,CAFR,EAYX,OAAU,CACR,CACE,KCrDqBokB,aDoDvB,EAEE,OAAU,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CACR,WAzCG1gB,gDAAJ,CADKpD,IAAIH,iBAAJG,EACL,EAHS+jB,CAAAA,CAGT,EAFWC,CAAAA,CAEX,CAwCS,EAER,qBAjF2BC,GA+EnB,CAAA,EAGLf,kBAHK,EAlCZC,YAsCQ,KAAA7B,iBAAA;AAA8B,SAAC,WAAc,CAAA,CAAf,CAA9B,GAAqD,EAJjD,CAFZ,CADQ,CAZC,CA2CI,EAlBX+B,UAkBW,IA5DTa,UA2CL,KAAA5C,iBAAA,GA5Fe6C,mDA4Ff,GA7FUC,6CA8GI,IAhBf,gEAgBe,EAdXd,WAcW,GAdA,CACfe,OAAQ,MADO,EAEfC,QAAS,CAAC,OAAU,kBAAX,CAFM,EAGflB,KAAMlf,IAAKG,CAAAA,SAAL,CAAe+e,gBAAf,CAHS,CAcA,EA9DbD,YA8Da,KARb7B,iBAQa,IAPfjjB,OAAQkmB,CAAAA,IAAR,CAAa,oBAAb,GAAkClB,UAAlC,EAA6CD,gBAA7C,CAOe,EAAA,iCAAA,CAAA,yCAAA;AAAMoB,aAAA,CAAMnB,UAAN,EAAeC,WAAf,CAAN,EAAA,CAAA,CAAA;AA/CQ,WAAA,CAAA;AA+CnBC,4BAAAA,GAAW,yCAAA,CAAA,GAAXA;AAEDA,4BAASkB,CAAAA,EAAd,IACEpmB,OAAQqmB,CAAAA,KAAR,CAAc,qBAAd,GAAoCnB,oBAASoB,CAAAA,MAA7C,CADF;AAIA,YAlEQT,UAkER,KAAI5C,iBAAJ,CAAA;AAAA,mDtDmPK,CAAA,GAAL,GsDnPA,CtDmPA;AsDnPA;AAAA;AAC2B,eAAA,iCAAA,CAAA,yCAAA,EAAMiC,oBAASqB,CAAAA,IAAT,EAAN,EAAA,CAAA,CAAA;AAtDF,WAAA,CAAA;AAsDjBpB,2BtD4PR,GsD5P2B,yCAAA,CAAA,GtD4P3B,EsD3PEnlB,OAAQkmB,CAAAA,IAAR,CAAa,uBAAb,EAAsCf,mBAAtC,CtD2PF,EsDlTyB,yCtDkTpB,CAAA,GAAL,GAAmB,CAAnB;AsDlTyB;AAAA,GAAA,CAAA;AAAA;A,CE1BzBqB,QAAA,+HAAA,CAAC3Y,oBAAD,CACA;AAAA,SAAA,QAAA,CACE4Y,gBADF,EAEEC,mBAFF,CAGI;AACc1oB,QAAAA,EAAhB,KAAI0oB,mBAAJ,GACEA,mBAAQpJ,CAAAA,gBAAR,CAAuB,QAAA,EAAK;AAC1BrC,oBAAe0L,CAAAA,MAAf,CACE9Y,oBADF,EAEE4Y,gBAFF,CAAA;AAD0B,KAA5B,CADF,GAQExL,cAAe0L,CAAAA,MAAf,CAAsB9Y,oBAAtB,EAA+B4Y,gBAA/B,CARF;AADE,GAHJ;AAAA;A,CC6CD,IAKKhK,uIAAkD,CACtDC,YAAW,CAAA,CAD2C,EAEtDpP,KAAMvP,MAFgD,EAGtD4e,YAAWT,wHAH2C,EAItDd,UAAS,CAAA,CAJ6C,EAKtDwB,aAAYC,gHAL0C,CALvD;AAuB+B+J,QAAA,0HAAA,CAC9Bpf,qBAD8B,EAE9BvL,oBAF8B,EAG9ByqB,mBAH8B,CAIwC;AAHtElf,uBAAA,GAAA,IAAA,EAAA,KAAAA,qBAAA,GAA+BiV,oIAA/B,GAAAjV,qBAAA;AAIO,MAAAqf,mBAAkBH,mBAAlB,CAAA,IAAA,EAAM5J,uBAAY4J,mBAAZ,CAAA,QAAN,EAaH3H,yBAAaI,2HAAoB5hB,CAAAA,GAApB,CAAwBuf,oBAAxB,CAbV;AAcY9e,MAAAA,EAAnB,KAAI+gB,sBAAJ,IACE+H,2HAAoB1pB,CAAAA,GAApB,CAAwB0f,oBAAxB,EAAmCiC,sBAAnC,GAAgD,IAAI3Y,GAAJ,EAAhD,CADF;AAGA2Y,wBAAW3hB,CAAAA,GAAX,CAAespB,mBAAQzoB,CAAAA,IAAvB,EAA6BuJ,qBAA7B,CAAA;AAEA,MAAa,UAAb,KAAIqf,gBAAJ,CAAyB;AAIhB,QAAA5oB,qBAAQyoB,mBAAR,CAAA,IAAA;AACP,WAAO,CACL,IAAAtpB,QAAG,CAAwBoO,cAAxB,CAA4B;AAAA,UACvB0S,uBACJjiB,oBACAsB,CAAAA,GAAImB,CAAAA,IAFW,CAEN,IAFM,CADY;AAI5BzC,0BAA8CmB,CAAAA,GAAIsB,CAAAA,IAAnD,CACE,IADF,EAEE8M,cAFF,CAAA;AAIA,UAAK2S,CAAAA,eAAL,CAAmBlgB,kBAAnB,EAAyBigB,oBAAzB,EAAmC1W,qBAAnC,CAAA;AAR6B,KAD1B,EAWL,OAAAuf,QAAI,CAAwBvb,cAAxB,CAA4B;AACpBxN,UAAAA,EAAV,KAAIwN,cAAJ,IACE,IAAKmW,CAAAA,kBAAL,CAAsB1jB,kBAAtB,EAA4BD,IAAAA,EAA5B,EAAuCwJ,qBAAvC,CADF;AAGA,aAAOgE,cAAP;AAJ8B,KAX3B,CAAP;AALuB;AAuBlB,MAAa,QAAb,KAAIqb,gBAAJ,CAAuB;AACrB,QAAA5oB,qBAAQyoB,mBAAR,CAAA,IAAA;AACP,WAAO,QAAA,CAAiC/nB,mBAAjC,CAAyC;AAAA,UACxCuf,uBAAW,IAAA,CAAKjgB,kBAAL,CAD6B;AAE7ChC,0BAA8ByC,CAAAA,IAA/B,CAAoC,IAApC,EAA0CC,mBAA1C,CAAA;AACA,UAAKwf,CAAAA,eAAL,CAAmBlgB,kBAAnB,EAAyBigB,oBAAzB,EAAmC1W,qBAAnC,CAAA;AAH8C,KAAhD;AAF4B;AAQ9B,QAAU7J,KAAJ,CAAU,kCAAV,GAA6CkpB,gBAA7C,CAAN;AAnDsE;AAsFxEG,QAAgBA,mHAAQ,CAACxf,qBAAD,CAA8B;AACpD,SAAO,QAAA,CACLyf,2CADK,EAKLC,yBALK,CAUE;AAEL,QAAyB,QAAzB,KAAA,MAAOA,0BAAP;AACI,iDAAA,GAAA,yHAAA,CAAA,qBAAA,EAAA,2CAAA,EAAA,yBAAA,CAAA;AADJ,UAAA;AA5IF,UACI9b,sCAmJE+b,2CAnJqB/b,CAAAA,cAAN,CAmJfnN,yBAnJe,CADrB;AAoJMkpB,iDAlJDlsB,CAAAA,WAAuC0iB,CAAAA,gBAA9C,CAkJQ1f,yBAlJR,EAEEmN,mCAAA,GAAiB,MAAA,CAAA,MAAA,CAAA,EAAA,EAgJX5D,qBAhJW,EAAA,CAAa8a,UAAS,CAAA,CAAtB,CAAA,CAAjB,GAgJM9a,qBAlJR,CAAA;AASA,iDAAA,GAAO4D,mCAAA,GACH9O,MAAOC,CAAAA,wBAAP,CAwII4qB,2CAxIJ,EAwIIlpB,yBAxIJ,CADG,GAEHD,IAAAA,EAFJ;AAiII;AADF,WACE,2CADF;AADO,GAVT;AADoD;A,CC/KlCopB,QAAA,0GAAA,CAClBC,gBADkB,EAElBppB,kBAFkB,EAGlB8f,sBAHkB,CAIhB;AAEFA,wBAAWK,CAAAA,YAAX,GAA0B,CAAA,CAA1B;AACAL,wBAAWM,CAAAA,UAAX,GAAwB,CAAA,CAAxB;AAIG5hB,SAAkD6qB,CAAAA,UAHrD,IAIkB,QAJlB,KAIE,MAAOrpB,mBAJT,IAUE3B,MAAOI,CAAAA,cAAP,CAAsB2qB,gBAAtB,EAA2BppB,kBAA3B,EAAiC8f,sBAAjC,CAVF;AAYA,SAAOA,sBAAP;AAhBE;A,CCoDJwJ,QAAgBA,6GAAK,CAACC,oBAAD,CAAkC;AACrD,SAAQ,QAAA,CACNP,yBADM,EAENC,yBAFM,CAIJ;AAgEA,WAAOO,yGAAA,CAAKR,yBAAL,EAAoBC,yBAApB,EAAmC,CACxC,IAAA3pB,QAAG,EAAA;AA/Dc+c,UAAAA,qBAAAA,EAAH,qBAAGA;AAgEf,aAhEY,IAAAtW,KAAA,qBAAAA,GAAA,IAAA,KAAGsW,qBAAH,GAgEG1Q,IAhEA0Q,CAAAA,YAAH,IAAA,IAAA,EAAA,GAAGA,qBAAYtQ,CAAAA,aAAf,CAA6Bwd,oBAA7B,CAAAxjB,IAAA,qBAAAA,GAA0C,IAgEtD;AADC,KADqC,CAAnC,CAAP;AAhEA,GAJJ;AADqD;A,CC9CvD4Z,QAAgBA,6GAAK,EAA2B;AAC9C,SAAOoJ,kHAAA,CAAS,MAAA,CAAA,MAAA,CAAA,EAAA,EADIxf,IAAAA,EACJ,EAAA,CAKdoW,MAAO,CAAA,CALO,EAMdlB,YAAW,CAAA,CANG,CAAA,CAAT,CAAP;AAD8C;A;;;;;ACjC1B,IAAA,qCAAAxP,oCAAA,CAAA,CAAA,ynMAAA,CAAA,CAAA;AAATwa,2GAASnD,kGAAA,CAAA,kCAAA,CAAA;AC2GpBtpB,QAAA,iGAAA,EAA+B;;AAQ/B0sB,gGAAA,CAAA,SAAA,CAAA,cAAAjT,GAAAA,QAAY,CACVP,gBADU,EAEVC,mBAFU,EAGVC,0BAHU,CAGwB;AAElC,MAAKuT,CAAAA,GAAL,GAAczT,gBAAd;AACA,MAAKW,CAAAA,GAAL,GAAgBV,mBAAhB;AACA,MAAKyT,CAAAA,GAAL,GAAwBxT,0BAAxB;AAJkC,CAHpCK;AAUAiT,gGAAA,CAAA,SAAA,CAAA,WAAAhT,GAAAA,QAAS,CAACR,gBAAD,EAAa2K,iBAAb,CAAkC;AACzC,SAAO,IAAK2D,CAAAA,MAAL,CAAYtO,gBAAZ,EAAkB2K,iBAAlB,CAAP;AADyC,CAA3CnK;AAMAgT,gGAAA,CAAA,SAAA,CAAA,MAAAlF,GAAAA,QAAM,CAACqF,QAAD,EAAchJ,iBAAd,CAAmC;AACvC,SAAO,IAAK7F,CAAAA,QAAL,CAAA,KAAA,CAAA,IAAA,EAAAnR,4BAAA,CAAegX,iBAAf,CAAA,CAAP;AADuC,CAAzC2D;AA1CF/M,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAAsBiS,gGAAtB,CAAA,SAAA,EAAA,CAAA,gBAqBM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAahS,QAAA,EAAA;AACf,SAAO,IAAKb,CAAAA,GAASa,CAAAA,eAArB;AADe,CAAb,CArBN,CAAA,CAAA;A;;;;;AClEE1a,QAAA,sHAAA,CAAY8sB,WAAZ,CAA8B;AAKhBzd,MAAAA,kCAAAA;AAHZ,MDUS0d,CCVT,KACED,WAASza,CAAAA,IADX,IAEoB,OAFpB,KAEEya,WAAS9pB,CAAAA,IAFX,IAGyC,CAHzC,IAGqBvC,IAAAA,KAAT4O,kCAAS5O,GAAlBqsB,WAASzd,CAAAA,SAAS5O,IAAAA,IAAAA,EAAAA,GAAT4O,kCAAS5O,CAAAA,MAHrB;AAKE,UAAUiC,KAAJ,CACJ,oGADI,CAAN;AALF;AAF4B;AARAka,mBAAAoQ,CAA1BC,qHAA0BD,EAAAN,gGAAAM,CAAAA;AAsB9BC,qHAAA,CAAA,SAAA,CAAA,QAAAjP,GAAAA,QAAM,CAACkP,YAAD,CAAqB;AAEzB,SACE,GADF,GAEE7rB,MAAOsJ,CAAAA,IAAP,CAAYuiB,YAAZ,CACGC,CAAAA,MADH,CACU,QAAA,CAAClsB,iBAAD,CAAS;AAAA,WAAAisB,YAAA,CAAUjsB,iBAAV,CAAA;AAAA,GADnB,CAEG2E,CAAAA,IAFH,CAEQ,GAFR,CAFF,GAKE,GALF;AAFyB,CAA3BoY;AAWSiP,qHAAA,CAAA,SAAA,CAAA,MAAAzF,GAAAA,QAAM,CAACtO,iDAAD,EAAsB,iDAAtB,CAA4D;AAArCgU,mDAAAA,GAAD9tB,uBAAA,CAAA,iDAAA,CAAA,CAAA,IAAA,EAAAguB,CAAAA,KAACF;AAEpC,MAA8BnqB,IAAAA,EAA9B,KAAI,IAAKsqB,CAAAA,GAAT,CAAyC;AACvC,QAAKA,CAAAA,GAAL,GAAwB,IAAIpiB,GAAJ,EAAxB;AACqBlI,QAAAA,EAArB,KAAImW,iDAAK7J,CAAAA,SAAT,KACE,IAAKie,CAAAA,GADP,GACwB,IAAIriB,GAAJ,CACpBiO,iDAAK7J,CAAAA,SACFzJ,CAAAA,IADH,CACQ,GADR,CAEGvC,CAAAA,KAFH,CAES,IAFT,CAGG8pB,CAAAA,MAHH,CAGU,QAAA,CAACtsB,cAAD,CAAO;AAAA,aAAM,EAAN,KAAAA,cAAA;AAAA,KAHjB,CADoB,CADxB;AAQA,SAAKmC,IAAMA,4BAAX,GAAmBkqB,kDAAnB,CAA8B;AACCI,UAAAA,qDAAAA,IAAAA,EAAAA;AAAzB,OAAAJ,iDAAA,CAAUlqB,4BAAV,CAAJ,KAAwB,IAAA,KAAKsqB,kDAAL,GAAAA,IAAKA,CAAAA,GAAL,IAAA,CAAA,GAAKA,kDAAgB3gB,CAAAA,GAArB,CAAyB3J,4BAAzB,CAAxB,KACE,IAAKqqB,CAAAA,GAAiB5lB,CAAAA,GAAtB,CAA0BzE,4BAA1B,CADF;AAD4B;AAK9B,WAAO,IAAKgb,CAAAA,QAAL,CAAYkP,iDAAZ,CAAP;AAfuC;AAkBnCK,8BAAAA,GAAYrU,iDAAK1M,CAAAA,OAAQ+gB,CAAAA,SAAzBA;AAGkBF,mDAAAA,GAAAjuB,uBAAAiuB,CAALA,IAAKA,CAAAA,GAAAA,CAAAA;AAAxB,OAAwBA,IAAAA,6FAAAA,iDAAAA,CAAAA,IAAAA,EAAxB,EAAA,CAAA,0FAAA,CAAA,IAAA,EAAA,0FAAA,GAAA,iDAAA,CAAA,IAAA,EAAA;AAAA,8FACE,GADF,0FAAA,CAAA,KACE,EAAMrqB,0FAAN,IAAckqB,iDAAd,KACEK,4BAAUtR,CAAAA,MAAV,CAAiBjZ,0FAAjB,CACA,EAAA,IAAKqqB,CAAAA,GAAkBxe,CAAAA,MAAvB,CAA8B7L,0FAA9B,CAFF,CAAA;AADF;AAQA,OAAWA,kDAAX,GAAmBkqB,kDAAnB;AAGQxpB,qDACN,GADc,CAAC,CAACwpB,iDAAA,CAAUlqB,kDAAV,CAChB,EAEQsqB,0FAFR,GAEQA,IAAAA,EAFR,EACE5pB,iDADF,KACY,IAAK2pB,CAAAA,GAAiB1gB,CAAAA,GAAtB,CAA0B3J,kDAA1B,CADZ,IAEG,IAFH,KAEQsqB,0FAFR,GAEGA,IAAKA,CAAAA,GAFR,KAEQA,0FAAgB3gB,CAAAA,GAArB,CAAyB3J,kDAAzB,CAFH;KAIMU,iDAAJ,IACE6pB,4BAAU9lB,CAAAA,GAAV,CAAczE,kDAAd,CACA,EAAA,IAAKqqB,CAAAA,GAAiB5lB,CAAAA,GAAtB,CAA0BzE,kDAA1B,CAFF,KAIEuqB,4BAAUtR,CAAAA,MAAV,CAAiBjZ,kDAAjB,CACA,EAAA,IAAKqqB,CAAAA,GAAiBxe,CAAAA,MAAtB,CAA6B7L,kDAA7B,CALF,CAJF,CAAA;AAJF;AAiBA,SAAOqS,gGAAP;AAhDyE,CAAlEmS;AAkEE,IAAAgG,+GDrCXC,QAAA,CAA2BtsB,cAA3B,CACA;AAAA,SAAA,QAAA,EAA0E;AAAA,QAAA,sBAAAiS,2BAAA,CAAA,KAAA,CAAA,CAAA,EAAA,SAAA,CAAA,EAAA,wBAAA,EAAA;AAAA,WAAA,qBAAA,CAAA,eAAA,GAEnDjS,cAFmD,EAAA,qBAAA,CAAA,MAAA,GAGxEiU,mBAHwE,EAAA,qBAAA;AAAA,GAA1E;AAAA,CCoCsB,CAAU6X,qHAAV,CAAX;AClHS,IAAA,sCAAAhb,oCAAA,CAAA,CAAA,qhFAAA,CAAA,CAAA;AAATyb,4GAASpE,kGAAA,CAAA,mCAAA,CAAA;A;;;;;ACmDL,IAOXqE,mIAAwBne,MAAA,CAAO,sBAAP,CAPb,EAiBboe,iIAjBa;AAyBfA,iIAAA,GAAyB,IAAIC,gBAAJ,CAAqB,QAAA,CAACC,0BAAD,CAAY;AACnCA,4BAAAA,GAAA1uB,uBAAA0uB,CAAAA,0BAAAA,CAAAA;AAArB,OAAqBA,IAAAA,uCAAAA,0BAAAA,CAAAA,IAAAA,EAArB,EAAA,CAAA,oCAAA,CAAA,IAAA,EAAA,oCAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,CAA8B;AAG5B,QAAA,uCAAA,IAAA,EAAA;AAAA,QAAA,KAAA,oCAAA,GAHF,oCAAAC,CAAAA,KAGU/sB,CAAAA,MAAR,CACE2sB,gIADF,CAAA,KAAA,oCAEGhI,CAAAA,eAFH,EAAA;AAH4B;AAD0B,CAAjC,CAAzB;AA4EA3lB,QAAA,+HAAA,CACmB6d,OADnB,EAEmBmQ,kBAFnB,CAKW;AAJQ,MAAAnQ,CAAAA,IAAA,GAAAA,OAAA;AACA,MAAAmQ,CAAAA,iBAAA,GAAAA,kBAAA;AAZX,MAAAC,CAAAA,gBAAA,GAAqC,IAArC;AAiBDzI,2CAAL,CAAA3H,OAAA,EAAmB,IAAnB,CAAA;AACAA,SAAA,CAAK8P,gIAAL,CAAA,GAA8B,IAA9B;AACA,MAAA,IAAAC,iIAAA,IAAAA,iIAAwBM,CAAAA,OAAxB,CAAgCrQ,OAAhC,EAAsC,CAACsQ,gBAAiB,CAAC,KAAD,CAAlB,CAAtC,CAAA;AAJS;AAOXC,8HAAA,CAAA,SAAA,CAAA,MAAAC,GAAAA,QAAM,CAACC,mBAAD,CAAqB;AACrBA,qBAAJ,KAAgB,IAAKL,CAAAA,gBAArB,KAIKM,6CAAL,CAAAA,IAAA,EAAuBD,mBAAvB,CAGA,EAAA,IAAKzQ,CAAAA,IAAKnF,CAAAA,eAAV,CAA0B,KAA1B,CAPA;AADyB,CAA3B2V;AAWAD,8HAAA,CAAA,SAAA,CAAA,MAAAI,GAAAA,QAAM,EAAA;AACCD,+CAAL,CAAAA,IAAA,EAAuB,IAAvB,CAAA;AAGA,MAAK1Q,CAAAA,IAAKpB,CAAAA,YAAV,CAAuB,KAAvB,EAA8B,EAA9B,CAAA;AAJI,CAAN+R;AAQAJ,8HAAA,CAAA,SAAA,CAAA,eAAAzI,GAAAA,QAAa,EAAA;AACN4I,+CAAL,CAAAA,IAAA,EAAuB,IAAKD,CAAAA,OAA5B,CAAA;AADW,CAAb3I;AAKAyI,8HAAA,CAAA,SAAA,CAAA,kBAAApI,GAAAA,QAAgB,EAAA;AACTuI,+CAAL,CAAAA,IAAA,EAAuB,IAAvB,CAAA;AADc,CAAhBvI;AAIQuI,QAAA,8CAAiB,CAAjBA,kDAAiB,EAACD,mBAAD,CAA4B;AACnD,oDAAKN,CAAAA,iBAAL,CAAqB,kDAAKC,CAAAA,gBAA1B,EAA0CK,mBAA1C,CAAA;AACA,oDAAKL,CAAAA,gBAAL,GAAsBK,mBAAtB;AAFmD;AApFvD7T,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAAa2T,8HAAb,CAAA,SAAA,EAAA,CAAA,QACM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAOK,QAAA,EAAA;AACT,SAAO,IAAK5Q,CAAAA,IAAK1F,CAAAA,YAAV,CAAuB,KAAvB,CAAP;AADS,CAAP,EAIA,IAA8BsW,QAAvB,CAACA,UAAD,CAAuB;AAChB,MAAhB,KAAIA,UAAJ,GACE,IAAK5Q,CAAAA,IAAKnF,CAAAA,eAAV,CAA0B,KAA1B,CADF,GAGE,IAAKmF,CAAAA,IAAKpB,CAAAA,YAAV,CAAuB,KAAvB,EAA8BgS,UAA9B,CAHF;AADgC,CAJ9B,CADN,EAAA,QAaM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAOH,QAAA,EAAA;AACT,SAAI,IAAKzQ,CAAAA,IAAK6Q,CAAAA,YAAV,CAAuB,KAAvB,CAAJ,GACO,IAAKD,CAAAA,OAAV,IAAsB,IAAK5Q,CAAAA,IAAKlD,CAAAA,WAAhC,GAKE,IAAKkD,CAAAA,IAAK8Q,CAAAA,WAAV,EACA5f,CAAAA,aAFK,CAEsB,GAFtB,GAE0B,IAAK0f,CAAAA,OAF/B,CAJP,GACS,IAFX,GAUO,IAAKR,CAAAA,gBAVZ,IAU8B,IAAKpQ,CAAAA,IAAK+Q,CAAAA,aAVxC;AADS,CAAP,EAaA,IAAmCN,QAA5B,CAACA,mBAAD,CAA4B;AACjCA,qBAAJ,GACE,IAAKD,CAAAA,MAAL,CAAYC,mBAAZ,CADF,GAGE,IAAKE,CAAAA,MAAL,EAHF;AADqC,CAbnC,CAbN,CAAA,CAAA;A;;;;;;;;;;ACvGyD,IAKnDK,oGAAS,CAAC,SAAD,EAAY,UAAZ,EAAwB,aAAxB,CAL0C;AAYzD7uB,QAAA,oGAAA,EAAA;AAAA,MAAA,oCCZ2C8uB,wGDY3C,CAAA,KAAA,CAAA,IAAA,EAAAtuB,SAAA,CAAA,IAAA,IAAA;AAI4C,mCAAAuuB,CAAAA,OAAA,GAAU,CAAA,CAAV;AAKA,mCAAAC,CAAAA,MAAA,GAAS,CAAA,CAAT;AAiBzB,mCAAAC,CAAAA,sBAAA,GAAuB,IAAIb,8HAAJ,CACtC,iCADsC,EAEtC,iCAAKJ,CAAAA,iBAAgBkB,CAAAA,IAArB,CAA0B,iCAA1B,CAFsC,CAAvB;AA1BnB,SAAA,iCAAA;AAAA;AAA+BtS,mBAAAhL,CAAlBud,mGAAkBvd,EAAAyW,wGAAAzW,CAAAA;AAAlBwd,mGhBs2BgC,CAAA,mBAAA,GiBl3BF9G,wGjBk3BE,CAAA,mBAAA;AgBt2BhC+G,mGhBwjBsC,CAAA,eAAA,GiBpkBR9G,wGjBokBQ,CAAA,eAAA;AgBxjBtC+G,mGhBo5BI,CAAA,4BAAA,GiBh6B0B9G,wGjBg6B1B,CAAA,4BAAA;AgBp5BJ+G,mGhBs3BM,CAAA,gBAAA,GiBl4BwB9G,wGjBk4BxB,CAAA,gBAAA;AgBt3BN+G,mGhBgwBI,CAAA,WAAA,GiB5wB0B9G,wGjB4wB1B,CAAA,WAAA;AgBhwBJ+G,mGhB8uBJ,CAAA,oBAAA,GiB1vBkC9G,wGjB0vBlC,CAAA,oBAAA;AgB9uBI+G,mGhBorBM,CAAA,uBAAA,GiBhsBwB9G,wGjBgsBxB,CAAA,uBAAA;AgBprBN+G,mGhBkoBJ,CAAA,gBAAA,GiB9oBkC9G,wGjB8oBlC,CAAA,gBAAA;AgBloBI+G,mGhBifJ,CAAA,gBAAA,GiB7fkC9G,wGjB6flC,CAAA,gBAAA;AgBjfI+G,mGfgTK,CAAA,UAAA,GgB5TyB3G,wGhB4TzB,CAAA,UAAA;AejRhBmF,4BAAAA,GAAAA,mGAAAA,CAAAA,SAAAA;AAAAyB,4BAAAzB,CAAAA,MAAAA,GAAAA,QAAM,CAACC,mBAAD,CAAqB;AACzB,MAAKW,CAAAA,sBAAqBZ,CAAAA,MAA1B,CAAiCC,mBAAjC,CAAA;AADyB,CAA3BD;AAIAyB,4BAAAtB,CAAAA,MAAAA,GAAAA,QAAM,EAAA;AACJ,MAAKS,CAAAA,sBAAqBT,CAAAA,MAA1B,EAAA;AADI,CAANA;AAISsB,4BAAA3e,CAAAA,iBAAAA,GAAAA,QAAiB,EAAA;AACxBkX,0GAAAW,CAAAA,SAAM7X,CAAAA,iBAAAA,CAAAA,IAANA,CAAMA,IAANA,CAAA;AAGA,MAAKsL,CAAAA,YAAL,CAAkB,aAAlB,EAAiC,MAAjC,CAAA;AAJwB,CAAjBtL;AAQT2e,4BAAAnS,CAAAA,WAAAA,GAAAA,QAAW,CAACC,kBAAD,CAAsB;AAC/B,MAAI,CAAAA,kBAAA,CAAMmS,gHAAN,CAAJ,CAAA;AAMA,WAAQnS,kBAAMvL,CAAAA,IAAd;AACE;AACE;AACF,WAAK,SAAL;AACsBic,YAAAA,kCAAAA,EAAL,wBAAKA;AAApB,YAAKS,CAAAA,OAAL,GAAe,IAAA,KAAA,wBAAA,GAAA,IAAA,KAAKT,kCAAL,GAAAA,IAAKA,CAAAA,OAAL,IAAA,IAAA,EAAA,GAAKA,kCAAS0B,CAAAA,OAAd,CAAsB,gBAAtB,CAAA,IAAA,wBAAA,GAA2C,CAAA,CAA1D;AACA;AACF,WAAK,UAAL;AACA,WAAK,aAAL;AACE,YAAKjB,CAAAA,OAAL,GAAe,CAAA,CAAf;AARJ;AAYAnR,sBAAA,CAAMmS,gHAAN,CAAA,GAA+B,CAAA,CAA/B;AAlBA;AAD+B,CAAjCpS;AAsBQmS,4BAAA9B,CAAAA,iBAAAA,GAAAA,QAAe,CAACiC,gBAAD,EAA2BC,gBAA3B,CAAmD;AAGxE,OAAoBrB,IAAAA,sBAAAzvB,uBAAAyvB,CAAAA,iGAAAA,CAAAA,EAAAA,6DAAAA,mBAAAA,CAAAA,IAAAA,EAApB,EAAA,CAAA,0DAAA,CAAA,IAAA,EAAA,0DAAA,GAAA,mBAAA,CAAA,IAAA,EAAA,CAA4B;AAA5B,8DAAA,GAAA,0DAAA,CAAA,KAAA;AACEoB,QAAAA,qEAAAA,IAAAA,EAAAA;AAAA,QAAA,KAAAA,kEAAA,GAAAA,gBAAA,KAAAA,kEAAMxS,CAAAA,mBAAN,CAA0BG,0DAA1B,EAAiC,IAAjC,CAAA;AACAsS,sEAAAA,GAAAA,IAAAA,EAAAA;AAAA,QAAA,KAAAA,kEAAA,GAAAA,gBAAA,KAAAA,kEAAMxS,CAAAA,gBAAN,CAAuBE,0DAAvB,EAA8B,IAA9B,CAAA;AAF0B;AAH4C,CAAlEoQ;AASC8B,4BAAAtI,CAAAA,MAAAA,GAAAA,QAAM,CAAC2I,UAAD,CAAmC;AAC5CA,YAAQxjB,CAAAA,GAAR,CAAY,SAAZ,CAAJ,IAGE,IAAKyjB,CAAAA,aAAL,CAAmB,IAAIC,KAAJ,CAAU,oBAAV,CAAnB,CAHF;AAKAhI,0GAAAW,CAAAA,SAAMxB,CAAAA,MAAAA,CAAAA,IAANA,CAAMA,IAANA,EAAa2I,UAAb3I,CAAA;AANgD,CAAzCA;AA9EX/M,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAAa0U,mGAAb,CAAA,SAAA,EAAA,CAAA,QAWM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAOV,QAAA,EAAA;AACT,SAAO,IAAKQ,CAAAA,sBAAqBR,CAAAA,OAAjC;AADS,CAAP,EAIA,IAA8BA,QAAvB,CAACA,mBAAD,CAAuB;AAChC,MAAKQ,CAAAA,sBAAqBR,CAAAA,OAA1B,GAAoCA,mBAApC;AADgC,CAJ9B,CAXN,EAAA,QAmBM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAOH,QAAA,EAAA;AACT,SAAO,IAAKW,CAAAA,sBAAqBX,CAAAA,OAAjC;AADS,CAAP,EAGA,IAAmCA,QAA5B,CAACA,mBAAD,CAA4B;AACrC,MAAKW,CAAAA,sBAAqBX,CAAAA,OAA1B,GAAoCA,mBAApC;AADqC,CAHnC,CAnBN,CAAA,CAAA;AAI4CgC,uEAAA,CAAA,CAAzCvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,EAAgBhB,UAAS,CAAA,CAAzB,CAAT,CAAyC,EAADoQ,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAAD8tB,mGAAArvB,CAAAA,SAAC,EAAD,SAAC,EAAD,IAAA,EAAC,CAAA;AAKAwwB,uEAAA,CAAA,CAAzCvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,EAAgBhB,UAAS,CAAA,CAAzB,CAAT,CAAyC,EAADoQ,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAAD8tB,mGAAArvB,CAAAA,SAAC,EAAD,QAAC,EAAD,IAAA,EAAC,CAAA;AAoBxC,IA2DEiwB,mHAAwBvgB,MAAA,CAAO,oBAAP,CA3D1B;AE5BG,QAAA,uGAAA,EAAA;AAAA,SAAAghB,mGAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AAAA;AAA0B5T,mBAAA6T,CAA1BA,sGAA0BA,EAAAtB,mGAAAsB,CAAAA;AAA1BA,sGlBq2BsC,CAAA,mBAAA,GkBr2BZrB,mGlBq2BY,CAAA,mBAAA;AkBr2BtCqB,sGlBujB4C,CAAA,eAAA,GkBvjBlBpB,mGlBujBkB,CAAA,eAAA;AkBvjB5CoB,sGlBm5BU,CAAA,4BAAA,GkBn5BgBnB,mGlBm5BhB,CAAA,4BAAA;AkBn5BVmB,sGlBq3BY,CAAA,gBAAA,GkBr3BclB,mGlBq3Bd,CAAA,gBAAA;AkBr3BZkB,sGlB+vBU,CAAA,WAAA,GkB/vBgBjB,mGlB+vBhB,CAAA,WAAA;AkB/vBViB,sGlB6uBE,CAAA,oBAAA,GkB7uBwBhB,mGlB6uBxB,CAAA,oBAAA;AkB7uBFgB,sGlBmrBY,CAAA,uBAAA,GkBnrBcf,mGlBmrBd,CAAA,uBAAA;AkBnrBZe,sGlBioBE,CAAA,gBAAA,GkBjoBwBd,mGlBioBxB,CAAA,gBAAA;AkBjoBFc,sGlBgfE,CAAA,gBAAA,GkBhfwBb,mGlBgfxB,CAAA,gBAAA;AkBhfFa,sGjB+SW,CAAA,UAAA,GiB/SeZ,mGjB+Sf,CAAA,UAAA;AiB/SX,IAAAa,oGAAA,sGAAA;AACWC,iGAAA1jB,CAAAA,QAAA,GAA8B,CAACygB,yGAAD,CAA9B;AADLgD,iGAAA,GAAWJ,uEAAA,CAAA,CADvBM,8HAAA,CAAc,eAAd,CACuB,CAAA,EAAXF,iGAAW,CAAX;ACXA,IAAAG,mGAAkC,qeAAA,CAAA,KAAA,CAAA,GAAA,CAAlC;AAiDkBC,gGAAgB5jB,CAAAA,GAAhB,CAAoB6jB,yGAApB,CAAA;AAwB/BA,QAAgBA,0GAAuB,CAAyBhF,qBAAzB,CAAoC;AACzE,SACEA,qBACGiF,CAAAA,OADH,CACW,MADX,EACmB,OADnB,CAGGA,CAAAA,OAHH,CAGW,YAHX,EAGyB,EAHzB,CAIGxe,CAAAA,WAJH,EADF;AADyE;A,CC3B3Eye,QAAgBA,2HAAiB,CAACrT,6CAAD,CAAa;AAW5C,MATIA,6CAAMsT,CAAAA,aASV,KAT4BtT,6CAAM5c,CAAAA,MASlC,IALI4c,6CAAMuT,CAAAA,YAAN,EAAA,CAAqB,CAArB,CAKJ,KALgCvT,6CAAM5c,CAAAA,MAKtC,IAAK4c,6CAAM5c,CAAAA,MAA6CowB,CAAAA,QAAxD;AACS,iDAAA,GAAA,CAAA,CAAA;AADT,QAAA;AASgC,QAC1BC,iCAAYC,2HADc;AAE5BD,kCAAJ,KAPOzT,6CAQC2T,CAAAA,cAAN,EACA,EATK3T,6CASC4T,CAAAA,wBAAN,EAFF;AAIAC,sIAAA,EAAA;AAXO,iDAAA,GAAA,CAYAJ,8BAZA;AAJP;AAAA,SAAA,6CAAA;AAX4C;AA4B7C,IAGGC,8HAAqB,CAAA,CAHxB;AAIDG,QAAeA,mIAAyB,EAAA;AAAAzvB,gDAAA,CAAA,QAAA,CAAA,wCAAA,CAAA;AAAA,QAAA,CAAA,IAAA,wCAAA,CAAA,GAAA;AAItC,aAHAsvB,2HAGA,GAHqB,CAAA,CAGrB,EAAA,iCAAA,CAAA,wCAAA,EAAM,IAAN,EAAA,CAAA,CAAA;AAJsC;AAKtCA,+HAAA,GAAqB,CAAA,CAArB;AALsC,4CtE8RjC,CAAA,GAAL,GAAmB,CAAnB;AsE9RsC,GAAA,CAAA;AAAA;A,CCpE3B,IAAAI,6GAAYliB,MAAA,CAAO,WAAP,CAAZ,EAiBPmiB,qHAAmBniB,MAAA,CAAO,kBAAP,CAjBZ;AA4BboiB,QAAgBA,wHAAqB,CACnC3xB,gBADmC,CAC5B;AAEP,UAAe4xB,+BAAf,EAAA;AAAA,WAAA,gBAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AAAA;AACUjV,qBAAA3c,CADK4xB,8BACL5xB,EAAAA,gBAAAA,CAAAA;AAGR6xB,mBAAA,CAAA,MAAA,CAAA,cAAA,CAJaD,8BAIb,CAAA,SAAA,EAAKH,0GAAL,EAAA,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAe,QAAA,EAAA;AAGR,QAAA,CAAKC,kHAAL,CAAL,KAEE,IAAA,CAAKA,kHAAL,CAFF,GAE4B,IAAqBI,CAAAA,eAAtB,EAF3B;AAKA,WAAO,IAAA,CAAKJ,kHAAL,CAAP;AARa,GAAf,CAAA,CAAA;AAcF,SAAOE,8BAAP;AApBO;A,CCoDI,IAAAG,uHAAkBxiB,MAAA,CAAO,iBAAP,CAAlB,EAMAyiB,yHAAoBziB,MAAA,CAAO,mBAAP,CANpB,EASP0iB,yHAAmB1iB,MAAA,CAAO,kBAAP,CATZ,EAUP2iB;AAAsB3iB,MAAA,CAAO,qBAAP,CAVf,EAWP4iB,uIAAiC5iB,MAAA,CAAO,gCAAP,CAX1B;AA6Cb6iB,QAAgBA,gIAAyB,CAEvCpyB,iBAFuC,CAEhC;AACPD,UAAesyB,+BAAf,EAAA;AAAA,QAAA,qCAAA,iBAAA,CAAA,KAAA,CAAA,IAAA,EAAA9xB,SAAA,CAAA,IAAA,IAAA;AA4BE,sCAAA,CAAA+xB,KAAA,CAAA,GAAmC,EAAnC;AA5BF,WAAA,kCAAA;AAAA;AADO,MAAAA,KAAA;AAEG3V,qBAAA3c,CADKqyB,8BACLryB,EAAAA,iBAAAA,CAAAA;AA6BR,gCAAA,CAAA,SAAA,CAAA,aAAAuyB,GAAAA,QAAa,EAAA;AACX,QAAA,CAAKL,yHAAL,CAAA,EAAA;AACA,WAAO,IAAA,CAAKT,0GAAL,CAAgBc,CAAAA,aAAhB,EAAP;AAFW,GAAbA;AAKA,gCAAA,CAAA,SAAA,CAAA,cAAAC,GAAAA,QAAc,EAAA;AACZ,QAAA,CAAKN,yHAAL,CAAA,EAAA;AACA,WAAO,IAAA,CAAKT,0GAAL,CAAgBe,CAAAA,cAAhB,EAAP;AAFY,GAAdA;AAKA,gCAAA,CAAA,SAAA,CAAA,iBAAAC,GAAAA,QAAiB,CAACtH,kBAAD,CAAc;AAC7B,QAAA,CAAKgH,oIAAL,CAAA,GAAuChH,kBAAvC;AACA,QAAA,CAAK+G,yHAAL,CAAA,EAAA;AAF6B,GAA/BO;AAKS,gCAAA,CAAA,SAAA,CAAA,eAAAxP,GAAAA,QAAa,CACpBlgB,kBADoB,EAEpBigB,oBAFoB,EAGpB1W,qBAHoB,CAGS;AAE7B2W,qBAAA8F,CAAAA,SAAM9F,CAAAA,eAAAA,CAAAA,IAANA,CAAMA,IAANA,EAAoBlgB,kBAApBkgB,EAA0BD,oBAA1BC,EAAoC3W,qBAApC2W,CAAA;AACA,QAAA,CAAKiP,yHAAL,CAAA,EAAA;AAH6B,GAHtBjP;AASA,gCAAA,CAAA,SAAA,CAAA,cAAAyE,GAAAA,QAAY,CAACwI,mBAAD,CAAwB;AAC3CxI,qBAAAqB,CAAAA,SAAMrB,CAAAA,cAAAA,CAAAA,IAANA,CAAMA,IAANA,EAAmBwI,mBAAnBxI,CAAA;AAcA,QAAA,CAAKwK,yHAAL,CAAA,EAAA;AAf2C,GAApCxK;AAtDI2K,gCAwEb,CAAA,SAAA,CAAAC,KAAA,GA5CCH,oIA4CD,EAACD,yHAAD,CAAA,GAAA,QAAqB,EAAA;AAKd,QAAA,CAAKD,sHAAL,CAAL,KACE,IAAA,CAAKA,sHAAL,CADF,GAC2B,IAAA,CAAKF,oHAAL,CAAA,EAD3B;AAKEW,QAAAA,iIAAAA,IAAAA,CAAKT,sHAALS,CAAAA;ACxLK,QACHhQ,0EAAQ,8HAAKiQ,CAAAA,GAAL,EADL;AAIT,QADG,8HAAKC,CAAAA,GACR,IADsB,8HAAKC,CAAAA,GAAL,CAAY,8HAAKD,CAAAA,GAAjB,EAA4BlQ,uEAA5B,CACtB;AACE,oIAAA,GAAO,8HAAKoQ,CAAAA,GAAZ;AADF,UAAA;AAIM,UAAA,4DAAgC,8HAAKC,CAAAA,GAAL,CAAqBrQ,uEAArB,CAAhC,EAACsQ,gCAAA,yDAAA,CAAA,QAAD;AAAWC,+DAAAA,GAAA,yDAAA,CAAA,iBAAAA;AACjB,oIAAKL,CAAAA,GAAL,GAAiB,8HAAKM,CAAAA,GAAL,CAAUxQ,uEAAV,CAAjB;AACA,oIAAKoQ,CAAAA,GAAL,GAAuB,CACrBG,kBAAAA,yDADqB,EAErBD,SAAU,CAGRG,SAAUH,6BAASG,CAAAA,QAHX,EAIRC,YAAaJ,6BAASI,CAAAA,WAJd,EAKRC,gBAAiBL,6BAASK,CAAAA,eALlB,EAMRC,cAAeN,6BAASM,CAAAA,aANhB,EAORC,eAAgBP,6BAASO,CAAAA,cAPjB;AAQRC,mBAAcR,6BAASQ,CAAAA,YARf,EASRC,QAAST,6BAASS,CAAAA,OATV,EAURC,SAAUV,6BAASU,CAAAA,QAVX,EAWRC,aAAcX,6BAASW,CAAAA,YAXf,EAYRC,aAAcZ,6BAASY,CAAAA,YAZf,CAFW,CAAvB;AAkBA,oIAAA,GAAO,8HAAKd,CAAAA,GAAZ;AAxBA;ADmLsCe,2EAAAA,GAAnB,8HAAA,CAAA,iBAAmBA;AAI9BZ,2EAAAA,GACJ,IAAA,CAAKd,oIAAL,CADIc,IACoCY,uEADpCZ;AAMJ,QAAA,wBAAA;AAHF,QAAA,CAAKxB,0GAAL,CAAgBqC,CAAAA,WAAhB,CACE,MAAA,CAAA,MAAA,CAAA,EAAA,EARK,8HAAAd,CAAAA,QAQL,EAAA,CAAcI,YALIA,CAAC,CAAC,IAAA,CAAKjB,oIAAL,CAKpB,CAAA,CADF,EAEEc,uEAFF;AAGE,QAAA,KAAA,wBAAA,GAAA,IAAA,CAAKjB,sHAAL,CAAA,EAAA,IAAA,wBAAA,GAA6BlvB,IAAAA,EAH/B,CAAA;AAhBmB,GAArB;AAxEauvB,gCA+Fb,CAAA,SAAA,CAACN,oHAAD,CAAA,GAAA,QAAiB,EAAA;AACf,UAAUtvB,KAAJ,CAAU,6BAAV,CAAN;AADe,GAAjB;AA/Fa4vB,gCAmGb,CAAA,SAAA,CAACL,sHAAD,CAAA,GAAA,QAAmB,EAAA;AACjB,UAAUvvB,KAAJ,CAAU,+BAAV,CAAN;AADiB,GAAnB;AAnGF+X,mBAAA,CAAA,MAAA,CAAA,gBAAA,CAAe6X,8BAAf,CAAA,SAAA,EAAA,CAAA,SAIM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAQW,QAAA,EAAA;AACV,QAAA,CAAKd,yHAAL,CAAA,EAAA;AACA,WAAO,IAAA,CAAKT,0GAAL,CAAgBuB,CAAAA,QAAvB;AAFU,GAAR,CAJN,EAAA,kBASM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAiBC,QAAA,EAAA;AACnB,QAAA,CAAKf,yHAAL,CAAA,EAAA;AACA,WAAO,IAAA,CAAKT,0GAAL,CAAgBwB,CAAAA,iBAAvB;AAFmB,GAAjB,CATN,EAAA,aAcM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAYc,QAAA,EAAA;AACd,QAAA,CAAK7B,yHAAL,CAAA,EAAA;AACA,WAAO,IAAA,CAAKT,0GAAL,CAAgBsC,CAAAA,YAAvB;AAFc,GAAZ,CAdN,CAAA,CAAA;AAwGA,SAAO1B,8BAAP;AAzGO;A,CElCI,IAAA2B,8GAAezkB,MAAA,CAAO,cAAP,CAAf,EAKA0kB,8GAAe1kB,MAAA,CAAO,cAAP,CALf;AAqFb2kB,QAAgBA,oHAAmB,CAEjCl0B,iBAFiC,CAE1B;AACP,UAAem0B,yBAAf,EAAA;AAAA,WAAA,iBAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AAAA;AAA6CxX,qBAAA3c,CAA9Bm0B,wBAA8Bn0B,EAAAA,iBAAAA,CAAAA;AAuClC,0BAAA,CAAA,SAAA,CAAA,wBAAAgmB,GAAAA,QAAwB,CAC/BjjB,kBAD+B,EAE/Bue,eAF+B,EAG/B7d,mBAH+B,CAGX;AAUP,UAAb,KAAIV,kBAAJ,IAAgC,UAAhC,KAAuBA,kBAAvB,GAIE,IAAKkgB,CAAAA,eAAL,CAAmBlgB,kBAAnB,EAF0B,UAATigB,KAAAjgB,kBAAAigB,GAA8B,IAA9BA,KAAsB1B,eAAtB0B,GAAqC1B,eAEtD,CAJF,GAQA0E,iBAAA+C,CAAAA,SAAM/C,CAAAA,wBAAAA,CAAAA,IAANA,CAAMA,IAANA,EAA+BjjB,kBAA/BijB,EAAqC1E,eAArC0E,EAA0CviB,mBAA1CuiB,CARA;AAVoB,GAHbA;AAwBA,0BAAA,CAAA,SAAA,CAAA,eAAA/C,GAAAA,QAAa,CACpBlgB,kBADoB,EAEpBigB,qBAFoB,EAGpB1W,qBAHoB,CAGS;AAE7B2W,qBAAA8F,CAAAA,SAAM9F,CAAAA,eAAAA,CAAAA,IAANA,CAAMA,IAANA,EAAoBlgB,kBAApBkgB,EAA0BD,qBAA1BC,EAAoC3W,qBAApC2W,CAAA;AAMA,QAAA,CAAKwO,0GAAL,CAAgB2C,CAAAA,YAAhB,CAA6B,IAAA,CAAKJ,2GAAL,CAAA,EAA7B,EAAmD,IAAA,CAAKC,2GAAL,CAAA,EAAnD,CAAA;AAR6B,GAHtBhR;AA/DIkR,0BA6Eb,CAAA,SAAA,CAACH,2GAAD,CAAA,GAAA,QAAc,EAAA;AAGZ,UAAUvxB,KAAJ,CAAU,0BAAV,CAAN;AAHY,GAAd;AA7Ea0xB,0BAmFb,CAAA,SAAA,CAACF,2GAAD,CAAA,GAAA,QAAc,EAAA;AACZ,WAAO,IAAA,CAAKD,2GAAL,CAAA,EAAP;AADY,GAAd;AAIA,0BAAA,CAAA,SAAA,CAAA,oBAAAK,GAAAA,QAAoB,CAAClD,oBAAD,CAAkB;AACpC,QAAKA,CAAAA,QAAL,GAAgBA,oBAAhB;AADoC,GAAtCkD;AAvFF7Z,mBAAA,CAAA,MAAA,CAAA,gBAAA,CAAe2Z,wBAAf,CAAA,SAAA,EAAA,CAAA,KAIM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAIG,QAAA,EAAA;AACN,WAAO,IAAA,CAAK7C,0GAAL,CAAgB6C,CAAAA,IAAvB;AADM,GAAJ,CAJN,EAAA,OAQM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAMC,QAAA,EAAA;AACR,WAAO,IAAA,CAAK9C,0GAAL,CAAgB8C,CAAAA,MAAvB;AADQ,GAAN,CARN,EAAA,KAmBM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAIxxB,QAAA,EAAA;AACC,QAAA,wBAAA;AAAP,WAAO,IAAA,KAAA,wBAAA,GAAA,IAAKmV,CAAAA,YAAL,CAAkB,MAAlB,CAAA,IAAA,wBAAA,GAA6B,EAApC;AADM,GAAJ,EAGA,IAAiBnV,QAAb,CAACA,kBAAD,CAAa;AAEnB,QAAKyZ,CAAAA,YAAL,CAAkB,MAAlB,EAA0BzZ,kBAA1B,CAAA;AAFmB,GAHjB,CAnBN,EAAA,SA8BM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAQouB,QAAA,EAAA;AACV,WAAO,IAAK1C,CAAAA,YAAL,CAAkB,UAAlB,CAAP;AADU,GAAR,EAGA,IAA0B0C,QAAlB,CAACA,oBAAD,CAAkB;AAC5B,QAAKrU,CAAAA,eAAL,CAAqB,UAArB,EAAiCqU,oBAAjC,CAAA;AAD4B,GAH1B,CA9BN,CAAA,CAAA;AAEkBgD,0BAAAK,CAAAA,cAAA,GAAiB,CAAA,CAAjB;AAgBhBnE,yEAAA,CAAA,CAACvE,kHAAA,CAAS,CAAClJ,aAAY,CAAA,CAAb,CAAT,CAAD,EAA6B0N,uEAAA,CAAA,aAAA,EAAAztB,MAAA,CAA7B,EAA6BytB,uEAAA,CAAA,mBAAA,EAAA,CAAAztB,MAAA,CAAA,CAA7B,CAAA,EAA6BsxB,wBAAAt0B,CAAAA,SAA7B,EAA6B,MAA7B,EAA6B,IAA7B,CAAA;AAWAwwB,yEAAA,CAAA,CAACvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,EAAgB0B,aAAY,CAAA,CAA5B,CAAT,CAAD,EAA4C0N,uEAAA,CAAA,aAAA,EAAApP,OAAA,CAA5C,EAA4CoP,uEAAA,CAAA,mBAAA,EAAA,CAAApP,OAAA,CAAA,CAA5C,CAAA,EAA4CiT,wBAAAt0B,CAAAA,SAA5C,EAA4C,UAA5C,EAA4C,IAA5C,CAAA;AAsEF,SAAOs0B,wBAAP;AApGO;A,CDtKPp0B,QAAA,4GAAA,CAA6B4yB,kBAA7B,CAAyD;AAA5B,MAAAA,CAAAA,GAAA,GAAAA,kBAAA;AAXrB,MAAAG,CAAAA,GAAA,GAAsC,CAC5CE,SAAU,EADkC,EAE5CC,kBAAmB,EAFyB,CAAtC;AAWiD;A,CEZ3D,QAAA,+HAAA,EAAA;AAAAwB,6GAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA;AAAuC9X,mBAAA+X,CAA1BC,8HAA0BD,EAAAE,2GAAAF,CAAAA;AAGlBC,8HAAA,CAAA,SAAA,CAAA,GAAA5B,GAAAA,QAAe,CAACrQ,kBAAD,CAAqB;AAChD,MAAKmS,CAAAA,GAAV,KAEE,IAAKA,CAAAA,GACL,GADuBtnB,QAASpB,CAAAA,aAAT,CAAuB,OAAvB,CACvB,EAAA,IAAK0oB,CAAAA,GAAgBziB,CAAAA,IAArB,GAA4B,UAH9B;AAMA,MAAKyiB,CAAAA,GAAgBC,CAAAA,OAArB,GAA+BpS,kBAAMoS,CAAAA,OAArC;AACA,MAAKD,CAAAA,GAAgBE,CAAAA,QAArB,GAAgCrS,kBAAMqS,CAAAA,QAAtC;AACA,SAAO,CACL/B,SAAU,IAAK6B,CAAAA,GAAgB7B,CAAAA,QAD1B,EAELC,kBAAmB,IAAK4B,CAAAA,GAAgB5B,CAAAA,iBAFnC,CAAP;AATqD,CAApCF;AAeA4B,8HAAA,CAAA,SAAA,CAAA,GAAA9B,GAAAA,QAAM,CAAC7C,gBAAD,EAAsBC,gBAAtB,CAAyC;AAChE,SAAOD,gBAAK8E,CAAAA,OAAZ,KAAwB7E,gBAAK6E,CAAAA,OAA7B,IAAwC9E,gBAAK+E,CAAAA,QAA7C,KAA0D9E,gBAAK8E,CAAAA,QAA/D;AADgE,CAA/ClC;AAIA8B,8HAAA,CAAA,SAAA,CAAA,GAAAzB,GAAAA,QAAI,CAAC,8BAAD,CAAmC;AACxD,SAAO,CAAC4B,QADc,8BAACA,CAAAA,OAChB,EAAUC,SADK,8BAAUA,CAAAA,QACzB,CAAP;AADwD,CAAvC7B;AC1CC,IAAA,qCAAAlhB,oCAAA,CAAA,CAAA,4pCAAA,CAAA,CAAA;AAATgjB,uGAAS3L,kGAAA,CAAA,kCAAA,CAAA;A;;;;;ACuJX,IAAA,wCAAArX,oCAAA,CAAA,CAAA,sBAAA,EAAA,UAAA,CAAA,CAAA,EArFL4c,+FAAS,iFAAA,CAAA,KAAA,CAAA,GAAA,CAqFJ,EAjELqG,sGAEF3pB,MAAO4pB,CAAAA,UAAP,CAAkB,yBAAlB,CA+DO;AA1DXn1B,QAAA,4FAAA,EAAA;AAAA,MAAA,uCVxF2C8uB,wGUwF3C,CAAA,KAAA,CAAA,IAAA,EAAAtuB,SAAA,CAAA,IAAA,IAAA;AAI4C,sCAAA4wB,CAAAA,QAAA,GAAW,CAAA,CAAX;AAiBzB,sCAAAgE,CAAAA,SAAA,GAAU,CAAA,CAAV;AACA,sCAAAC,CAAAA,OAAA,GAAU,CAAA,CAAV;AAGT,sCAAAC,CAAAA,YAAA,GAAa,EAAb;AACA,sCAAAC,CAAAA,aAAA,GAAc,EAAd;AACA,sCAAAC,CAAAA,aAAA,GAAc,CAAd;AAEA,sCAAA7S,CAAAA,KAAA,GAtFA8S,CAsFA;AAEA,sCAAAC,CAAAA,6BAAA,GAA8B,CAAA,CAA9B;AACS,sCAAAzG,CAAAA,sBAAA,GAAuB,IAAIb,8HAAJ,CACtC,oCADsC,EAEtC,oCAAKJ,CAAAA,iBAAgBkB,CAAAA,IAArB,CAA0B,oCAA1B,CAFsC,CAAvB;AAhCnB,SAAA,oCAAA;AAAA;AAA4BtS,mBAAAhL,CAAf+jB,2FAAe/jB,EAAAyW,wGAAAzW,CAAAA;AAAfgkB,2F3B0xBgC,CAAA,mBAAA,GiBl3BFtN,wGjBk3BE,CAAA,mBAAA;A2B1xBhCuN,2F3B4esC,CAAA,eAAA,GiBpkBRtN,wGjBokBQ,CAAA,eAAA;A2B5etCuN,2F3Bw0BI,CAAA,4BAAA,GiBh6B0BtN,wGjBg6B1B,CAAA,4BAAA;A2Bx0BJuN,2F3B0yBM,CAAA,gBAAA,GiBl4BwBtN,wGjBk4BxB,CAAA,gBAAA;A2B1yBNuN,2F3BorBI,CAAA,WAAA,GiB5wB0BtN,wGjB4wB1B,CAAA,WAAA;A2BprBJuN,2F3BkqBJ,CAAA,oBAAA,GiB1vBkCtN,wGjB0vBlC,CAAA,oBAAA;A2BlqBIuN,2F3BwmBM,CAAA,uBAAA,GiBhsBwBtN,wGjBgsBxB,CAAA,uBAAA;A2BxmBNuN,2F3BsjBJ,CAAA,gBAAA,GiB9oBkCtN,wGjB8oBlC,CAAA,gBAAA;A2BtjBIuN,2F3BqaJ,CAAA,gBAAA,GiB7fkCtN,wGjB6flC,CAAA,gBAAA;A2BraIuN,2F1BoOK,CAAA,UAAA,GgB5TyBnN,wGhB4TzB,CAAA,UAAA;A0B/LhBmF,4BAAAA,GAAAA,2FAAAA,CAAAA,SAAAA;AAAAiI,4BAAAjI,CAAAA,MAAAA,GAAAA,QAAM,CAACC,mBAAD,CAAqB;AACzB,MAAKW,CAAAA,sBAAqBZ,CAAAA,MAA1B,CAAiCC,mBAAjC,CAAA;AADyB,CAA3BD;AAIAiI,4BAAA9H,CAAAA,MAAAA,GAAAA,QAAM,EAAA;AACJ,MAAKS,CAAAA,sBAAqBT,CAAAA,MAA1B,EAAA;AADI,CAANA;AAIS8H,4BAAAnlB,CAAAA,iBAAAA,GAAAA,QAAiB,EAAA;AACxBkX,0GAAAW,CAAAA,SAAM7X,CAAAA,iBAAAA,CAAAA,IAANA,CAAMA,IAANA,CAAA;AAGA,MAAKsL,CAAAA,YAAL,CAAkB,aAAlB,EAAiC,MAAjC,CAAA;AAJwB,CAAjBtL;AAOUmlB,4BAAAtY,CAAAA,QAAAA,GAAAA,QAAM,EAAA;AAMvB,SAAOuY,4FAAA,CAAA,qCAAA,EAA2B/I,4GAAA,CALlBgJ,CACd,QAAW,IAAKpB,CAAAA,SADFoB,EAEd,QAAW,IAAKnB,CAAAA,OAFFmB,CAKkB,CAA3B,CAAP;AANuB,CAANxY;AASAsY,4BAAA9O,CAAAA,MAAAA,GAAAA,QAAM,CAACiP,eAAD,CAAqC;AACxDA,iBAAa9pB,CAAAA,GAAb,CAAiB,UAAjB,CAAJ,IAAoC,IAAKykB,CAAAA,QAAzC,KAEE,IAAKiE,CAAAA,OAFP,GACE,IAAKD,CAAAA,SADP,GACiB,CAAA,CADjB;AAIA/M,0GAAAW,CAAAA,SAAMxB,CAAAA,MAAAA,CAAAA,IAANA,CAAMA,IAANA,EAAaiP,eAAbjP,CAAA;AAL4D,CAA3CA;AAsDLkP,QAAA,8CAAiB,CAAjBA,kDAAiB,EAAC9Y,kBAAD,CAAoB;AAAA,SAAA5b,8CAAA,CAAA,QAAA,CAAA,2CAAA,CAAA;AAAA,QAAA,CAAA,IAAA,2CAAA,CAAA,GAAA,CAAA;AACjD,UAAI,CAAM20B,8CAAL,CAD4CA,kDAC5C,EAAwB/Y,kBAAxB,CAAL;AACE,eAAA,2CAAA,CAAA,MAAA,EAAA;AADF;AADiD,wDAK5CgZ,CAAAA,kBAAL,GAAwBhZ,kBAAxB;AACA,UA+NuB,OA/NvB,KAAkBA,kBA8NHiZ,CAAAA,WA9Nf;AAGE,eAT+C,kDAO1ClU,CAAAA,KAEL,GA7JamU,CA6Jb,EADKC,+CAAL,CAR+CA,kDAQ/C,EAAyBnZ,kBAAzB,CACA,EAAA,2CAAA,CAAA,MAAA,EAAA;AAHF;AASA,UAfiD,kDAexC8X,CAAAA,6BAAT,IAAwC,CAAMsB,oCAAL,CAfQA,kDAeR,EAAcpZ,kBAAd,CAAzC;AACE,eAAA,2CAAA,CAAA,MAAA,EAAA;AADF;AAfiD,wDAmB5C8X,CAAAA,6BAAL,GAAmC,CAAA,CAAnC;AAnBiD,wDAsB5C/S,CAAAA,KAAL,GAxLSsU,CAwLT;AACA,aAAA,iCAAA,CAAA,2CAAA,EAAM,IAAI9R,OAAJ,CAAY,QAAA,CAAC+R,mBAAD,CAAY;AAC5BC,kBAAA,CAAWD,mBAAX,EAxJiBE,GAwJjB,CAAA;AAD4B,OAAxB,CAAN,EAAA,CAAA,CAAA;AAvBiD;AA2BjD,QA7LSH,CA6LT,KA3BiD,kDA2BxCtU,CAAAA,KAAT;AACE,aAAA,2CAAA,CAAA,MAAA,EAAA;AADF;AA3BiD,sDA+B5CA,CAAAA,KAAL,GA1LK0U,CA0LL;AACKN,mDAAL,CAhCiDA,kDAgCjD,EAAyBnZ,kBAAzB,CAAA;AAhCiD,+C7EmK9C,CAAA,GAAL,GAAmB,CAAnB;A6EnKmD,GAAA,CAAA;AAAA;AAmC3C0Y,4BAAAgB,CAAAA,aAAAA,GAAAA,QAAW,EAAA;AAGb,MAAKlG,CAAAA,QAAT,KA1Le0F,CA8Lf,KAAI,IAAKnU,CAAAA,KAAT,GACO4U,6CAAL,CAAAA,IAAA,CADF,GAtNM9B,CAsNN,KAKI,IAAK9S,CAAAA,KALT,KAOOoU,+CAAL,CAAAA,IAAA,CACA,EAAKQ,6CAAL,CAAAA,IAAA,CARF,CAJA;AAHiB,CAAXD;AA4FAP,QAAA,gDAAmB,CAAnBA,oDAAmB,EAACS,yHAAD,CAAsB;AAC/C,MAAK,oDAAKC,CAAAA,QAAV,CAAA;AAIA,wDAAKpC,CAAAA,OAAL,GAAe,CAAA,CAAf;AACKqC,QAAAA,2IAAAA;AAAL,QAAA,KAAKA,2IAAL,GAAAA,oDAAKA,CAAAA,eAAL,KAAKA,2IAAeC,CAAAA,MAApB,EAAA;AA7DM,QAAA,sFA8DNC,oDA9D6BC,CAAAA,qBAAL,EAAlB;AAACC,+IAAAA,GAAA,mFAAA,CAAA,MAAAA;AAAQ,QAAAC,gFAAA,mFAAA,CAAA,KAAA,EACTC,iIAAS3xB,IAAKC,CAAAA,GAAL,CAASwxB,2IAAT,EAAiBC,6EAAjB,CADA;AAETE,uFAAAA,GAAe5xB,IAAKC,CAAAA,GAAL,CA5QS4xB,GA4QT,GACSF,8HADT,EA7QMG,EA6QN,CAAfF;AAKAzC,kIAAAA,GAAcnvB,IAAK4B,CAAAA,KAAL,CApRKmwB,EAoRL,GAAWJ,8HAAX,CAAdxC;AAEA6C,+IAAAA,GADahyB,IAAKiyB,CAAAA,IAALC,CAAU,IAAA,CAAA,GAAA,CAAAR,6EAAA,EAAS,CAAT,CAAVQ,GAAuB,IAAA,CAAA,GAAA,CAAAT,2IAAA,EAAU,CAAV,CAAvBS,CACbF,GArRMG,EAqRNH;AAqDNT,wDAnDKpC,CAAAA,aAAL,GAAmBA,8HAAnB;AAmDAoC,wDAlDKrC,CAAAA,aAAL,GAAmB,EAAnB,IAAuB8C,2IAAvB,GAAmCJ,mFAAnC,IAAmDzC,8HAAnD;AAkDAoC,wDAjDKtC,CAAAA,YAAL,GAAqBE,8HAArB,GAAkB,IAAlB;AAgBM,+IAAA,GAmCJiD,oDAnC2BZ,CAAAA,qBAAL,EAAlB;AAACC,iFAAAA,GAAA,2IAAA,CAAA,MAAAA;AAAQC,kIAAAA,GAAA,2IAAA,CAAA,KAAAA;AAGV,+IAAA,IAACA,8HAAD,GAgCHU,oDAhCiBjD,CAAAA,aAAd,IAA6B,CAA7B;AACA,uFAAA,IAACsC,6EAAD,GA+BHW,oDA/BkBjD,CAAAA,aAAf,IAA8B,CAA9B;AAIL,QA2BiCgC,yHA3BjC,YAA6BkB,YAA7B,CAAA;AAjBM,oIAAA,GAAqBntB,MAArB;AAACotB,mFAAAA,GAAA,8HAAA,CAAA,OAAAA;AAASC,oIAAAA,GAAA,8HAAA,CAAA,OAAAA;AACV,UAAA,wBAiBS,oDAjBUf,CAAAA,qBAAL,EAAd;AAIN,+HAAA,GAAO,CAACgB,EAaOC,yHAdRC,CAAAA,KACCF,IAHUF,6EAGVE,GAJD,qBAAAG,CAAAA,IAICH,CAAD,EAAuBI,EAafH,yHAdDI,CAAAA,KACgBD;OAFZL,8HAEYK,GAJjB,qBAAAE,CAAAA,GAIiBF,CAAvB,CAAP;AAYA,KAAA;AAGe,+HAAA,GAAA,CAAA,EAAA,8HAAA,GAAA,CAAA,EAAA,EAAA,6EAAA,GAAA,CAAA,CAAA;AAHf;AAUAG,6HAAA,GAAa,CACXP,EAAGO,yHAAWP,CAAAA,CAAdA,GAgBAJ,oDAhBuBjD,CAAAA,aAAvBqD,GAAqC,CAD1B,EAEXI,EAAGG,yHAAWH,CAAAA,CAAdA,GAeAR,oDAfuBjD,CAAAA,aAAvByD;AAAqC,KAF1B,CAAb;AAqBA,wDAAKvB,CAAAA,eAAL,GAAqB,oDAAKD,CAAAA,QAAO4B,CAAAA,OAAZ,CACnB,CACEF,IAAK,CAAC,CAAD,EAAI,CAAJ,CADP,EAEEH,KAAM,CAAC,CAAD,EAAI,CAAJ,CAFR,EAGElB,OAAQ,CAAC,oDAAKxC,CAAAA,YAAN,EAAkB,oDAAKA,CAAAA,YAAvB,CAHV,EAIEyC,MAAO,CAAC,oDAAKzC,CAAAA,YAAN,EAAkB,oDAAKA,CAAAA,YAAvB,CAJT,EAKEgE,UAAW,CACT,YADS,IAXRF,yHAE8BP,CAAAA,CAStB;AATQ,UASR,GAXRO,yHAEiDH,CAAAA,CASzC,GATQ,cASR,GAET,YAFS,IARkBJ,2IAQlB,GARM,MAQN,GARmCI,mFAQnC,GARM,YAQN,IAE2B,oDAAK1D,CAAAA,aAFhC,GAET,GAFS,CALb,CADmB;AAWnB,KACEgE,cAzVaC,SAwVf,EAEEC,SAhWcC,GA8VhB,EAGEC,OCnWIC,4BDgWN,EAIEzd,KA3Ve0d,UAuVjB,CAXmB,CAArB;AAZA;AAD+C;AAiCnCtC,QAAA,8CAAiB,CAAjBA,kDAAiB,CAAA;AAED,MACtBuC,YADsB,EAExBC,0BAFwB,EAGjBD,oCAHiB,EAKjBA,oCALiB;AAFC93B,gDAAA,CAAA,QAAA,CAAA,2CAAA,CAAA;AAAA,QAAA,CAAA,IAAA,2CAAA,CAAA,GAAA,CAAA;AAAA,wDACxB40B,CAAAA,kBAAL,GAAwB7zB,IAAAA,EAAxB;AAD6B,wDAExB4f,CAAAA,KAAL,GA9UM8S,CA8UN;AACMqE,kBAAAA,GAHuB,kDAGNpC,CAAAA,eAAjBoC;AACFC,gCAAAA,GAA0BlV,QAA1BkV;AACJ,UAAsC,QAAtC,KAAI,OAAkBC,IAAAA,KAAXF,oCAAWE,GAAXF,YAAWE,IAAAA,IAAAA,EAAAA,GAAXF,oCAAWE,CAAAA,WAAlB,CAAJ;AACED,kCAAA,GAA0BD,YAAUE,CAAAA,WAApC;AADF,YAEO,KAAeA,IAAAA,KAAXF,oCAAWE,GAAXF,YAAWE,IAAAA,CAAAA,GAAXF,oCAAWE,CAAAA,WAAf;AACLD,kCAAA,GAA0BD,YAAUE,CAAAA,WAAYC,CAAAA,EAAtB,CAAyB,IAAzB,CAA+Bv2B,CAAAA,KAAzD;AADK;AAIP,aAjXqBw2B,GAiXrB,IAAIH,0BAAJ,IAX6B,kDAYtB1E,CAAAA,OACL,GADe,CAAA,CACf,EAAA,2CAAA,CAAA,MAAA,EAFF,IAKA,iCAAA,CAAA,2CAAA,EAAM,IAAIlQ,OAAJ,CAAY,QAAA,CAAC+R,oBAAD,CAAY;AAC5BC,kBAAA,CAAWD,oBAAX,EAvXmBgD,GAuXnB,GAAuCH,0BAAvC,CAAA;AAD4B,OAAxB,CAAN,EAAA,CAAA,CALA;AAX6B;AAoB7B,QApB6B,kDAoBpBrC,CAAAA,eAAT,KAA2BoC,YAA3B;AAGE,aAAA,2CAAA,CAAA,MAAA,EAAA;AAHF;AApB6B,sDA0BxBzE,CAAAA,OAAL,GAAe,CAAA,CAAf;AA1B6B,+C7EG1B,CAAA,GAAL,GAAmB,CAAnB;A6EH+B,GAAA,CAAA;AAAA;AAsCvBsB,QAAA,+CAAkB,CAAlBA,mEAAkB,EAAC/Y,kBAAD,CAAoB;AAK5C,MAJI,mEAAKwT,CAAAA,QAIT,IAJqB,CAACxT,kBAAMuc,CAAAA,SAI5B,IACE,mEAAKvD,CAAAA,kBADP,IAEE,mEAAKA,CAAAA,kBAAiBwD,CAAAA,SAFxB,KAEsCxc,kBAAMwc,CAAAA,SAF5C;AAIE,WAAO,CAAA,CAAP;AAJF;AAOA,MAAmB,cAAnB,KAAIxc,kBAAMvL,CAAAA,IAAV,IAAoD,cAApD,KAAqCuL,kBAAMvL,CAAAA,IAA3C;AACE,WAkBqB,OAlBrB,KAAqBuL,kBAiBRiZ,CAAAA,WAjBb;AADF;AAIMwD,qEAAAA,GAAoC,CAApCA,KAAkBzc,kBAAM0c,CAAAA,OAAxBD;AACN,SAcuB,OAdvB,KAAoBzc,kBAaLiZ,CAAAA,WAbf,IAA8BwD,mEAA9B;AAjB4C;AAyBtCrD,QAAA,qCAAQ,CAARA,qEAAQ,EAAC,0CAAD,CAAqB;AAAnB,MAAA6B,kBAAD,0CAAC,CAAA,CAAA;AAAGI,4CAAAA,GAAJ,0CAAI,CAAA,CAAAA;AACb,uEAAA,GAA6B,qEAAKpB,CAAAA,qBAAL,EAA7B;AAAC,MAAAsB,kBAAA,qEAAA,CAAA,GAAA,EAAWoB,qBAAA,qEAAA,CAAA,MAAX,EAAmBC,oBAAA,qEAAA,CAAA,KAAnB;AACP,SAAO3B,eAAP,IADY,qEAAAG,CAAAA,IACZ,IAAoBH,eAApB,IAAyB2B,iBAAzB,IAAkCvB,0CAAlC,IAAuCE,eAAvC,IAA8CF,0CAA9C,IAAmDsB,kBAAnD;AAFmC;AAU/BjE,4BAAA3Y,CAAAA,WAAAA,GAAAA,QAAW,CAACC,kBAAD,CAAa;AAAA,MAAA,iCAAA,IAAA,EACxBsX,oCADwB;AAAA,SAAAlzB,8CAAA,CAAA,QAAA,CAAA,sEAAA,CAAA;AAAA,QAAA,CAAA,IAAA,sEAAA,CAAA,GAAA,CAAA;AAC5B,UAAmBguB,IAAAA,KAAfkF,oCAAelF,GAAfkF,mGAAelF,IAAAA,CAAAA,GAAfkF,oCAAelF,CAAAA,OAAnB;AAEE,eAAA,sEAAA,CAAA,MAAA,EAAA;AAFF;AAKA,aAAQpS,kBAAMvL,CAAAA,IAAd;AACE,aAAK,OAAL;AACE,wCAAKilB,CAAAA,aAAL,EAAA;AACA;AACF,aAAK,aAAL;AACEmD,wCArLKrJ,CAAAA,QAAT,KAqLIqJ,8BAjLC/E,CAAAA,6BACL,GADmC,CAAA,CACnC,EAAK6B,6CAAL,CAgLIkD,8BAhLJ,CALA;AAsLI;AACF,aAAK,eAAL;AA/LQ9D,wDAAL,CAgMD+D,8BAhMC,EAgMwB9c,kBAhMxB,CAAL,IAIK2Z,6CAAL,CA4LImD,8BA5LJ,CAJA;AAiMI;AACF,aAAK,aAAL;AAAA,gF7EhGC,CAAA,GAAL,G6EgGI,C7EhGJ;A6EgGI;AAGA,aAAK,cAAL;AArSQ/D,wDAAL,CAsSDgE,8BAtSC,EAsSuB/c,kBAtSvB,CAAL,KAsSI+c,8BAlSCvF,CAAAA,SAJL,GAIe,CAAA,CAJf;AAuSI;AACF,aAAK,cAAL;AA5RQuB,wDAAL,CA6RDiE,8BA7RC,EA6RuBhd,kBA7RvB,CAAL,KA6RIgd,8BAzRCxF,CAAAA,SAGL,GAHe,CAAA,CAGf,EAtJMK,CAsJN,KAsRImF,8BAtRKjY,CAAAA,KAAT,IACO4U,6CAAL,CAqREqD,8BArRF,CARF;AA8RI;AACF,aAAK,WAAL;AAlRQjE,wDAAL,CAmRDkE,8BAnRC,EAmRoBjd,kBAnRpB,CAAL,KA3IKyZ,CA+IL,KA+QIwD,8BA/QKlY,CAAAA,KAAT,GA+QIkY,8BA9QGlY,CAAAA,KADP,GAxIemU,CAwIf,GAtJSG,CAsJT,KA+QI4D,8BA1QKlY,CAAAA,KALT,KA+QIkY,8BAzQGlY,CAAAA,KACL,GA/IamU,CA+Ib,EAAKC,+CAAL,CAwQE8D,8BAxQF,EAwQEA,8BAxQ4BjE,CAAAA,kBAA9B,CAPF,CAJA;AA+PA;AAAA,4E7EtFG,CAAA,GAAL,G6EsFE,C7EtFF;A6EgF8B,KAAA;AAAA,aAAA,CAAA,IAAA,sEAAA,CAAA,GAAA,GAiBxB,sEAjBwB,GAiBxB,iCAAA,CAAA,sEAAA,EAAA,6CAAA,CAAA,8BAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,CAjBwB,IAkBxB,sE7ElGD,CAAA,GAD4D,G6EmG3D,C7EnG2D,EAAA,sEAAA;AAAA,UAAA,E6EiFnC,CAAA,EAAA,sEAAA;AAAA;AAAA,GAAA,CAAA;AAAA,CAAxBjZ;AAiCE2Y,4BAAAtI,CAAAA,iBAAAA,GAAAA,QAAe,CAACiC,gBAAD,EAA2BC,gBAA3B,CAAmD;AAGxE,OAAoBrB,IAAAA,sBAAAzvB,uBAAAyvB,CAAAA,4FAAAA,CAAAA,EAAAA,gEAAAA,mBAAAA,CAAAA,IAAAA,EAApB,EAAA,CAAA,6DAAA,CAAA,IAAA,EAAA,6DAAA,GAAA,mBAAA,CAAA,IAAA,EAAA,CAA4B;AAA5B,iEAAA,GAAA,6DAAA,CAAA,KAAA;AACEoB,QAAAA,yEAAAA,IAAAA,EAAAA;AAAA,QAAA,KAAAA,sEAAA,GAAAA,gBAAA,KAAAA,sEAAMxS,CAAAA,mBAAN,CAA0BG,6DAA1B,EAAiC,IAAjC,CAAA;AACAsS,0EAAAA,GAAAA,IAAAA,EAAAA;AAAA,QAAA,KAAAA,sEAAA,GAAAA,gBAAA,KAAAA,sEAAMxS,CAAAA,gBAAN,CAAuBE,6DAAvB,EAA8B,IAA9B,CAAA;AAF0B;AAH4C,CAAlEoQ;AA7XVvT,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAAakb,2FAAb,CAAA,SAAA,EAAA,CAAA,QAMM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAOlH,QAAA,EAAA;AACT,SAAO,IAAKQ,CAAAA,sBAAqBR,CAAAA,OAAjC;AADS,CAAP,EAIA,IAA8BA,QAAvB,CAACA,mBAAD,CAAuB;AAChC,MAAKQ,CAAAA,sBAAqBR,CAAAA,OAA1B,GAAoCA,mBAApC;AADgC,CAJ9B,CANN,EAAA,QAcM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAOH,QAAA,EAAA;AACT,SAAO,IAAKW,CAAAA,sBAAqBX,CAAAA,OAAjC;AADS,CAAP,EAGA,IAAmCA,QAA5B,CAACA,mBAAD,CAA4B;AACrC,MAAKW,CAAAA,sBAAqBX,CAAAA,OAA1B,GAAoCA,mBAApC;AADqC,CAHnC,CAdN,CAAA,CAAA;AAI4CgC,uEAAA,CAAA,CAAzCvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,EAAgBhB,UAAS,CAAA,CAAzB,CAAT,CAAyC,EAADoQ,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAADs0B,2FAAA71B,CAAAA,SAAC,EAAD,UAAC,EAAD,IAAA,EAAC,CAAA;AAiBzBwwB,uEAAA,CAAA,CAAhB3N,4GAAA,EAAgB,EAAT4N,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAS,CAAA,EAATs0B,2FAAA71B,CAAAA,SAAS,EAAT,WAAS,EAAT,IAAA,EAAS,CAAA;AACAwwB,uEAAA,CAAA,CAAhB3N,4GAAA,EAAgB,EAAT4N,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAS,CAAA,EAATs0B,2FAAA71B,CAAAA,SAAS,EAAT,SAAS,EAAT,IAAA,EAAS,CAAA;AAEmBwwB,uEAAA,CAAA,CAAnChE,4GAAA,CAAM,UAAN,CAAmC,EAAlBiE,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAkB,CAAA,EAAlBs0B,2FAAA71B,CAAAA,SAAkB,EAAlB,UAAkB,EAAlB,IAAA,EAAkB,CAAA;AE5F/B,QAAA,iGAAA,EAAA;AAAA,SAAAg7B,2FAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AAAA;AAAuBle,mBAAAme,CAAvBA,gGAAuBA,EAAApF,2FAAAoF,CAAAA;AAAvBA,gG7B81BsC,CAAA,mBAAA,G6B91BfnF,2F7B81Be,CAAA,mBAAA;A6B91BtCmF,gG7BgjB4C,CAAA,eAAA,G6BhjBrBlF,2F7BgjBqB,CAAA,eAAA;A6BhjB5CkF,gG7B44BU,CAAA,4BAAA,G6B54BajF,2F7B44Bb,CAAA,4BAAA;A6B54BViF,gG7B82BY,CAAA,gBAAA,G6B92BWhF,2F7B82BX,CAAA,gBAAA;A6B92BZgF,gG7BwvBU,CAAA,WAAA,G6BxvBa/E,2F7BwvBb,CAAA,WAAA;A6BxvBV+E,gG7BsuBE,CAAA,oBAAA,G6BtuBqB9E,2F7BsuBrB,CAAA,oBAAA;A6BtuBF8E,gG7B4qBY,CAAA,uBAAA,G6B5qBW7E,2F7B4qBX,CAAA,uBAAA;A6B5qBZ6E,gG7B0nBE,CAAA,gBAAA,G6B1nBqB5E,2F7B0nBrB,CAAA,gBAAA;A6B1nBF4E,gG7ByeE,CAAA,gBAAA,G6BzeqB3E,2F7ByerB,CAAA,gBAAA;A6BzeF2E,gG5BwSW,CAAA,UAAA,G4BxSY1E,2F5BwSZ,CAAA,UAAA;A4BxSX,IAAA2E,uFAAA,gGAAA;AACWC,oFAAAhuB,CAAAA,QAAA,GAA8B,CAACgoB,oGAAD,CAA9B;AADL+F,oFAAA,GAAQ1K,uEAAA,CAAA,CADpBM,8HAAA,CAAc,WAAd,CACoB,CAAA,EAARoK,oFAAQ,CAAR;A;;;;;AC+GF,IAAA,uCAAA/oB,oCAAA,CAAA,+rBAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA;AA7GLipB,8GAAoB7I,+HAAA,CACxB8B,mHAAA,CAAoBvC,uHAAA,CAAsBvJ,wGAAtB,CAApB,CADwB,CA6Gf;AAnDTroB,QAAA,kGAAA,EAAA;AACE,MAAA,sCAAA,2GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,IAAA;AA9ByB,qCAAA+0B,CAAAA,OAAA,GAAU,CAAA,CAAV;AAOA,qCAAAoG,CAAAA,aAAA,GAAgB,CAAA,CAAhB;AAQA,qCAAAnG,CAAAA,QAAA,GAAW,CAAA,CAAX;AAOf,qCAAAtxB,CAAAA,KAAA,GAAQ,IAAR;AAEK,qCAAA03B,CAAAA,aAAA,GAAc,CAAA,CAAd;AACA,qCAAAC,CAAAA,cAAA,GAAe,CAAA,CAAf;AACA,qCAAAC,CAAAA,mBAAA,GAAoB,CAAA,CAApB;AAMb,qCAAK5d,CAAAA,gBAAL,CAAsB,OAAtB,EAA+B,QAAA,CAACE,4CAAD,CAAsB;AACnD,QAAKqT,0HAAA,CAAkBrT,4CAAlB,CAAL,IAJN,mCAI6C2d,CAAAA,KAAvC,CAAA;AAJN,yCAOWC,CAAAA,KAAL,EAAA;AAC6BD,kDAAAA,GARnCA,mCAQmCA,CAAAA,KAAAA;AV1EuB,UACpD3d,6BAAQ,IAAI6d,UAAJ,CAAe,OAAf,EAAwB,CAACC,QAAS,CAAA,CAAV,CAAxB,CAD4C;AAE1DlvB,kDAAQ4jB,CAAAA,aAAR,CAAsBxS,0BAAtB,CAAA;AUoEM;AADmD,GAArD,CAAA;AAHJ,SAAA,mCAAA;AAAA;AA3C4BhB,mBAAAse,CAAjBS,iGAAiBT,EAAAA,2GAAAA,CAAAA;AAwDTS,iGAAA,CAAA,SAAA,CAAA,MAAAnU,GAAAA,QAAM,CAAC2I,mBAAD,CAAkC;AACzD,MACEA,mBAAQxjB,CAAAA,GAAR,CAAY,SAAZ,CADF,IAEEwjB,mBAAQxjB,CAAAA,GAAR,CAAY,UAAZ,CAFF,IAGEwjB,mBAAQxjB,CAAAA,GAAR,CAAY,eAAZ,CAHF,CAIE;AACmB,QAAA,wBAAA;AAAnB,QAAKyuB,CAAAA,aAAL,GAAmB,IAAA,KAAA,wBAAA,GAAAjL,mBAAQ7tB,CAAAA,GAAR,CAAY,SAAZ,CAAA,IAAA,wBAAA,GAA0B,IAAKyyB,CAAAA,OAAlD;AACoB,QAAA,wBAAA;AAApB,QAAKsG,CAAAA,cAAL,GAAoB,IAAA,KAAA,wBAAA,GAAAlL,mBAAQ7tB,CAAAA,GAAR,CAAY,UAAZ,CAAA,IAAA,wBAAA,GAA2B,IAAK8uB,CAAAA,QAApD;AAEE,QAAA,wBAAA;AADF,QAAKkK,CAAAA,mBAAL,GACE,IAAA,KAAA,wBAAA,GAAAnL,mBAAQ7tB,CAAAA,GAAR,CAAY,eAAZ,CAAA,IAAA,wBAAA,GAAgC,IAAK64B,CAAAA,aADvC;AAHA;AAOF3T,6GAAAwB,CAAAA,SAAMxB,CAAAA,MAAAA,CAAAA,IAANA,CAAMA,IAANA,EAAa2I,mBAAb3I,CAAA;AAZyD,CAAxCA;AAeAmU,iGAAA,CAAA,SAAA,CAAA,QAAA3d,GAAAA,QAAM,EAAA;AAGyB,MAC1C4d,gCAAY,IAAK7G,CAAAA,OAAjB6G,IAA4B,CAAC,IAAKT,CAAAA,aADQ,EAE1CU,qBAAkB,IAAKV,CAAAA,aAFmB;AAI1CW,+BAAAA,GAAmBtO,4GAAA,CAAS,CAChC,SAAY,IAAK4D,CAAAA,QADe,EAEhC,SAAYwK,6BAAZ,IAAyBC,kBAFO,EAGhC,WAAc,CAACD,6BAAf,IAA4B,CAACC,kBAHG,EAIhC,QAAWD,6BAJqB,EAKhC,cAAiBC,kBALe,EAMhC,kBAZe,CAAC,IAAKT,CAAAA,aAYrB,IAZoC,CAAC,IAAKE,CAAAA,mBAMV,EAOhC,eAZkB,IAAKF,CAAAA,aAYvB,IAZsC,CAAC,IAAKE,CAAAA,mBAKZ;AAQhC,uBAZwB,IAAKA,CAAAA,mBAIG,EAShC,gBAAiB,IAAKD,CAAAA,cATU,CAAT,CAAnBS;AAgBN,SAAOvF,4FAAA,CAAA,oCAAA,EACmBuF,6BADnB,EAKcD,kBAAA,GAAkB,OAAlB,GAA4BvmB,+FAL1C,EAH0B,IAA1BymB,CAAAA,SAGA,IAMyBzmB,+FANzB,EAH0B,IAAf0mB,CAAAA,WAGX,IAO6B1mB,+FAP7B;AAQW,MAAK8b,CAAAA,QARhB,EASW,IAAK4D,CAAAA,QAThB,EAUgB,IAAKmG,CAAAA,aAVrB,EAWU,IAAKpG,CAAAA,OAXf,EAYQ,IAAKkH,CAAAA,aAZb,EAaS,IAAKC,CAAAA,cAbd,EAkBgC,IAAK9K,CAAAA,QAlBrC,CAAP;AAvBuB,CAANpT;AAkDX2d,iGAAA,CAAA,SAAA,CAAA,aAAAM,GAAAA,QAAW,CAACre,oCAAD,CAAa;AACxB5c,sCAAAA,GAAS4c,oCAAM5c,CAAAA,MAAfA;AACN,MAAK+zB,CAAAA,OAAL,GAAe/zB,oCAAO+zB,CAAAA,OAAtB;AACA,MAAKoG,CAAAA,aAAL,GAAqBn6B,oCAAOm6B,CAAAA,aAA5B;AAH8B,CAAxBc;AAOAN,iGAAA,CAAA,SAAA,CAAA,cAAAO,GAAAA,QAAY,CAACte,kBAAD,CAAa;ACnJvB8d,GDqJc9d,kBCrJd8d,CAAAA,OAAV,IDqJkBlvB,ICrJawE,CAAAA,UAA/B,IAAmDmrB,CDqJ3Bve,kBCrJ2Bue,CAAAA,QAAnD,IDqJwBve,kBCpJhBwe,CAAAA,eAAN,EADF;AAEC,MAEKjJ,4BAAO3xB,OAAQ4e,CAAAA,SAAR,CDiJWxC,kBCjJa5d,CAAAA,WAAxB,EAAqC,CDiJ1B4d,kBCjJiCvL,CAAAA,IAAP,EDiJ1BuL,kBCjJ0B,CAArC,CAFZ;ADmJiBpR,MChJS4jB,CAAAA,aAARiM,CAAsBlJ,yBAAtBkJ,CACnB,ID+IwBze,kBC9IhB2T,CAAAA,cAAN,EADF;AD6IiC,CAAzB2K;AAhIGP,iGAyIF,CAAA,SAAA,CAAC1H,2GAAD,CAAA,GAAA,QAAc,EAAA;AACrB,SAAI,CAAC,IAAKc,CAAAA,OAAV,IAAqB,IAAKoG,CAAAA,aAA1B,GACS,IADT,GAIO,IAAKz3B,CAAAA,KAJZ;AADqB,CAAd;AAzIEi4B,iGAiJF,CAAA,SAAA,CAACzH,2GAAD,CAAA,GAAA,QAAc,EAAA;AACrB,SAAOpxB,MAAA,CAAO,IAAKiyB,CAAAA,OAAZ,CAAP;AADqB,CAAd;AAIA4G,iGAAA,CAAA,SAAA,CAAA,iBAAAW,GAAAA,QAAiB,EAAA;AAGxB,MAAKvH,CAAAA,OAAL,GAAe,IAAKrG,CAAAA,YAAL,CAAkB,SAAlB,CAAf;AAHwB,CAAjB4N;AAMAX,iGAAA,CAAA,SAAA,CAAA,wBAAAY,GAAAA,QAAwB,CAAC5Z,kBAAD,CAAc;AAC7C,MAAKoS,CAAAA,OAAL,GAAyB,MAAzB,KAAepS,kBAAf;AAD6C,CAAtC4Z;AA3JEZ,iGA+JX,CAAA,SAAA,CAAC3J,oHAAD,CAAA,GAAA,QAAiB,EAAA;AAAA,MAAA,gCAAA,IAAA;AACf,SAAO,IAAI4C,8HAAJ,CAAsB,QAAA,EAAM;AAAA,WAAA,6BAAA;AAAA,GAA5B,CAAP;AADe,CAAjB;AA/JW+G,iGAmKX,CAAA,SAAA,CAAC1J,sHAAD,CAAA,GAAA,QAAmB,EAAA;AACjB,SAAO,IAAKsJ,CAAAA,KAAZ;AADiB,CAAnB;AE5KFiB,SAAyC,EAA6B;AACpE,OAA2BC,IAAAA,sBAAAr9B,uBAAAq9B,CAAA5L,gGAAA4L,CAAAA,EAAAA,yDAAAA,mBAAAA,CAAAA,IAAAA,EAA3B,EAAA,CAAA,sDAAA,CAAA,IAAA,EAAA,sDAAA,GAAA,mBAAA,CAAA,IAAA,EAAA;AAAA,0DACE,GADF,sDAAA,CAAA,KACE,EFS0Bd,iGETrBjZ,CAAAA,gBAAL,CAAoBga,sDAApB,EAAkC,CAChCjb,YAAWsP,yGAAA,CAAwB2L,sDAAxB,CADqB,EAEhCvc,UAAS,CAAA,CAFuB,CAAlC,CAAA;AADF;AFU4Bwb,mGEHvBtZ,CAAAA,gBAAL,CAAoB,QAAA,CAAC7V,oBAAD,CAAY;AAOtBgZ,6CAAR,CAAAhZ,oBAAA,EANmBiZ,CACjB,gBAAAE,QAAa,EAAA;AACXnZ,0BAAQiQ,CAAAA,YAAR,CAAqB,MAArB,EAA6B,cAA7B,CAAA;AADW,KADIgJ,CAMnB,CAAA;AAP8B,GAAhC,CAAA;AARoE,CAAtE+W,CFWI,EAAA;AAIcG,iGAAAzrB,CAAAA,mBAAA,GAAoB,MAAA,CAAA,MAAA,CAAA,EAAA,Eb3CKoX,wGa4CzBpX,CAAAA,mBADoB,EAAA,CAElC0rB,eAAgB,CAAA,CAFkB,CAAA,CAApB;AAQWtM,uEAAA,CAAA,CAA1BvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,CAAT,CAA0B,EAADoP,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAADs6B,iGAAA77B,CAAAA,SAAC,EAAD,SAAC,EAAD,IAAA,EAAC,CAAA;AAOAwwB,uEAAA,CAAA,CAA1BvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,CAAT,CAA0B,EAADoP,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAADs6B,iGAAA77B,CAAAA,SAAC,EAAD,eAAC,EAAD,IAAA,EAAC,CAAA;AAQAwwB,uEAAA,CAAA,CAA1BvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,CAAT,CAA0B,EAADoP,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAADs6B,iGAAA77B,CAAAA,SAAC,EAAD,UAAC,EAAD,IAAA,EAAC,CAAA;AAOfwwB,uEAAA,CAAA,CAAXvE,kHAAA,EAAW,EAADwE,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAADs6B,iGAAA77B,CAAAA,SAAC,EAAD,OAAC,EAAD,IAAA,EAAC,CAAA;AAEKwwB,uEAAA,CAAA,CAAhB3N,4GAAA,EAAgB,EAAT4N,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAS,CAAA,EAATs6B,iGAAA77B,CAAAA,SAAS,EAAT,eAAS,EAAT,IAAA,EAAS,CAAA;AACAwwB,uEAAA,CAAA,CAAhB3N,4GAAA,EAAgB,EAAT4N,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAS,CAAA,EAATs6B,iGAAA77B,CAAAA,SAAS,EAAT,gBAAS,EAAT,IAAA,EAAS,CAAA;AACAwwB,uEAAA,CAAA,CAAhB3N,4GAAA,EAAgB,EAAT4N,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAS,CAAA,EAATs6B,iGAAA77B,CAAAA,SAAS,EAAT,qBAAS,EAAT,IAAA,EAAS,CAAA;AACgBwwB,uEAAA,CAAA,CAAhChE,4GAAA,CAAM,OAAN,CAAgC,EAAlBiE,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAkB,CAAA,EAAlBs6B,iGAAA77B,CAAAA,SAAkB,EAAlB,OAAkB,EAAlB,IAAA,EAAkB,CAAA;A;;;;;AG1D5B,QAAA,qGAAA,EAAA;AAAA,SAAA+8B,iGAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AAAA;AAAyBjgB,mBAAAkgB,CAAzBA,oGAAyBA,EAAAnB,iGAAAmB,CAAAA;AAAzBA,oGHuB+B,CAAA,mBAAA,GGvBNH,iGHuBM,CAAA,mBAAA;AGvB/B,IAAAI,6FAAA,oGAAA;AACWC,0FAAA/vB,CAAAA,QAAA,GAA8B,CAACwf,wGAAD,CAA9B;AADLsQ,0FAAA,GAAUzM,uEAAA,CAAA,CADtBM,8HAAA,CAAc,aAAd,CACsB,CAAA,EAAVmM,0FAAU,CAAV;ACzBS,IAAA,uCAAA9qB,oCAAA,CAAA,CAAA,0aAAA,CAAA,CAAA;AAATgrB,yGAAS3T,kGAAA,CAAA,oCAAA,CAAA;ACKtBtpB,QAAA,+FAAA,EAAA;AAAA,MAAA,qClBA2C8uB,wGkBA3C,CAAA,KAAA,CAAA,IAAA,EAAAtuB,SAAA,CAAA,IAAA,IAAA;AAI4C,oCAAA08B,CAAAA,KAAA,GAAQ,CAAA,CAAR;AAM1C,oCAAAC,CAAAA,UAAA,GAAa,CAAA,CAAb;AAMA,oCAAAC,CAAAA,QAAA,GAAW,CAAA,CAAX;AAhBF,SAAA,kCAAA;AAAA;AAA6BxgB,mBAAAhL,CAAhByrB,8FAAgBzrB,EAAAyW,wGAAAzW,CAAAA;AAAhB0rB,8FnCk3BgC,CAAA,mBAAA,GiBl3BFhV,wGjBk3BE,CAAA,mBAAA;AmCl3BhCiV,8FnCokBsC,CAAA,eAAA,GiBpkBRhV,wGjBokBQ,CAAA,eAAA;AmCpkBtCiV,8FnCg6BI,CAAA,4BAAA,GiBh6B0BhV,wGjBg6B1B,CAAA,4BAAA;AmCh6BJiV,8FnCk4BM,CAAA,gBAAA,GiBl4BwBhV,wGjBk4BxB,CAAA,gBAAA;AmCl4BNiV,8FnC4wBI,CAAA,WAAA,GiB5wB0BhV,wGjB4wB1B,CAAA,WAAA;AmC5wBJiV,8FnC0vBJ,CAAA,oBAAA,GiB1vBkChV,wGjB0vBlC,CAAA,oBAAA;AmC1vBIiV,8FnCgsBM,CAAA,uBAAA,GiBhsBwBhV,wGjBgsBxB,CAAA,uBAAA;AmChsBNiV,8FnC8oBJ,CAAA,gBAAA,GiB9oBkChV,wGjB8oBlC,CAAA,gBAAA;AmC9oBIiV,8FnC6fJ,CAAA,gBAAA,GiB7fkChV,wGjB6flC,CAAA,gBAAA;AmC7fIiV,8FlC4TK,CAAA,UAAA,GgB5TyB7U,wGhB4TzB,CAAA,UAAA;AkCxT0BoH,uEAAA,CAAA,CAAzCvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,EAAgBhB,UAAS,CAAA,CAAzB,CAAT,CAAyC,EAADoQ,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAADg8B,8FAAAv9B,CAAAA,SAAC,EAAD,OAAC,EAAD,IAAA,EAAC,CAAA;AAM1CwwB,uEAAA,CAAA,CADCvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,EAAgBhB,UAAS,CAAA,CAAzB,EAA+BsB,YAAW,aAA1C,CAAT,CACD,EADmE8O,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CACnE,CAAA,EADmEg8B,8FAAAv9B,CAAAA,SACnE,EADmE,YACnE,EADmE,IAAA,EACnE,CAAA;AAMAwwB,uEAAA,CAAA,CADCvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,EAAgBhB,UAAS,CAAA,CAAzB,EAA+BsB,YAAW,WAA1C,CAAT,CACD,EADiE8O,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CACjE,CAAA,EADiEg8B,8FAAAv9B,CAAAA,SACjE,EADiE,UACjE,EADiE,IAAA,EACjE,CAAA;ACCK,QAAA,oGAAA,EAAA;AAAA,SAAAk+B,8FAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AAAA;AAAwBphB,mBAAAqhB,CAAxBA,mGAAwBA,EAAAZ,8FAAAY,CAAAA;AAAxBA,mGpCi2BsC,CAAA,mBAAA,GoCj2BdX,8FpCi2Bc,CAAA,mBAAA;AoCj2BtCW,mGpCmjB4C,CAAA,eAAA,GoCnjBpBV,8FpCmjBoB,CAAA,eAAA;AoCnjB5CU,mGpC+4BU,CAAA,4BAAA,GoC/4BcT,8FpC+4Bd,CAAA,4BAAA;AoC/4BVS,mGpCi3BY,CAAA,gBAAA,GoCj3BYR,8FpCi3BZ,CAAA,gBAAA;AoCj3BZQ,mGpC2vBU,CAAA,WAAA,GoC3vBcP,8FpC2vBd,CAAA,WAAA;AoC3vBVO,mGpCyuBE,CAAA,oBAAA,GoCzuBsBN,8FpCyuBtB,CAAA,oBAAA;AoCzuBFM,mGpC+qBY,CAAA,uBAAA,GoC/qBYL,8FpC+qBZ,CAAA,uBAAA;AoC/qBZK,mGpC6nBE,CAAA,gBAAA,GoC7nBsBJ,8FpC6nBtB,CAAA,gBAAA;AoC7nBFI,mGpC4eE,CAAA,gBAAA,GoC5esBH,8FpC4etB,CAAA,gBAAA;AoC5eFG,mGnC2SW,CAAA,UAAA,GmC3SaF,8FnC2Sb,CAAA,UAAA;AmC3SX,IAAAG,0FAAA,mGAAA;AACWC,uFAAAlxB,CAAAA,QAAA,GAA8B,CAACgwB,sGAAD,CAA9B;AADLiB,uFAAA,GAAS5N,uEAAA,CAAA,CADrBM,8HAAA,CAAc,YAAd,CACqB,CAAA,EAATsN,uFAAS,CAAT;ACtBS,IAAA,qCAAAjsB,oCAAA,CAAA,CAAA,ooGAAA,CAAA,CAAA;AAATmsB,qGAAS9U,kGAAA,CAAA,kCAAA,CAAA;ACmBT,IAAA+U,qGAAc7uB,MAAA,CAAO,aAAP,CAAd,EAEP8uB,6GAAqB9uB,MAAA,CAAO,oBAAP,CAFd,EAGP+uB,2GAAmB/uB,MAAA,CAAO,kBAAP,CAHZ,EAIPgvB;AAAqBhvB,MAAA,CAAO,oBAAP,CAJd,EAKPivB,yGAAiBjvB,MAAA,CAAO,gBAAP,CALV;ACMb,QAAA,yHAAA,EAAA;AAAAklB,6GAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA;AAAoC9X,mBAAA+X,CAAvB+J,wHAAuB/J,EAAAE,2GAAAF,CAAAA;AAGf+J,wHAAA,CAAA,SAAA,CAAA,GAAA1L,GAAAA,QAAe,CAAC2L,0BAAD,CAAwB;AACnD,MAAKC,CAAAA,GAAV,KAEE,IAAKA,CAAAA,GAGL,GAHoBpxB,QAASpB,CAAAA,aAAT,CAAuB,OAAvB,CAGpB,EAFA,IAAKwyB,CAAAA,GAAavsB,CAAAA,IAElB,GAFyB,OAEzB,EAAA,IAAKusB,CAAAA,GAAa57B,CAAAA,IAAlB,GAAyB,OAL3B;AAMC,MAEG67B,gBAAa,CAAA,CAFhB,EAGGjD,wBAAY,CAAA,CAHf;AAIiC+C,4BAAAA,GAAAv/B,uBAAAu/B,CAAAA,0BAAAA,CAAAA;AAAlC,OAAkCA,IAAAA,sFAAAA,0BAAAA,CAAAA,IAAAA,EAAlC,EAAA,CAAA,mFAAA,CAAA,IAAA,EAAA,mFAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,CAA0C;AAA/B,uFAAA,GAAX,mFAAA,CAAA,KAAW;AAAC,QAAA5J,sBAAA,mFAAA,CAAA,OAAA;AAAS,uFAAAC,CAAAA,QACnB,KACE6J,aADF,GACe,CAAA,CADf;AAII9J,uBAAJ,KACE6G,qBADF,GACc,CAAA,CADd;AALwC;AAc1C,MAAKgD,CAAAA,GAAa7J,CAAAA,OAAlB,GAA4B6G,qBAA5B;AACA,MAAKgD,CAAAA,GAAa5J,CAAAA,QAAlB,GAA6B6J,aAA7B;AACA,SAAO,CACL5L,SAAU,CACRY,aAAcgL,aAAdhL,IAA4B,CAAC+H,qBADrB,CADL,EAIL1I,kBAAmB,IAAK0L,CAAAA,GAAa1L,CAAAA,iBAJhC,CAAP;AA3BwD,CAAvCF;AAmCA0L,wHAAA,CAAA,SAAA,CAAA,GAAA5L,GAAAA,QAAM,CACvBgM,YADuB,EAEvBC,YAFuB,CAEG;AAE1B,MAAID,YAAUr+B,CAAAA,MAAd,KAAyBs+B,YAAUt+B,CAAAA,MAAnC;AACE,WAAO,CAAA,CAAP;AADF;AAIA,OAAK,IAAIC,kBAAI,CAAb,EAAgBA,eAAhB,GAAoBo+B,YAAUr+B,CAAAA,MAA9B,EAAsCC,eAAA,EAAtC,CAA2C;AAAC,QACpCuvB,mBAAO6O,YAAA,CAAUp+B,eAAV,CAD6B,EAEpCwvB,mBAAO6O,YAAA,CAAUr+B,eAAV,CAF6B;AAG1C,QAAIuvB,gBAAK8E,CAAAA,OAAT,KAAqB7E,gBAAK6E,CAAAA,OAA1B,IAAqC9E,gBAAK+E,CAAAA,QAA1C,KAAuD9E,gBAAK8E,CAAAA,QAA5D;AACE,aAAO,CAAA,CAAP;AADF;AAHyC;AAQ3C,SAAO,CAAA,CAAP;AAd0B,CAFTlC;AAmBA4L,wHAAA,CAAA,SAAA,CAAA,GAAAvL,GAAAA,QAAI,CAACwL,kBAAD,CAAwB;AAG7C,SAAOA,kBAAOzxB,CAAAA,GAAP,CAAW,QAAA,CAAC,8BAAD,CAA0B;AAAA,WAAA,CAC1C6nB,QADiB,8BAACA,CAAAA,OAAwB,EAE1CC,SAFiB,8BAAUA,CAAAA,QAAe,CAAA;AAAA,GAArC,CAAP;AAH6C,CAA5B7B;AChBnBnzB,QAAA,uIAAA,CAA6B6d,gBAA7B,CAAyD;AAAA,MAAA,gCAAA,IAAA;AAA5B,MAAAA,CAAAA,IAAA,GAAAA,gBAAA;AAHrB,MAAAmhB,CAAAA,OAAA,GAAU,CAAA,CAAV;AACA,MAAAC,CAAAA,IAAA,GAA0B,IAA1B;AAyCS,MAAAC,CAAAA,eAAA,GAAgBC,QAAA,EAAK;AACpC,iCAAKH,CAAAA,OAAL,GAAe,CAAA,CAAf;AACKI,gDAAL,CAAAA,6BAAA,CAAA;AAFoC,GAArB;AAKA,MAAAC,CAAAA,gBAAA,GAAiBC,QAAA,EAAK;AACrC,iCAAKN,CAAAA,OAAL,GAAe,CAAA,CAAf;AACKI,gDAAL,CAAAA,6BAAA,CAAA;AAFqC,GAAtB;AA6CA,MAAAG,CAAAA,eAAA,GAAgBC,QAAA,CAAC5hB,8BAAD,CAAyB;AAAA,QAClD6hB,+DAAuB,WAAvBA,KAAS7hB,8BAAM3c,CAAAA,GADmC,EAElDy+B,oCAAqB,SAArBA,KAAO9hB,8BAAM3c,CAAAA,GAFqC,EAGlD0+B,sBAAuB,WAAvBA,KAAS/hB,8BAAM3c,CAAAA,GAHmC,EAIlD2+B,uBAAwB,YAAxBA,KAAUhiB,8BAAM3c,CAAAA,GAJkC;AAMxD,QAAK0+B,mBAAL,IAAgBC,oBAAhB,IAA4BH,4DAA5B,IAAuCC,iCAAvC;AAMA,UADMG,iCACQp/B,GADG,6BAAKq/B,CAAAA,QACRr/B,EAATo/B,iCAASp/B,CAAAA,MAAd;AAgBA,aAVAmd,8BAAM2T,CAAAA,cAAN,EAOIwO,EAHEC,4DAGFD,GAJoD,KACvC,KADHE,gBAAA,CAAiB,6BAAKpiB,CAAAA,IAAtB,CAA4BqiB,CAAAA,SACzB,GAAQP,mBAAR,IAAkBF,4DAAlB,GAA2BG,oBAA3B,IAAsCH,4DAGnDM,EADEI,mBACFJ,GADcF,iCAAS35B,CAAAA,OAAT,CAAiB,6BAAK2X,CAAAA,IAAtB,CACdkiB,EAAAA,oBAAAA,GAAYC,4DAAA;AAAWG,2BAAX,GAAuB,CAAvB,GAA2BA,mBAA3B,GAAuC,CAGvD,EAAOJ,oBAAP,KAAqBI,mBAArB,CAAA;AAYE,cAXIJ,oBAAJ,IAAiBF,iCAASp/B,CAAAA,MAA1B,GAEEs/B,oBAFF,GAEc,CAFd,GAGuB,CAHvB,GAGWA,oBAHX,KAKEA,oBALF,GAKcF,iCAASp/B,CAAAA,MALvB,GAKgC,CALhC,CAWI,EADE6Z,8BACF,GADgBulB,iCAAA,CAASE,oBAAT,CAChB,EAAAzlB,8BAAYoU,CAAAA,YAAZ,CAAyB,UAAzB,CAAJ;AACMsR,wEAAJ,GACED,oBAAA,EADF,GAGEA,oBAAA,EAHF;AADF,gBAAA;AAWsBF,6CAAAA,GAAAzgC,uBAAAygC,CAAAA,iCAAAA,CAAAA;AAAtB,iBAAsBA,4DAAtB,GAAsBA,iCAAAA,CAAAA,IAAAA,EAAtB,EAAA,CAAA,4DAAA,CAAA,IAAA,EAAA,4DAAA,GAAA,iCAAA,CAAA,IAAA,EAAA;AAAA,0EACE,GADF,4DAAA,CAAA,KACE,EAAIO,4DAAJ,KAAgB9lB,8BAAhB,KACE8lB,4DAAQrL,CAAAA,OAER,GAFkB,CAAA,CAElB,EADAqL,4DAAQC,CAAAA,QACR,GADmB,CAAC,CACpB,EAAAD,4DAAQE,CAAAA,IAAR,EAHF,CAAA;AADF;AASAhmB,0CAAYya,CAAAA,OAAZ,GAAsB,CAAA,CAAtB;AACAza,0CAAY+lB,CAAAA,QAAZ,GAAuB,CAAvB;AACA/lB,0CAAYkhB,CAAAA,KAAZ,EAAA;AAGAlhB,0CAAY8V,CAAAA,aAAZ,CAA0B,IAAIC,KAAJ,CAAU,QAAV,EAAoB,CAACqL,QAAS,CAAA,CAAV,CAApB,CAA1B,CAAA;AAEA;AA3BA;AAZF;AAhBA;AANA;AANwD,GAAzC;AAzFwC;AAEzD6E,sIAAA,CAAA,SAAA,CAAA,eAAA5a,GAAAA,QAAa,EAAA;AACX,MAAKsZ,CAAAA,IAAL,GAAY,IAAKphB,CAAAA,IAAK8Q,CAAAA,WAAV,EAAZ;AACA,MAAK9Q,CAAAA,IAAKH,CAAAA,gBAAV,CAA2B,SAA3B,EAAsC,IAAK6hB,CAAAA,eAA3C,CAAA;AACA,MAAK1hB,CAAAA,IAAKH,CAAAA,gBAAV,CAA2B,SAA3B,EAAsC,IAAKwhB,CAAAA,eAA3C,CAAA;AACA,MAAKrhB,CAAAA,IAAKH,CAAAA,gBAAV,CAA2B,UAA3B,EAAuC,IAAK2hB,CAAAA,gBAA5C,CAAA;AACI,MAAKxhB,CAAAA,IAAKkX,CAAAA,OAAd,IAGOyL,2CAAL,CAAAA,IAAA,CAHF;AAOKpB,8CAAL,CAAAA,IAAA,CAAA;AAZW,CAAbzZ;AAeA4a,sIAAA,CAAA,SAAA,CAAA,kBAAAva,GAAAA,QAAgB,EAAA;AACd,MAAKnI,CAAAA,IAAKJ,CAAAA,mBAAV,CAA8B,SAA9B,EAAyC,IAAK8hB,CAAAA,eAA9C,CAAA;AACA,MAAK1hB,CAAAA,IAAKJ,CAAAA,mBAAV,CAA8B,SAA9B,EAAyC,IAAKyhB,CAAAA,eAA9C,CAAA;AACA,MAAKrhB,CAAAA,IAAKJ,CAAAA,mBAAV,CAA8B,UAA9B,EAA0C,IAAK4hB,CAAAA,gBAA/C,CAAA;AAEKD,8CAAL,CAAAA,IAAA,CAAA;AACA,MAAKH,CAAAA,IAAL,GAAY,IAAZ;AANc,CAAhBjZ;AAgCQwa,QAAA,4CAAe,CAAfA,gDAAe,CAAA;AACrB,OAA2BV,IAAAA,sBAAA1gC,uBAAA0gC,CAALA,gDAAKA,CAAAA,QAAAA,CAAAA,EAAAA,kEAAAA,mBAAAA,CAAAA,IAAAA,EAA3B,EAAA,CAAA,+DAAA,CAAA,IAAA,EAAA,+DAAA,GAAA,mBAAA,CAAA,IAAA,EAAA;AAAA,mEACE,GADF,+DAAA,CAAA,KACE,EAAIM,+DAAJ,KAAgB,gDAAKviB,CAAAA,IAArB,KACEuiB,+DAAQrL,CAAAA,OADV,GACoB,CAAA,CADpB,CAAA;AADF;AADqB;AAWfqK,QAAA,6CAAgB,CAAhBA,4EAAgB,CAAA;AAAA,MAGhBS,oFAAW,4EAAKC,CAAAA,QAHA,EAIhBW,iFAAiBZ,iFAASa,CAAAA,IAAT,CAAc,QAAA,CAACN,mBAAD,CAAqBrL;AAAAA,WAARqL,mBAAQrL,CAAAA,OAAAA;AAAAA,GAAnC,CAJD;AAMtB,MAAI0L,8EAAJ,IAAsB,4EAAKzB,CAAAA,OAA3B;AAIE,SAHM2B,4EAGgBd,GAHJY,8EAGIZ,IAHc,4EAAKhiB,CAAAA,IAGnBgiB,EAFtBc,4EAAUN,CAAAA,QAEYR,GAFD,CAECA,EAAAA,iFAAAA,GAAAzgC,uBAAAygC,CAAAA,iFAAAA,CAAAA;AAAAA,kFAAAA,GAAAA,iFAAAA,CAAAA,IAAAA,EAAtB,EAAA,CAAA,8EAAA,CAAA,IAAA,EAAA,8EAAA,GAAA,iFAAA,CAAA,IAAA,EAAA;AAAA,oFACE,GADF,8EAAA,CAAA,KACE,EAAIO,8EAAJ,KAAgBO,4EAAhB,KACEP,8EAAQC,CAAAA,QADV,GACqB,CAAC,CADtB,CAAA;AADF;AAJF;AAaA,SAAsBR,4EAAAA,GAAAzgC,uBAAAygC,CAAAA,iFAAAA,CAAAA,EAAAA,iFAAAA,GAAAA,4EAAAA,CAAAA,IAAAA,EAAtB,EAAA,CAAA,iFAAA,CAAA,IAAA,EAAA,iFAAA;AAAA,gFAAA,CAAA,IAAA,EAAA;AAAA,uFAAAO,CAAAA,KACUC,CAAAA,QAAR,GAAmB,CAAnB;AADF;AAbA;AANsB;AAjF1B5lB,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAAa8lB,sIAAb,CAAA,SAAA,EAAA,CAAA,SAKM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAQT,QAAA,EAAA;AAAA,MACJ98B,qBAAO,IAAK6a,CAAAA,IAAK1F,CAAAA,YAAV,CAAuB,MAAvB,CADH;AAEV,SAAKnV,kBAAL,IAAc,IAAKi8B,CAAAA,IAAnB,IAA4B,IAAKphB,CAAAA,IAAKlD,CAAAA,WAAtC,GAMOpa,KAAMuM,CAAAA,IAAN,CACL,IAAKmyB,CAAAA,IAAKjyB,CAAAA,gBAAV,CAAmD,SAAnD,GAA6DhK,kBAA7D,GAAmD,IAAnD,CADK,CANP,GACS,CAAC,IAAK6a,CAAAA,IAAN,CADT;AAFU,CAAR,CALN,CAAA,CAAA;ACgDW,IAAA,sCAAA5L,oCAAA,CAAA,40BAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA;AAnEL2uB,8FAAUpxB,MAAA,CAAO,SAAP,CAmEL,EAlEPqxB,6FAAS,CAkEF,EA/DLC,qGAAiBzO,+HAAA,CACrB8B,mHAAA,CAAoBvC,uHAAA,CHWtBmP,QAA8B,CAC5B9gC,iBAD4B,CACrB;AAEPD,UAAeghC,oBAAf,EAAA;AAAA,QAAA,qCAAA,iBAAA,CAAA,KAAA,CAAA,IAAA,EAAAxgC,SAAA,CAAA,IAAA,IAAA;AAiBE,sCAAA,CAAA+xB,cAAA,CAAA,GAAuB,CAAA,CAAvB;AACA,sCAAA,CAAA0O,KAAA,CAAA,GAAoC,IAApC;AACA,sCAAA,CAAAC,KAAA,CAAA,GAAuB,CAAA,CAAvB;AAnBF,WAAA,kCAAA;AAAA;AAFO,MAAA3O,cAAA,EAAA0O,KAAA,EAAAC,KAAA;AAEiCtkB,qBAAA3c,CAAzB+gC,mBAAyB/gC,EAAAA,iBAAAA,CAAAA;AAItC6xB,mBAAA,CAAA,MAAA,CAAA,cAAA,CAJakP,mBAIb,CAAA,SAAA,EAAK3C,kGAAL,EAAA,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAiB,QAAA,EAAA;AACf,WAAO,IAAA,CAAKC,0GAAL,CAAP;AADe,GAAjB,CAAA,CAAA;AAIAxM,mBAAA,CAAA,MAAA,CAAA,cAAA,CARakP,mBAQb,CAAA,SAAA,EAAK3C,kGAAL,EAAA,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAgC,QAAf,CAAC36B,mBAAD,CAAe;AAC1B,QAAA,CAAK26B,kGAAL,CAAJ,KAA0B36B,mBAA1B,KAIA,IAAA,CAAK46B,0GAAL,CACA,GAD2B56B,mBAC3B,EAAA,IAAA,CAAK+6B,sGAAL,CAAA,EALA;AAD8B,GAAhC,CAAA,CAAA;AAaS,qBAAA,CAAA,SAAA,CAAA,iBAAAttB,GAAAA,QAAiB,EAAA;AACxBA,qBAAA6X,CAAAA,SAAM7X,CAAAA,iBAAAA,CAAAA,IAANA,CAAMA,IAANA,CAAA;AACA,QAAA,CAAKstB,sGAAL,CAAA,EAAA;AAFwB,GAAjBttB;AAKA,qBAAA,CAAA,SAAA,CAAA,wBAAA8U,GAAAA,QAAwB,CAC/BjjB,kBAD+B,EAE/Bue,eAF+B,EAG/B7d,mBAH+B,CAGX;AAEP,cAAb,KAAIV,kBAAJ,GACEijB,iBAAA+C,CAAAA,SAAM/C,CAAAA,wBAAAA,CAAAA,IAANA,CAAMA,IAANA,EAA+BjjB,kBAA/BijB,EAAqC1E,eAArC0E,EAA0CviB,mBAA1CuiB,CADF,IAKA,IAAK/C,CAAAA,eAAL,CAAmB,UAAnB,EAA+Bnd,MAAA,CAAOwb,IAAA,IAAAA,eAAA,GAAAA,eAAA,GAAO,CAAC,CAAf,CAA/B,CACA,EAAI,IAAA,CAAKid,0GAAL,CAAJ,KAKK,IAAK9P,CAAAA,YAAL,CAAkB,UAAlB,CAAL,GAOA,IAAA,CAAK6P,wGAAL,CAPA;AAOyB,QAAK8B,CAAAA,QAP9B,IAEE,IAAA,CAAK9B,wGAAL,CACA,GADyB,IACzB,EAAA,IAAA,CAAKE,sGAAL,CAAA,EAHF,CALA,CANA,CAAA;AAFoB,GAHbxY;AA1BI+a,qBAoDb,CAAA,SAAA,CAAAzO,cAAA,GAnCC+L,0GAmCD,EAnCmB2C,KAmCnB,GAlCC1C,wGAkCD,EAlCiB2C,KAkCjB,GAjCC1C,0GAiCD,EAACC,sGAAD,CAAA,GAAA,QAAgB,EAAA;AAAA,QACR0C,sBAAmB,IAAA,CAAK9C,kGAAL,CAAA,GAAoB,CAApB,GAAwB,CAAC,CADpC,EAEW,wBAFX,EAER+C,sBAAmB,IAAA,KAAA,wBAAA,GAAA,IAAA,CAAK7C,wGAAL,CAAA,IAAA,wBAAA,GAA0B4C,mBAFrC;AAId,QAAA,CAAK3C,0GAAL,CAAA,GAA2B,CAAA,CAA3B;AACA,QAAK6B,CAAAA,QAAL,GAAgBe,mBAAhB;AACA,QAAA,CAAK5C,0GAAL,CAAA,GAA2B,CAAA,CAA3B;AANc,GAAhB;AAlDQlO,yEAAA,CAAA,CADPvE,kHAAA,CAAS,CAAClJ,aAAY,CAAA,CAAb,CAAT,CACO,EADqB0N,uEAAA,CAAA,aAAA,EAAAxqB,MAAA,CACrB,CAAA,EADqBi7B,mBAAAlhC,CAAAA,SACrB,EADqB,UACrB,EADqB,IAAA,EACrB,CAAA;AA4DV,SAAOkhC,mBAAP;AAhEO,CGZmC,CAAe3Y,wGAAf,CAAtB,CAApB,CADqB,CA+DZ;AAZTroB,QAAA,yFAAA,EAAA;AACE,MAAA,qCAAA,kGAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,IAAA;AArCe,oCAAA6gC,CAAAA,QAAA,GAAS,QAAT,GAAkB,EAAEA,0FAApB;AAoBjB,oCAAA,CAAAtO,2FAAA,CAAA,GAAY,CAAA,CAAZ;AAM2B,oCAAAyC,CAAAA,QAAA,GAAW,CAAA,CAAX;AAKf,oCAAAtxB,CAAAA,KAAA,GAAQ,IAAR;AAGK,oCAAA29B,CAAAA,qBAAA,GAAsB,IAAId,sIAAJ,CAA8B,kCAA9B,CAAtB;AAIV/a,2CAAL,CAAAA,kCAAA,EAAmB,kCAAK6b,CAAAA,qBAAxB,CAAA;AAEE,oCAAA,CAAK3P,0GAAL,CAAgB4P,CAAAA,IAAhB,GAAuB,OAAvB;AACA,oCAAK5jB,CAAAA,gBAAL,CAAsB,OAAtB,EAA+B,kCAAK4Z,CAAAA,aAAYpI,CAAAA,IAAjB,CAAsB,kCAAtB,CAA/B,CAAA;AACA,oCAAKxR,CAAAA,gBAAL,CAAsB,SAAtB,EAAiC,kCAAK6jB,CAAAA,eAAcrS,CAAAA,IAAnB,CAAwB,kCAAxB,CAAjC,CAAA;AANJ,SAAA,kCAAA;AAAA;AAvCyBtS,mBAAAkkB,CAAdU,wFAAcV,EAAAA,kGAAAA,CAAAA;AAiDNU,wFAAA,CAAA,SAAA,CAAA,QAAAxjB,GAAAA,QAAM,EAAA;AAEvB,SAAOuY,4FAAA,CAAA,mCAAA,EACmB/I,4GAAA,CAFVgJ,CAAC,QAAW,IAAKzB,CAAAA,OAAjByB,CAEU,CADnB,EAIU,IAJV,EAKW,IAAKpF,CAAAA,QALhB,EAMyC,IANzC,EAQW,IAAKyP,CAAAA,QARhB,EAiBc,IAAKA,CAAAA,QAjBnB,EAyBU,IAAK9L,CAAAA,OAzBf,EA0BQ,IAAKrxB,CAAAA,KA1Bb,EA2BW,IAAK0tB,CAAAA,QA3BhB,CAAP;AAFuB,CAANpT;AAkCAwjB,wFAAA,CAAA,SAAA,CAAA,SAAA5Z,GAAAA,QAAO,EAAA;AACxB,MAAA,CAAK8J,0GAAL,CAAgB+P,CAAAA,WAAhB,GAA8B3+B,MAAA,CAAO,IAAKiyB,CAAAA,OAAZ,CAA9B;AADwB,CAAPnN;AAIL4Z,wFAAA,CAAA,SAAA,CAAA,aAAAlK,GAAAA,QAAW,CAAC1Z,kBAAD,CAAa;AAAA,MAAA,iCAAA,IAAA;AAAA,SAAA5b,8CAAA,CAAA,QAAA,CAAA,yCAAA,CAAA;AAAA,QAAA,CAAA,IAAA,yCAAA,CAAA,GAAA;AACpC,aAAI,8BAAKovB,CAAAA,QAAT,GACE,yCAAA,CAAA,MAAA,EADF,GAKA,iCAAA,CAAA,yCAAA,EAAM,CAAN,EAAA,CAAA,CALA;AADoC;AAOpC,QAAIxT,kBAAM8jB,CAAAA,gBAAV;AACE,aAAA,yCAAA,CAAA,MAAA,EAAA;AADF;AAIIzQ,8HAAA,CAAkBrT,kBAAlB,CAAJ,IACE,8BAAK4d,CAAAA,KAAL,EADF;AAKA,kCAAKzG,CAAAA,OAAL,GAAe,CAAA,CAAf;AACA,kCAAK3E,CAAAA,aAAL,CAAmB,IAAIC,KAAJ,CAAU,QAAV,EAAoB,CAACqL,QAAS,CAAA,CAAV,CAApB,CAAnB,CAAA;AACA,kCAAKtL,CAAAA,aAAL,CACE,IAAIuR,UAAJ,CAAe,OAAf,EAAwB,CAACjG,QAAS,CAAA,CAAV,EAAgBS,SAAU,CAAA,CAA1B,CAAxB,CADF,CAAA;AAlBoC,6C3FkPjC,CAAA,GAAL,GAAmB,CAAnB;A2FlPsC,GAAA,CAAA;AAAA,CAAxB7E;AAuBAkK,wFAAA,CAAA,SAAA,CAAA,eAAAD,GAAAA,QAAa,CAAC3jB,kBAAD,CAAqB;AAAA,MAAA,iCAAA,IAAA;AAAA,SAAA5b,8CAAA,CAAA,QAAA,CAAA,yCAAA,CAAA;AAAA,QAAA,CAAA,IAAA,yCAAA,CAAA,GAAA;AAE9C,aAAA,iCAAA,CAAA,yCAAA,EAAM,CAAN,EAAA,CAAA,CAAA;AAF8C;AAG9C,QAAkB,GAAlB,KAAI4b,kBAAM3c,CAAAA,GAAV,IAAyB2c,kBAAM8jB,CAAAA,gBAA/B;AACE,aAAA,yCAAA,CAAA,MAAA,EAAA;AADF;AAIA,kCAAKE,CAAAA,KAAL,EAAA;AAP8C,6C3F2N3C,CAAA,GAAL,GAAmB,CAAnB;A2F3NgD,GAAA,CAAA;AAAA,CAAlCL;AA9GHC,wFA4HF,CAAA,SAAA,CAACvN,2GAAD,CAAA,GAAA,QAAc,EAAA;AACrB,SAAO,IAAKc,CAAAA,OAAL,GAAe,IAAKrxB,CAAAA,KAApB,GAA4B,IAAnC;AADqB,CAAd;AA5HE89B,wFAgIF,CAAA,SAAA,CAACtN,2GAAD,CAAA,GAAA,QAAc,EAAA;AACrB,SAAOpxB,MAAA,CAAO,IAAKiyB,CAAAA,OAAZ,CAAP;AADqB,CAAd;AAIAyM,wFAAA,CAAA,SAAA,CAAA,iBAAAlF,GAAAA,QAAiB,EAAA;AAGxB,MAAKvH,CAAAA,OAAL,GAAe,IAAKrG,CAAAA,YAAL,CAAkB,SAAlB,CAAf;AAHwB,CAAjB4N;AAMAkF,wFAAA,CAAA,SAAA,CAAA,wBAAAjF,GAAAA,QAAwB,CAAC5Z,kBAAD,CAAc;AAC7C,MAAKoS,CAAAA,OAAL,GAAyB,MAAzB,KAAepS,kBAAf;AAD6C,CAAtC4Z;AA1IEiF,wFA8IX,CAAA,SAAA,CAACxP,oHAAD,CAAA,GAAA,QAAiB,EAAA;AAAA,MAAA,+BAAA,IAAA;AACf,SAAO,IAAI0M,wHAAJ,CAAmB,QAAA,EAAK;AAC7B,WAAK,4BAAK2C,CAAAA,qBAAV,GAMO,4BAAKA,CAAAA,qBAAoBvB,CAAAA,QANhC,GAGS,CAAC,4BAAD,CAHT;AAD6B,GAAxB,CAAP;AADe,CAAjB;AA9IW0B,wFA0JX,CAAA,SAAA,CAACvP,sHAAD,CAAA,GAAA,QAAmB,EAAA;AACjB,SAAO,IAAKhkB,CAAAA,WAAZ;AADiB,CAAnB;AA1JFwM,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAAa+mB,wFAAb,CAAA,SAAA,EAAA,CAAA,QASM,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAOzM,QAAA,EAAA;AACT,SAAO,IAAA,CAAK6L,2FAAL,CAAP;AADS,CAAP,EAGA,IAAwB7L,QAAjB,CAACA,uFAAD,CAAiB;AAAA,MACpB8M,gBAAa,IAAK9M,CAAAA,OADE;AAEtB8M,eAAJ,KAAmB9M,uFAAnB,KAIA,IAAA,CAAK6L,2FAAL,CDqCA,GCrCgB7L,uFDqChB,ECpCA,IAAK7R,CAAAA,eAAL,CAAmB,SAAnB,EAA8B2e,aAA9B,CDoCA,ECnCKR,uFDmCL,GCnCAA,IAAKA,CAAAA,qBDmCL,EAAK,uFAAKxjB,CAAAA,IAAKkX,CAAAA,OAAf;GAIKyL,2CAAL,CAAAA,uFAAA,CACA,EAAKpB,4CAAL,CAAAA,uFAAA,CALA,CCzCA;AAF0B,CAHxB,CATN,CAAA,CAAA;AAQE9O,uEAAA,CAAA,CAACvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,CAAT,CAAD,EAA0BoP,uEAAA,CAAA,aAAA,EAAApP,OAAA,CAA1B,EAA0BoP,uEAAA,CAAA,mBAAA,EAAA,CAAApP,OAAA,CAAA,CAA1B,CAAA,EAA0BqgB,wFAAA1hC,CAAAA,SAA1B;AAA0B,SAA1B,EAA0B,IAA1B,CAAA;AAqB2BwwB,uEAAA,CAAA,CAA1BvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,CAAT,CAA0B,EAADoP,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAADmgC,wFAAA1hC,CAAAA,SAAC,EAAD,UAAC,EAAD,IAAA,EAAC,CAAA;AAKfwwB,uEAAA,CAAA,CAAXvE,kHAAA,EAAW,EAADwE,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAADmgC,wFAAA1hC,CAAAA,SAAC,EAAD,OAAC,EAAD,IAAA,EAAC,CAAA;AAE0BwwB,uEAAA,CAAA,CAArChE,4GAAA,CAAM,YAAN,CAAqC,EAAlBiE,uEAAA,CAAA,aAAA,EAA8Bvd,WAA9B,CAAkB,CAAA,EAAuBwuB,wFAAA1hC,CAAAA,SAAvB,EAAuB,aAAvB,EAAuB,IAAA,EAAvB,CAAA;AClDjC,QAAA,gGAAA,EAAA;AAAA,SAAAgiC,wFAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AAAA;AAAsBllB,mBAAAmlB,CAAtBA,+FAAsBA,EAAAP,wFAAAO,CAAAA;AAAtB,IAAAC,oFAAA,+FAAA;AACWC,iFAAAh1B,CAAAA,QAAA,GAA8B,CAACmxB,kGAAD,CAA9B;AADL4D,iFAAA,GAAO1R,uEAAA,CAAA,CADnBM,8HAAA,CAAc,UAAd,CACmB,CAAA,EAAPoR,iFAAO,CAAP;ArCUF,IAAA,sCAAA/vB,oCAAA,CAAA,soEAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA;AAfTjS,QAAA,8GAAA,EAAA;AACE,MAAA,qCYnBuCkiC,wGZmBvC,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,IAAA;AAPyB,oCAAAC,CAAAA,SAAA,GAAY,CAAA,CAAZ;AACA,oCAAAC,CAAAA,cAAA,GAAiB,CAAA,CAAjB;AACA,oCAAAC,CAAAA,eAAA,GAAkB,CAAA,CAAlB;AACA,oCAAAC,CAAAA,wBAAA,GAA2B,CAAA,CAA3B;AACA,oCAAAC,CAAAA,mBAAA,GAAsB,CAAA,CAAtB;AAKpBC,8CAAL,CAAAA,kCAAA,CAAA;AAHF,SAAA,kCAAA;AAAA;AATiC5lB,mBAAAhL,CAA5BA,6GAA4BA,EAAAyW,wGAAAzW,CAAAA;AAA5BA,6GLy2BsC,CAAA,mBAAA,GiBl3BF0W,wGjBk3BE,CAAA,mBAAA;AKz2BtC1W,6GL2jB4C,CAAA,eAAA,GiBpkBR2W,wGjBokBQ,CAAA,eAAA;AK3jB5C3W,6GLu5BU,CAAA,4BAAA,GiBh6B0B4W,wGjBg6B1B,CAAA,4BAAA;AKv5BV5W,6GLy3BY,CAAA,gBAAA,GiBl4BwB6W,wGjBk4BxB,CAAA,gBAAA;AKz3BZ7W,6GLmwBU,CAAA,WAAA,GiB5wB0B8W,wGjB4wB1B,CAAA,WAAA;AKnwBV9W,6GLivBE,CAAA,oBAAA,GiB1vBkC+W,wGjB0vBlC,CAAA,oBAAA;AKjvBF/W,6GLurBY,CAAA,uBAAA,GiBhsBwBgX,wGjBgsBxB,CAAA,uBAAA;AKvrBZhX,6GLqoBE,CAAA,gBAAA,GiB9oBkCiX,wGjB8oBlC,CAAA,gBAAA;AKroBFjX,6GLofE,CAAA,gBAAA,GiB7fkCkX,wGjB6flC,CAAA,gBAAA;AKpfFlX,6GJmTW,CAAA,UAAA,GgB5TyBsX,wGhB4TzB,CAAA,UAAA;AIpSP,6GAAA,CAAA,SAAA,CAAA,QAAAlL,GAAAA,QAAM,EAAA;AACb2L,uHAAA,EAAA;AAIA,SAAY8Y,wCAAL,CAAAA,IAAA,CAAP;AALa,CAANzkB;AAQDykB,QAAA,yCAAY,CAAZA,6CAAY,CAAA;AAClB,SAAOlM,4FAAA,CAAA,mCAAA,EAEDt0B,MAAOqoB,CAAAA,IAAKoY,CAAAA,UAAZ,CAAuB,eAAvB,CAFC,EASY,QAAA,EAAa;AACtB53B,6GAAA,ClB9CG63B,gBkB8CH,EAAgD,CAAA,CAAhD,CAAA;AADsB,GATzB,EAYa,CAAC,6CAAKP,CAAAA,cAZnB,EAac,6CAAKD,CAAAA,SAbnB,EAeGlgC,MAAOqoB,CAAAA,IAAKoY,CAAAA,UAAZ,CAAuB,mBAAvB,CAfH,EAsBY,QAAA,EAAa;AACtB53B,6GAAA,ClB3DG63B,gBkB2DH,EAAgD,CAAA,CAAhD,CAAA;AADsB,GAtBzB,EAyBa,6CAAKP,CAAAA,cAzBlB,EA0Bc,6CAAKD,CAAAA,SA1BnB,EA4BGlgC,MAAOqoB,CAAAA,IAAKoY,CAAAA,UAAZ,CAAuB,oBAAvB,CA5BH,EAkCDzgC,MAAOqoB,CAAAA,IAAKoY,CAAAA,UAAZ,CAAuB,kBAAvB,CAlCC,EAyCY,QAAA,CAAC79B,cAAD,CAAa;AACtBiG,6GAAA,ClB7EM83B,kBkB6EN,EAEE,CAAE/9B,cAAE7D,CAAAA,MAAsB+zB,CAAAA,OAF5B,CAAA;AADsB,GAzCzB,EA+Ca,6CAAKsN,CAAAA,eA/ClB,EAgDc,6CAAKF,CAAAA,SAhDnB,EAmDKlgC,MAAOqoB,CAAAA,IAAKoY,CAAAA,UAAZ,CAAuB,gBAAvB,CAnDL,EAqDQzgC,MAAOqoB,CAAAA,IAAKoY,CAAAA,UAAZ,CAAuB,oBAAvB,CArDR,EA4DY,QAAA,CAAC79B,cAAD,CAAa;AACtBiG,6GAAA,ClB/FgB+3B,2BkB+FhB,EAEE,CAAEh+B,cAAE7D,CAAAA,MAAsB+zB,CAAAA,OAF5B,CAAA;AADsB,GA5DzB,EAkEa,6CAAKuN,CAAAA,wBAlElB,EAmEc,6CAAKH,CAAAA,SAnEnB,EAsEKlgC,MAAOqoB,CAAAA,IAAKoY,CAAAA,UAAZ,CAAuB,eAAvB,CAtEL,EAwEQzgC,MAAOqoB,CAAAA,IAAKoY,CAAAA,UAAZ,CAAuB,mBAAvB,CAxER,EA+EY,QAAA,CAAC79B,cAAD,CAAa;AACtBiG,6GAAA,ClBjHWg4B,sBkBiHX,EAEE,CAAEj+B,cAAE7D,CAAAA,MAAsB+zB,CAAAA,OAF5B,CAAA;AADsB,GA/EzB,EAqFa,6CAAKwN,CAAAA,mBArFlB,EAsFc,6CAAKJ,CAAAA,SAtFnB,EAyFKlgC,MAAOqoB,CAAAA,IAAKoY,CAAAA,UAAZ,CAAuB,oBAAvB,CAzFL,EA2FQzgC,MAAOqoB,CAAAA,IAAKoY,CAAAA,UAAZ,CAAuB,wBAAvB,CA3FR,CAAP;AADkB;AAmGNF,QAAA,6CAAgB,CAAhBA,iDAAgB,CAAA;AAAAxgC,gDAAA,CAAA,QAAA,CAAA,0CAAA,CAAA;AAAA,QAAA,CAAA,IAAA,0CAAA,CAAA,GAAA;AAC5B,aAAA,iCAAA,CAAA,0CAAA,EAAW+gC,4CAAL,CADsBA,iDACtB,CAAN,EAAA,CAAA,CAAA;AAD4B;AAAA,qDAEvBZ,CAAAA,SAAL,GAAiB,CAAA,CAAjB;AAF4B,qDAGvBjf,CAAAA,eAAL,EAAA;AAH4B,8CvD2OzB,CAAA,GAAL,GAAmB,CAAnB;AuD3O8B,GAAA,CAAA;AAAA;AAMhB6f,QAAA,6CAAgB,CAAhBA,iDAAgB,CAAA;AAAA,MACtBC,iBADsB;AAAA,SAAAhhC,8CAAA,CAAA,QAAA,CAAA,0CAAA,CAAA;AAAA,QAAA,CAAA,IAAA,0CAAA,CAAA,GAAA;AACS,aAAA,iCAAA,CAAA,0CAAA,EAAMuI,wGAAA,EAAN,EAAA,CAAA,CAAA;AADT;AACtBy4B,qBAAAA,GAA+B,0CAAA,CAAA,GAA/BA;AADsB,qDAGvBZ,CAAAA,cAAL,GAAsBY,iBAAA,CAAA,cAAtB;AAH4B,qDAKvBX,CAAAA,eAAL,GAAuB,CAACW,iBAAA,CAAA,gBAAxB;AAL4B,qDAMvBV,CAAAA,wBAAL,GACE,CAACU,iBAAA,CAAA,yBADH;AAN4B,qDAQvBT,CAAAA,mBAAL,GACE,CAACS,iBAAA,CAAA,oBADH;AAR4B,8CvDqOzB,CAAA,GAAL,GAAmB,CAAnB;AuDrO8B,GAAA,CAAA;AAAA;AAhIzB,IAAAC,wGAAA,6GAAA;AACWC,qGAAAj2B,CAAAA,QAAA,GAAyB,CAACoc,oGAAD,CAAzB;AAEWiH,uEAAA,CAAA,CAA1BvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,CAAT,CAA0B,EAADoP,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAAD4hC,qGAAAnjC,CAAAA,SAAC,EAAD,WAAC,EAAD,IAAA,EAAC,CAAA;AACAwwB,uEAAA,CAAA,CAA1BvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,CAAT,CAA0B,EAADoP,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAAD4hC,qGAAAnjC,CAAAA,SAAC,EAAD,gBAAC,EAAD,IAAA,EAAC,CAAA;AACAwwB,uEAAA,CAAA,CAA1BvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,CAAT,CAA0B,EAADoP,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAAD4hC,qGAAAnjC,CAAAA,SAAC,EAAD,iBAAC,EAAD,IAAA,EAAC,CAAA;AACAwwB,uEAAA,CAAA,CAA1BvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,CAAT,CAA0B,EAADoP,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAAD4hC,qGAAAnjC,CAAAA,SAAC,EAAD,0BAAC,EAAD,IAAA,EAAC,CAAA;AACAwwB,uEAAA,CAAA,CAA1BvE,kHAAA,CAAS,CAAC1Z,KAAM8O,OAAP,CAAT,CAA0B,EAADoP,uEAAA,CAAA,aAAA,EAAAlvB,MAAA,CAAC,CAAA,EAAD4hC,qGAAAnjC,CAAAA,SAAC,EAAD,qBAAC,EAAD,IAAA,EAAC,CAAA;AAPhBmjC,qGAAA,GAAa3S,uEAAA,CAAA,CADzBM,8HAAA,CAAc,iBAAd,CACyB,EADOL,uEAAA,CAAA,mBAAA,EAAA,EAAA,CACP,CAAA,EAAb0S,qGAAa,CAAb;;",
"sources":["blaze-out/k8-opt/bin/cultural/integrations/chromeextensions/arttab/options/js_options.nodeps.jstrimmer_bootstrap.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/util/arrayiterator.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/util/defineproperty.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/util/global.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/util/polyfill.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/symbol.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/util/createtemplatetagfirstarg.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/util/makeiterator.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/util/arrayfromiterable.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/util/arrayfromiterator.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/util/owns.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/util/assign.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/object/assign.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/util/objectcreate.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/util/construct.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/util/setprototypeof.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/util/inherits.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/generator_engine.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/execute_async_generator.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/util/restarguments.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/reflect/reflect.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/reflect/construct.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/reflect/setprototypeof.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/promise/promise.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/object/setprototypeof.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/weakmap.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/map.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/util/checkstringargs.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/string/endswith.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/util/iteratorfromarray.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/array/keys.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/string/startswith.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/number/isfinite.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/set.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/array/from.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/object/is.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/array/includes.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/string/includes.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/array/values.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/array/fill.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/typedarray/fill.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/array/flat.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/es6/array/find.js","third_party/java_src/jscomp/java/com/google/javascript/jscomp/js/util/findinternal.js","javascript/closure/base.js","third_party/javascript/tslib/tslib_closure.js","cultural/integrations/chromeextensions/shared/storage/storage.ts","third_party/javascript/closure/debug/error.js","third_party/javascript/closure/asserts/asserts.js","third_party/javascript/closure/html/trustedtypes.js","third_party/javascript/closure/html/trustedresourceurl.js","third_party/javascript/closure/html/safehtml.js","third_party/javascript/closure/string/string.js","third_party/javascript/closure/date/date.js","cultural/integrations/chromeextensions/arttab/newtab/settings.ts","third_party/javascript/closure/object/object.js","third_party/javascript/lit/packages/lit-html/src/polyfill-support.ts","third_party/javascript/lit/packages/reactive-element/src/polyfill-support.ts","third_party/javascript/lit/packages/lit-element/src/polyfill-support.ts","third_party/javascript/lit/packages/lit-html/src/internal-security.ts","third_party/javascript/safevalues/internals/resource_url_impl.ts","third_party/javascript/safevalues/builders/resource_url_builders.ts","third_party/javascript/safevalues/internals/html_impl.ts","third_party/javascript/lit/packages/lit-html/src/lit-html.ts","third_party/javascript/lit/packages/reactive-element/src/css-tag.ts","third_party/javascript/custom_elements/src/native-shim-impl.js","javascript/polymer/detect_transpilation/detect_transpilation.ts","third_party/javascript/lit/packages/reactive-element/src/reactive-element.ts","third_party/javascript/lit/packages/lit-element/src/lit-element.ts","blaze-out/k8-opt/bin/third_party/javascript/lit/packages/reactive-element/src/index.closure.js","../genfiles/cultural/integrations/chromeextensions/arttab/options/options.css.ts","cultural/integrations/chromeextensions/shared/analytics/analytics.ts","cultural/integrations/chromeextensions/arttab/options/options.ts","third_party/javascript/lit/packages/reactive-element/src/decorators/custom-element.ts","third_party/javascript/lit/packages/reactive-element/src/decorators/property.ts","third_party/javascript/lit/packages/reactive-element/src/decorators/base.ts","third_party/javascript/lit/packages/reactive-element/src/decorators/query.ts","third_party/javascript/lit/packages/reactive-element/src/decorators/state.ts","../genfiles/third_party/javascript/material/web/checkbox/internal/checkbox-styles.ts","third_party/javascript/lit/packages/lit-html/src/directive.ts","third_party/javascript/lit/packages/lit-html/src/directives/class-map.ts","../genfiles/third_party/javascript/material/web/focus/internal/focus-ring-styles.ts","third_party/javascript/material/web/internal/controller/attachable-controller.ts","third_party/javascript/material/web/focus/internal/focus-ring.ts","third_party/javascript/lit/packages/lit/src/index.ts","third_party/javascript/material/web/focus/md-focus-ring.ts","third_party/javascript/material/web/internal/aria/aria.ts","third_party/javascript/material/web/internal/events/form-label-activation.ts","third_party/javascript/material/web/labs/behaviors/element-internals.ts","third_party/javascript/material/web/labs/behaviors/constraint-validation.ts","third_party/javascript/material/web/labs/behaviors/validators/validator.ts","third_party/javascript/material/web/labs/behaviors/form-associated.ts","third_party/javascript/material/web/labs/behaviors/validators/checkbox-validator.ts","../genfiles/third_party/javascript/material/web/ripple/internal/ripple-styles.ts","third_party/javascript/material/web/ripple/internal/ripple.ts","third_party/javascript/material/web/internal/motion/animation.ts","third_party/javascript/material/web/ripple/ripple.ts","third_party/javascript/material/web/checkbox/internal/checkbox.ts","third_party/javascript/material/web/internal/events/redispatch-event.ts","third_party/javascript/material/web/internal/aria/delegate.ts","third_party/javascript/material/web/checkbox/checkbox.ts","../genfiles/third_party/javascript/material/web/divider/internal/divider-styles.ts","third_party/javascript/material/web/divider/internal/divider.ts","third_party/javascript/material/web/divider/divider.ts","../genfiles/third_party/javascript/material/web/radio/internal/radio-styles.ts","third_party/javascript/material/web/labs/behaviors/focusable.ts","third_party/javascript/material/web/labs/behaviors/validators/radio-validator.ts","third_party/javascript/material/web/radio/internal/single-selection-controller.ts","third_party/javascript/material/web/radio/internal/radio.ts","third_party/javascript/material/web/radio/radio.ts"],
"sourcesContent":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Bootstrap for the Google JS Library (Closure).\n *\n * Avoid including base.js more than once. This is strictly discouraged and not\n * supported. goog.require(...) won't work properly in that case.\n *\n * @suppress {deprecated} Users cannot remove deprecated uses here.\n * @provideGoog\n */\n\n\n/**\n * @define {boolean} Overridden to true by the compiler.\n */\nvar COMPILED = false;\n\n\n/**\n * Base namespace for the Closure library.  Checks to see goog is already\n * defined in the current scope before assigning to prevent clobbering if\n * base.js is loaded more than once.\n *\n * @const\n */\nvar goog = goog || {};\n\n/**\n * Reference to the global object.\n * https://www.ecma-international.org/ecma-262/9.0/index.html#sec-global-object\n *\n * More info on this implementation here:\n * https://docs.google.com/document/d/1NAeW4Wk7I7FV0Y2tcUFvQdGMc89k2vdgSXInw8_nvCI/edit\n *\n * @const\n * @suppress {undefinedVars} self won't be referenced unless `this` is falsy.\n * @type {!Global}\n */\ngoog.global =\n    // Check `this` first for backwards compatibility.\n    // Valid unless running as an ES module or in a function wrapper called\n    //   without setting `this` properly.\n    // Note that base.js can't usefully be imported as an ES module, but it may\n    // be compiled into bundles that are loadable as ES modules.\n    this ||\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n    // For in-page browser environments and workers.\n    self;\n\n\n/**\n * A hook for overriding the define values in uncompiled mode.\n *\n * In uncompiled mode, `CLOSURE_UNCOMPILED_DEFINES` may be defined before\n * loading base.js.  If a key is defined in `CLOSURE_UNCOMPILED_DEFINES`,\n * `goog.define` will use the value instead of the default value.  This\n * allows flags to be overwritten without compilation (this is normally\n * accomplished with the compiler's \"define\" flag).\n *\n * Example:\n * <pre>\n *   var CLOSURE_UNCOMPILED_DEFINES = {'goog.DEBUG': false};\n * </pre>\n *\n * @type {Object<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_UNCOMPILED_DEFINES;\n\n\n/**\n * A hook for overriding the define values in uncompiled or compiled mode,\n * like CLOSURE_UNCOMPILED_DEFINES but effective in compiled code.  In\n * uncompiled code CLOSURE_UNCOMPILED_DEFINES takes precedence.\n *\n * Also unlike CLOSURE_UNCOMPILED_DEFINES the values must be number, boolean or\n * string literals or the compiler will emit an error.\n *\n * While any @define value may be set, only those set with goog.define will be\n * effective for uncompiled code.\n *\n * Example:\n * <pre>\n *   var CLOSURE_DEFINES = {'goog.DEBUG': false} ;\n * </pre>\n *\n * Currently the Closure Compiler will only recognize very simple definitions of\n * this value when looking for values to apply to compiled code and ignore all\n * other references.  Specifically, it looks the value defined at the variable\n * declaration, as with the example above.\n *\n * TODO(b/202066289): Improve the recognized definitions.\n *\n * @type {!Object<string, (string|number|boolean)>|null|undefined}\n */\ngoog.global.CLOSURE_DEFINES;\n\n\n/**\n * Builds an object structure for the provided namespace path, ensuring that\n * names that already exist are not overwritten. For example:\n * \"a.b.c\" -> a = {};a.b={};a.b.c={};\n * Used by goog.provide and goog.exportSymbol.\n * @param {string} name The name of the object that this file defines.\n * @param {*=} object The object to expose at the end of the path.\n * @param {boolean=} overwriteImplicit If object is set and a previous call\n *     implicitly constructed the namespace given by name, this parameter\n *     controls whether object should overwrite the implicitly constructed\n *     namespace or be merged into it. Defaults to false.\n * @param {?Object=} objectToExportTo The object to add the path to; if this\n *     field is not specified, its value defaults to `goog.global`.\n * @private\n */\ngoog.exportPath_ = function(name, object, overwriteImplicit, objectToExportTo) {\n  var parts = name.split('.');\n  var cur = objectToExportTo || goog.global;\n\n  // Internet Explorer exhibits strange behavior when throwing errors from\n  // methods externed in this manner.  See the testExportSymbolExceptions in\n  // base_test.html for an example.\n  if (!(parts[0] in cur) && typeof cur.execScript != 'undefined') {\n    cur.execScript('var ' + parts[0]);\n  }\n\n  for (var part; parts.length && (part = parts.shift());) {\n    if (!parts.length && object !== undefined) {\n      if (!overwriteImplicit && goog.isObject(object) &&\n          goog.isObject(cur[part])) {\n        // Merge properties on object (the input parameter) with the existing\n        // implicitly defined namespace, so as to not clobber previously\n        // defined child namespaces.\n        for (var prop in object) {\n          if (object.hasOwnProperty(prop)) {\n            cur[part][prop] = object[prop];\n          }\n        }\n      } else {\n        // Either there is no existing implicit namespace, or overwriteImplicit\n        // is set to true, so directly assign object (the input parameter) to\n        // the namespace.\n        cur[part] = object;\n      }\n    } else if (cur[part] && cur[part] !== Object.prototype[part]) {\n      cur = cur[part];\n    } else {\n      cur = cur[part] = {};\n    }\n  }\n};\n\n\n/**\n * Defines a named value. In uncompiled mode, the value is retrieved from\n * CLOSURE_DEFINES or CLOSURE_UNCOMPILED_DEFINES if the object is defined and\n * has the property specified, and otherwise used the defined defaultValue.\n * When compiled the default can be overridden using the compiler options or the\n * value set in the CLOSURE_DEFINES object. Returns the defined value so that it\n * can be used safely in modules. Note that the value type MUST be either\n * boolean, number, or string.\n *\n * @param {string} name The distinguished name to provide.\n * @param {T} defaultValue\n * @return {T} The defined value.\n * @template T\n */\ngoog.define = function(name, defaultValue) {\n  var value = defaultValue;\n  if (!COMPILED) {\n    var uncompiledDefines = goog.global.CLOSURE_UNCOMPILED_DEFINES;\n    var defines = goog.global.CLOSURE_DEFINES;\n    if (uncompiledDefines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (uncompiledDefines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(uncompiledDefines, name)) {\n      value = uncompiledDefines[name];\n    } else if (\n        defines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (defines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(defines, name)) {\n      value = defines[name];\n    }\n  }\n  return value;\n};\n\n\n/**\n * @define {number} Integer year indicating the set of browser features that are\n * guaranteed to be present.  This is defined to include exactly features that\n * work correctly on all \"modern\" browsers that are stable on January 1 of the\n * specified year.  For example,\n * ```js\n * if (goog.FEATURESET_YEAR >= 2019) {\n *   // use APIs known to be available on all major stable browsers Jan 1, 2019\n * } else {\n *   // polyfill for older browsers\n * }\n * ```\n * This is intended to be the primary define for removing\n * unnecessary browser compatibility code (such as ponyfills and workarounds),\n * and should inform the default value for most other defines:\n * ```js\n * const ASSUME_NATIVE_PROMISE =\n *     goog.define('ASSUME_NATIVE_PROMISE', goog.FEATURESET_YEAR >= 2016);\n * ```\n *\n * The default assumption is that IE9 is the lowest supported browser, which was\n * first available Jan 1, 2012.\n *\n * TODO(mathiasb): Reference more thorough documentation when it's available.\n */\ngoog.FEATURESET_YEAR = goog.define('goog.FEATURESET_YEAR', 2012);\n\n\n/**\n * @define {boolean} DEBUG is provided as a convenience so that debugging code\n * that should not be included in a production. It can be easily stripped\n * by specifying --define goog.DEBUG=false to the Closure Compiler aka\n * JSCompiler. For example, most toString() methods should be declared inside an\n * \"if (goog.DEBUG)\" conditional because they are generally used for debugging\n * purposes and it is difficult for the JSCompiler to statically determine\n * whether they are used.\n */\ngoog.DEBUG = goog.define('goog.DEBUG', true);\n\n\n/**\n * @define {string} LOCALE defines the locale being used for compilation. It is\n * used to select locale specific data to be compiled in js binary. BUILD rule\n * can specify this value by \"--define goog.LOCALE=<locale_name>\" as a compiler\n * option.\n *\n * Take into account that the locale code format is important. You should use\n * the canonical Unicode format with hyphen as a delimiter. Language must be\n * lowercase, Language Script - Capitalized, Region - UPPERCASE.\n * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.\n *\n * See more info about locale codes here:\n * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\n *\n * For language codes you should use values defined by ISO 693-1. See it here\n * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from\n * this rule: the Hebrew language. For legacy reasons the old code (iw) should\n * be used instead of the new code (he).\n *\n * MOE:begin_intracomment_strip\n * See http://g3doc/i18n/identifiers/g3doc/synonyms.\n * MOE:end_intracomment_strip\n */\ngoog.LOCALE = goog.define('goog.LOCALE', 'en');  // default to en\n\n\n/**\n * @define {boolean} Whether this code is running on trusted sites.\n *\n * On untrusted sites, several native functions can be defined or overridden by\n * external libraries like Prototype, Datejs, and JQuery and setting this flag\n * to false forces closure to use its own implementations when possible.\n *\n * If your JavaScript can be loaded by a third party site and you are wary about\n * relying on non-standard implementations, specify\n * \"--define goog.TRUSTED_SITE=false\" to the compiler.\n */\ngoog.TRUSTED_SITE = goog.define('goog.TRUSTED_SITE', true);\n\n\n/**\n * @define {boolean} Whether code that calls {@link goog.setTestOnly} should\n *     be disallowed in the compilation unit.\n */\ngoog.DISALLOW_TEST_ONLY_CODE =\n    goog.define('goog.DISALLOW_TEST_ONLY_CODE', COMPILED && !goog.DEBUG);\n\n\n/**\n * @define {boolean} Whether to use a Chrome app CSP-compliant method for\n *     loading scripts via goog.require. @see appendScriptSrcNode_.\n */\ngoog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING =\n    goog.define('goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING', false);\n\n\n// MOE:begin_strip\n/**\n * Read a flag from the runtime flags object.\n * @param {number} googFlagId Enum ordinal\n * @param {boolean} defaultValue Value to return if the flag is not given\n * @return {boolean}\n */\ngoog.readFlagInternalDoNotUseOrElse = function(googFlagId, defaultValue) {\n  var obj = goog.getObjectByName(goog.FLAGS_OBJECT_);\n  var val = obj && obj[googFlagId];\n  return val != null ? val : defaultValue;\n};\n\n\n/**\n * Name of the object to look for when looking up runtime flag values.  May be a\n * fully qualified object name (e.g. 'foo.bar').\n * @define {string}\n * @private\n */\ngoog.FLAGS_OBJECT_ = goog.define('goog.FLAGS_OBJECT', 'CLOSURE_FLAGS');\n\n\n/**\n * Default value for the STAGING flag.  Defaults to `true`, indicating that\n * flags are enabled by default once they reach the STAGING lifecycle stage.\n * Risk-averse products should set this to `false` in their production builds.\n * This is only necessary for non-Boq products because Boq Web configures this\n * via the goog.flag system by default.\n *\n * @define {boolean}\n */\ngoog.FLAGS_STAGING_DEFAULT = goog.define('goog.FLAGS_STAGING_DEFAULT', true);\n\n\n/**\n * Read a toggle's value.  This should not be called directly.  Use the\n * `toggle_provider` build rule instead.  See go/toggle-provider.\n * @param {string} name\n * @return {boolean}\n */\ngoog.readToggleInternalDoNotCallDirectly = function(name) {\n  var ordinals = typeof CLOSURE_TOGGLE_ORDINALS === 'object' ?\n      CLOSURE_TOGGLE_ORDINALS :\n      undefined;\n  var ordinal = ordinals && ordinals[name];\n  if (typeof ordinal !== 'number') return Boolean(ordinal);\n  return Boolean(\n      goog.TOGGLES_[Math.floor(ordinal / 30)] & (1 << (ordinal % 30)));\n};\n\n\n/**\n * Bootstrap variable mapping toggle names to ordinals.  This is intended to be\n * read by JSCompiler to replace goog.readToggle...() calls with direct lookups,\n * but is also used by the debug-mode version of the toggle reader.\n * @const {!Object<string, number|boolean>|undefined}\n */\ngoog.global.CLOSURE_TOGGLE_ORDINALS;\n\n\n/**\n * @define {string} Global variable to check for toggles.\n * @private\n */\ngoog.TOGGLE_VAR_ = goog.define('goog.TOGGLE_VAR', '_F_toggles');\n\n\n/** @private @const {!Array<number>} */\ngoog.TOGGLES_ = goog.global[goog.TOGGLE_VAR_] || [];\n// MOE:end_strip\n\n\n/**\n * A hook for providing an object that should be used to track the \"legacy\n * namespaces\". The legacy namespace is where symbols from `goog.provide` as\n * well as symbols from `goog.module` with `goog.module.declareLegacyNamespace`\n * are placed.\n *\n * If this isn't specified, `goog.global` will be considered the legacy\n * namespace object.\n *\n * @type {!Object|undefined}\n */\ngoog.global.CLOSURE_UNCOMPILED_LEGACY_NAMESPACE_OBJECT;\n\n\n/**\n * @type {!Object}\n * @private\n */\ngoog.LEGACY_NAMESPACE_OBJECT_ =\n    (!COMPILED &&\n     typeof CLOSURE_UNCOMPILED_LEGACY_NAMESPACE_OBJECT !== 'undefined') ?\n    CLOSURE_UNCOMPILED_LEGACY_NAMESPACE_OBJECT :\n    goog.global;\n\n\n/**\n * Defines a namespace in Closure.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * The presence of one or more goog.provide() calls in a file indicates\n * that the file defines the given objects/namespaces.\n * Provided symbols must not be null or undefined.\n *\n * In addition, goog.provide() creates the object stubs for a namespace\n * (for example, goog.provide(\"goog.foo.bar\") will create the object\n * goog.foo.bar if it does not already exist).\n *\n * Build tools also scan for provide/require/module statements\n * to discern dependencies, build dependency files (see deps.js), etc.\n *\n * @see goog.require\n * @see goog.module\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n * deprecated Use goog.module (see b/159289405)\n */\ngoog.provide = function(name) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.provide cannot be used within a module.');\n  }\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n  }\n\n  goog.constructNamespace_(name);\n};\n\n\n/**\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n * @param {?Object=} object The object to embed in the namespace.\n * @param {boolean=} overwriteImplicit If object is set and a previous call\n *     implicitly constructed the namespace given by name, this parameter\n *     controls whether opt_obj should overwrite the implicitly constructed\n *     namespace or be merged into it. Defaults to false.\n * @private\n */\ngoog.constructNamespace_ = function(name, object, overwriteImplicit) {\n  if (!COMPILED) {\n    delete goog.implicitNamespaces_[name];\n\n    var namespace = name;\n    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {\n      if (goog.getObjectByName(namespace, goog.LEGACY_NAMESPACE_OBJECT_)) {\n        break;\n      }\n      goog.implicitNamespaces_[namespace] = true;\n    }\n  }\n\n  goog.exportPath_(\n      name, object, overwriteImplicit, goog.LEGACY_NAMESPACE_OBJECT_);\n};\n\n\n/**\n * According to the CSP3 spec a nonce must be a valid base64 string.\n * @see https://www.w3.org/TR/CSP3/#grammardef-base64-value\n * @private @const\n */\ngoog.NONCE_PATTERN_ = /^[\\w+/_-]+[=]{0,2}$/;\n\n\n/**\n * Returns CSP nonce, if set for any script tag.\n * @param {?Window=} opt_window The window context used to retrieve the nonce.\n *     Defaults to global context.\n * @return {string} CSP nonce or empty string if no nonce is present.\n * @private\n */\ngoog.getScriptNonce_ = function(opt_window) {\n  var doc = (opt_window || goog.global).document;\n  var script = doc.querySelector && doc.querySelector('script[nonce]');\n  if (script) {\n    // Try to get the nonce from the IDL property first, because browsers that\n    // implement additional nonce protection features (currently only Chrome) to\n    // prevent nonce stealing via CSS do not expose the nonce via attributes.\n    // See https://github.com/whatwg/html/issues/2369\n    var nonce = script['nonce'] || script.getAttribute('nonce');\n    if (nonce && goog.NONCE_PATTERN_.test(nonce)) {\n      return nonce;\n    }\n  }\n  return '';\n};\n\n\n/**\n * Module identifier validation regexp.\n * Note: This is a conservative check, it is very possible to be more lenient,\n *   the primary exclusion here is \"/\" and \"\\\" and a leading \".\", these\n *   restrictions are intended to leave the door open for using goog.require\n *   with relative file paths rather than module identifiers.\n * @private\n */\ngoog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\n\n\n/**\n * Defines a module in Closure.\n *\n * Marks that this file must be loaded as a module and claims the namespace.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * goog.module() has three requirements:\n * - goog.module may not be used in the same file as goog.provide.\n * - goog.module must be the first statement in the file.\n * - only one goog.module is allowed per file.\n *\n * When a goog.module annotated file is loaded, it is enclosed in\n * a strict function closure. This means that:\n * - any variables declared in a goog.module file are private to the file\n * (not global), though the compiler is expected to inline the module.\n * - The code must obey all the rules of \"strict\" JavaScript.\n * - the file will be marked as \"use strict\"\n *\n * NOTE: unlike goog.provide, goog.module does not declare any symbols by\n * itself. If declared symbols are desired, use\n * goog.module.declareLegacyNamespace().\n *\n * MOE:begin_intracomment_strip\n * See the goog.module announcement at http://go/goog.module-announce\n * MOE:end_intracomment_strip\n *\n * See the public goog.module proposal: http://goo.gl/Va1hin\n *\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\", is expected but not required.\n * @return {void}\n */\ngoog.module = function(name) {\n  if (typeof name !== 'string' || !name ||\n      name.search(goog.VALID_MODULE_RE_) == -1) {\n    throw new Error('Invalid module identifier');\n  }\n  if (!goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'Module ' + name + ' has been loaded incorrectly. Note, ' +\n        'modules cannot be loaded as normal scripts. They require some kind of ' +\n        'pre-processing step. You\\'re likely trying to load a module via a ' +\n        'script tag or as a part of a concatenated bundle without rewriting the ' +\n        'module. For more info see: ' +\n        'https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.');\n  }\n  if (goog.moduleLoaderState_.moduleName) {\n    throw new Error('goog.module may only be called once per module.');\n  }\n\n  // Store the module name for the loader.\n  goog.moduleLoaderState_.moduleName = name;\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n    delete goog.implicitNamespaces_[name];\n  }\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n *\n * Note: This is not an alternative to goog.require, it does not\n * indicate a hard dependency, instead it is used to indicate\n * an optional dependency or to access the exports of a module\n * that has already been loaded.\n * @suppress {missingProvide}\n */\ngoog.module.get = function(name) {\n  return goog.module.getInternal_(name);\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n * @private\n */\ngoog.module.getInternal_ = function(name) {\n  if (!COMPILED) {\n    if (name in goog.loadedModules_) {\n      return goog.loadedModules_[name].exports;\n    } else if (!goog.implicitNamespaces_[name]) {\n      var ns = goog.getObjectByName(name, goog.LEGACY_NAMESPACE_OBJECT_);\n      return ns != null ? ns : null;\n    }\n  }\n  return null;\n};\n\n// MOE:begin_strip\n/**\n * Defines dynamic import execution path for uncompiled mode.\n *\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n *\n * NOTE: In compiled code, JsCompiler will transpile this function call.\n * DO NOT OPENSOURCE\n */\ngoog.requireDynamic = function(name) {\n  if (!COMPILED) {\n    if (!goog.importHandler_ || !goog.uncompiledChunkIdHandler_) {\n      throw new Error('Need to setup import handler and chunk id handler.');\n    }\n    return goog.importHandler_(goog.uncompiledChunkIdHandler_(name))\n        .then(function() {\n          var module = goog.module.getInternal_(name);\n          if (module == null) {\n            throw new Error('Module ' + name + ' is not loaded.');\n          }\n          return module;\n        });\n  }\n  return null;\n};\n\n\n/**\n * Handler for dynamic import.\n * DO NOT OPENSOURCE\n */\ngoog.importHandler_ = null;\n\n\n/**\n * Chunk ID calculator.\n * @private {?function(string)}\n * DO NOT OPENSOURCE\n */\ngoog.uncompiledChunkIdHandler_ = null;\n\n\n/**\n * Sets import handler.\n * @param {function(string)} fn\n * DO NOT OPENSOURCE\n */\ngoog.setImportHandlerInternalDoNotCallOrElse = function(fn) {\n  goog.importHandler_ = fn;\n};\n\n\n/**\n * Sets chunk ID calculator.\n * @param {function(string)} fn\n * NOTE: The chunk ID calculator is only used in uncompiled mode.\n * DO NOT OPENSOURCE\n */\ngoog.setUncompiledChunkIdHandlerInternalDoNotCallOrElse = function(fn) {\n  goog.uncompiledChunkIdHandler_ = fn;\n};\n\n\n/**\n * This exists purely as a hint to JsTrimmer, so that it can convert it to\n * goog.require in certain circumstances.\n *\n * @param {string} namespace\n * DO NOT OPENSOURCE\n */\ngoog.maybeRequireFrameworkInternalOnlyDoNotCallOrElse = function(namespace) {};\n// MOE:end_strip\n\n/**\n * Types of modules the debug loader can load.\n * @enum {string}\n */\ngoog.ModuleType = {\n  ES6: 'es6',\n  GOOG: 'goog'\n};\n\n\n/**\n * @private {?{\n *   moduleName: (string|undefined),\n *   declareLegacyNamespace:boolean,\n *   type: ?goog.ModuleType\n * }}\n */\ngoog.moduleLoaderState_ = null;\n\n\n/**\n * @private\n * @return {boolean} Whether a goog.module or an es6 module is currently being\n *     initialized.\n */\ngoog.isInModuleLoader_ = function() {\n  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();\n};\n\n\n/**\n * @private\n * @return {boolean} Whether a goog.module is currently being initialized.\n */\ngoog.isInGoogModuleLoader_ = function() {\n  return !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.GOOG;\n};\n\n\n/**\n * @private\n * @return {boolean} Whether an es6 module is currently being initialized.\n */\ngoog.isInEs6ModuleLoader_ = function() {\n  var inLoader = !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.ES6;\n\n  if (inLoader) {\n    return true;\n  }\n\n  var jscomp = goog.LEGACY_NAMESPACE_OBJECT_['$jscomp'];\n\n  if (jscomp) {\n    // jscomp may not have getCurrentModulePath if this is a compiled bundle\n    // that has some of the runtime, but not all of it. This can happen if\n    // optimizations are turned on so the unused runtime is removed but renaming\n    // and Closure pass are off (so $jscomp is still named $jscomp and the\n    // goog.provide/require calls still exist).\n    if (typeof jscomp.getCurrentModulePath != 'function') {\n      return false;\n    }\n\n    // Bundled ES6 module.\n    return !!jscomp.getCurrentModulePath();\n  }\n\n  return false;\n};\n\n\n/**\n * Provide the module's exports as a globally accessible object under the\n * module's declared name.  This is intended to ease migration to goog.module\n * for files that have existing usages.\n * @suppress {missingProvide}\n */\ngoog.module.declareLegacyNamespace = function() {\n  if (!COMPILED && !goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'goog.module.declareLegacyNamespace must be called from ' +\n        'within a goog.module');\n  }\n  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {\n    throw new Error(\n        'goog.module must be called prior to ' +\n        'goog.module.declareLegacyNamespace.');\n  }\n  goog.moduleLoaderState_.declareLegacyNamespace = true;\n};\n\n\n/**\n * Associates an ES6 module with a Closure module ID so that is available via\n * goog.require. The associated ID  acts like a goog.module ID - it does not\n * create any global names, it is merely available via goog.require /\n * goog.module.get / goog.forwardDeclare / goog.requireType. goog.require and\n * goog.module.get will return the entire module as if it was import *'d. This\n * allows Closure files to reference ES6 modules for the sake of migration.\n *\n * @param {string} namespace\n * @suppress {missingProvide}\n */\ngoog.declareModuleId = function(namespace) {\n  if (!COMPILED) {\n    if (!goog.isInEs6ModuleLoader_()) {\n      throw new Error(\n          'goog.declareModuleId may only be called from ' +\n          'within an ES6 module');\n    }\n    if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName) {\n      throw new Error(\n          'goog.declareModuleId may only be called once per module.');\n    }\n    if (namespace in goog.loadedModules_) {\n      throw new Error(\n          'Module with namespace \"' + namespace + '\" already exists.');\n    }\n  }\n  if (goog.moduleLoaderState_) {\n    // Not bundled - debug loading.\n    goog.moduleLoaderState_.moduleName = namespace;\n  } else {\n    // Bundled - not debug loading, no module loader state.\n    var jscomp = goog.LEGACY_NAMESPACE_OBJECT_['$jscomp'];\n    if (!jscomp || typeof jscomp.getCurrentModulePath != 'function') {\n      throw new Error(\n          'Module with namespace \"' + namespace +\n          '\" has been loaded incorrectly.');\n    }\n    var exports = jscomp.require(jscomp.getCurrentModulePath());\n    goog.loadedModules_[namespace] = {\n      exports: exports,\n      type: goog.ModuleType.ES6,\n      moduleId: namespace\n    };\n  }\n};\n\n\n/**\n * Marks that the current file should only be used for testing, and never for\n * live code in production.\n *\n * In the case of unit tests, the message may optionally be an exact namespace\n * for the test (e.g. 'goog.stringTest'). The linter will then ignore the extra\n * provide (if not explicitly defined in the code).\n *\n * @param {string=} opt_message Optional message to add to the error that's\n *     raised when used in production code.\n */\ngoog.setTestOnly = function(opt_message) {\n  if (goog.DISALLOW_TEST_ONLY_CODE) {\n    opt_message = opt_message || '';\n    throw new Error(\n        'Importing test-only code into non-debug environment' +\n        (opt_message ? ': ' + opt_message : '.'));\n  }\n};\n\n\n/**\n * Forward declares a symbol. This is an indication to the compiler that the\n * symbol may be used in the source yet is not required and may not be provided\n * in compilation.\n *\n * The most common usage of forward declaration is code that takes a type as a\n * function parameter but does not need to require it. By forward declaring\n * instead of requiring, no hard dependency is made, and (if not required\n * elsewhere) the namespace may never be required and thus, not be pulled\n * into the JavaScript binary. If it is required elsewhere, it will be type\n * checked as normal.\n *\n * Before using goog.forwardDeclare, please read the documentation at\n * https://github.com/google/closure-compiler/wiki/Bad-Type-Annotation to\n * understand the options and tradeoffs when working with forward declarations.\n *\n * @param {string} name The namespace to forward declare in the form of\n *     \"goog.package.part\".\n * @deprecated See go/noforwarddeclaration, Use `goog.requireType` instead.\n */\ngoog.forwardDeclare = function(name) {};\n\nif (!COMPILED) {\n  /**\n   * Check if the given name has been goog.provided. This will return false for\n   * names that are available only as implicit namespaces.\n   * @param {string} name name of the object to look for.\n   * @return {boolean} Whether the name has been provided.\n   * @private\n   */\n  goog.isProvided_ = function(name) {\n    return (name in goog.loadedModules_) ||\n        (!goog.implicitNamespaces_[name] &&\n         goog.getObjectByName(name, goog.LEGACY_NAMESPACE_OBJECT_) != null);\n  };\n\n  /**\n   * Namespaces implicitly defined by goog.provide. For example,\n   * goog.provide('goog.events.Event') implicitly declares that 'goog' and\n   * 'goog.events' must be namespaces.\n   *\n   * @type {!Object<string, (boolean|undefined)>}\n   * @private\n   */\n  goog.implicitNamespaces_ = {'goog.module': true};\n\n  // NOTE: We add goog.module as an implicit namespace as goog.module is defined\n  // here and because the existing module package has not been moved yet out of\n  // the goog.module namespace. This satisfies both the debug loader and\n  // ahead-of-time dependency management.\n}\n\n\n/**\n * Returns an object based on its fully qualified external name.  The object\n * is not found if null or undefined.  If you are using a compilation pass that\n * renames property names beware that using this function will not find renamed\n * properties.\n *\n * @param {string} name The fully qualified name.\n * @param {Object=} opt_obj The object within which to look; default is\n *     |goog.global|.\n * @return {?} The value (object or primitive) or, if not found, null.\n */\ngoog.getObjectByName = function(name, opt_obj) {\n  var parts = name.split('.');\n  var cur = opt_obj || goog.global;\n  for (var i = 0; i < parts.length; i++) {\n    cur = cur[parts[i]];\n    if (cur == null) {\n      return null;\n    }\n  }\n  return cur;\n};\n\n\n/**\n * Adds a dependency from a file to the files it requires.\n * @param {string} relPath The path to the js file.\n * @param {!Array<string>} provides An array of strings with\n *     the names of the objects this file provides.\n * @param {!Array<string>} requires An array of strings with\n *     the names of the objects this file requires.\n * @param {boolean|!Object<string>=} opt_loadFlags Parameters indicating\n *     how the file must be loaded.  The boolean 'true' is equivalent\n *     to {'module': 'goog'} for backwards-compatibility.  Valid properties\n *     and values include {'module': 'goog'} and {'lang': 'es6'}.\n */\ngoog.addDependency = function(relPath, provides, requires, opt_loadFlags) {\n  if (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n    goog.debugLoader_.addDependency(relPath, provides, requires, opt_loadFlags);\n  }\n};\n\n\n// NOTE(nnaze): The debug DOM loader was included in base.js as an original way\n// to do \"debug-mode\" development.  The dependency system can sometimes be\n// confusing, as can the debug DOM loader's asynchronous nature.\n//\n// With the DOM loader, a call to goog.require() is not blocking -- the script\n// will not load until some point after the current script.  If a namespace is\n// needed at runtime, it needs to be defined in a previous script, or loaded via\n// require() with its registered dependencies.\n//\n// User-defined namespaces may need their own deps file. For a reference on\n// creating a deps file, see:\n// MOE:begin_strip\n// Internally: http://go/deps-files and http://go/be#js_deps\n// MOE:end_strip\n// Externally: https://developers.google.com/closure/library/docs/depswriter\n//\n// Because of legacy clients, the DOM loader can't be easily removed from\n// base.js.  Work was done to make it disableable or replaceable for\n// different environments (DOM-less JavaScript interpreters like Rhino or V8,\n// for example). See bootstrap/ for more information.\n\n\n/**\n * @define {boolean} Whether to enable the debug loader.\n *\n * If enabled, a call to goog.require() will attempt to load the namespace by\n * appending a script tag to the DOM (if the namespace has been registered).\n *\n * If disabled, goog.require() will simply assert that the namespace has been\n * provided (and depend on the fact that some outside tool correctly ordered\n * the script).\n */\ngoog.ENABLE_DEBUG_LOADER = goog.define('goog.ENABLE_DEBUG_LOADER', false);\n\n\n/**\n * @param {string} msg\n * @private\n */\ngoog.logToConsole_ = function(msg) {\n  if (goog.global.console) {\n    goog.global.console['error'](msg);\n  }\n};\n\n\n/**\n * Implements a system for the dynamic resolution of dependencies that works in\n * parallel with the BUILD system.\n *\n * Note that all calls to goog.require will be stripped by the compiler.\n *\n * @see goog.provide\n * @param {string} namespace Namespace (as was given in goog.provide,\n *     goog.module, or goog.declareModuleId) in the form\n *     \"goog.package.part\".\n * @return {?} If called within a goog.module or ES6 module file, the associated\n *     namespace or module otherwise null.\n */\ngoog.require = function(namespace) {\n  if (!COMPILED) {\n    // Might need to lazy load on old IE.\n    if (goog.ENABLE_DEBUG_LOADER) {\n      goog.debugLoader_.requested(namespace);\n    }\n\n    // If the object already exists we do not need to do anything.\n    if (goog.isProvided_(namespace)) {\n      if (goog.isInModuleLoader_()) {\n        return goog.module.getInternal_(namespace);\n      }\n    } else if (goog.ENABLE_DEBUG_LOADER) {\n      var moduleLoaderState = goog.moduleLoaderState_;\n      goog.moduleLoaderState_ = null;\n      try {\n        goog.debugLoader_.load_(namespace);\n      } finally {\n        goog.moduleLoaderState_ = moduleLoaderState;\n      }\n    }\n\n    return null;\n  }\n};\n\n\n/**\n * Requires a symbol for its type information. This is an indication to the\n * compiler that the symbol may appear in type annotations, yet it is not\n * referenced at runtime.\n *\n * When called within a goog.module or ES6 module file, the return value may be\n * assigned to or destructured into a variable, but it may not be otherwise used\n * in code outside of a type annotation.\n *\n * Note that all calls to goog.requireType will be stripped by the compiler.\n *\n * @param {string} namespace Namespace (as was given in goog.provide,\n *     goog.module, or goog.declareModuleId) in the form\n *     \"goog.package.part\".\n * @return {?}\n */\ngoog.requireType = function(namespace) {\n  // Return an empty object so that single-level destructuring of the return\n  // value doesn't crash at runtime when using the debug loader. Multi-level\n  // destructuring isn't supported.\n  return {};\n};\n\n\n/**\n * Path for included scripts.\n * @type {string}\n */\ngoog.basePath = '';\n\n\n/**\n * A hook for overriding the base path.\n * @type {string|undefined}\n */\ngoog.global.CLOSURE_BASE_PATH;\n\n\n/**\n * A function to import a single script. This is meant to be overridden when\n * Closure is being run in non-HTML contexts, such as web workers. It's defined\n * in the global scope so that it can be set before base.js is loaded, which\n * allows deps.js to be imported properly.\n *\n * The first parameter the script source, which is a relative URI. The second,\n * optional parameter is the script contents, in the event the script needed\n * transformation. It should return true if the script was imported, false\n * otherwise.\n * @type {(function(string, string=): boolean)|undefined}\n */\ngoog.global.CLOSURE_IMPORT_SCRIPT;\n\n\n/**\n * When defining a class Foo with an abstract method bar(), you can do:\n * Foo.prototype.bar = goog.abstractMethod\n *\n * Now if a subclass of Foo fails to override bar(), an error will be thrown\n * when bar() is invoked.\n *\n * @type {!Function}\n * @throws {Error} when invoked to indicate the method should be overridden.\n * @deprecated Use \"@abstract\" annotation instead of goog.abstractMethod in new\n *     code. See\n *     https://github.com/google/closure-compiler/wiki/@abstract-classes-and-methods\n */\ngoog.abstractMethod = function() {\n  throw new Error('unimplemented abstract method');\n};\n\n\n/**\n * Adds a `getInstance` static method that always returns the same\n * instance object.\n * @param {!Function} ctor The constructor for the class to add the static\n *     method to.\n * @suppress {missingProperties} 'instance_' isn't a property on 'Function'\n *     but we don't have a better type to use here.\n */\ngoog.addSingletonGetter = function(ctor) {\n  // instance_ is immediately set to prevent issues with sealed constructors\n  // such as are encountered when a constructor is returned as the export object\n  // of a goog.module in unoptimized code.\n  // Declare type to avoid conformance violations that ctor.instance_ is unknown\n  /** @type {undefined|!Object} @suppress {underscore} */\n  ctor.instance_ = undefined;\n  ctor.getInstance = function() {\n    if (ctor.instance_) {\n      return ctor.instance_;\n    }\n    if (goog.DEBUG) {\n      // NOTE: JSCompiler can't optimize away Array#push.\n      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;\n    }\n    // Cast to avoid conformance violations that ctor.instance_ is unknown\n    return /** @type {!Object|undefined} */ (ctor.instance_) = new ctor;\n  };\n};\n\n\n/**\n * All singleton classes that have been instantiated, for testing. Don't read\n * it directly, use the `goog.testing.singleton` module. The compiler\n * removes this variable if unused.\n * @type {!Array<!Function>}\n * @private\n */\ngoog.instantiatedSingletons_ = [];\n\n\n/**\n * @define {boolean} Whether to load goog.modules using `eval` when using\n * the debug loader.  This provides a better debugging experience as the\n * source is unmodified and can be edited using Chrome Workspaces or similar.\n * However in some environments the use of `eval` is banned\n * so we provide an alternative.\n */\ngoog.LOAD_MODULE_USING_EVAL = goog.define('goog.LOAD_MODULE_USING_EVAL', true);\n\n\n/**\n * @define {boolean} Whether the exports of goog.modules should be sealed when\n * possible.\n */\ngoog.SEAL_MODULE_EXPORTS = goog.define('goog.SEAL_MODULE_EXPORTS', goog.DEBUG);\n\n\n/**\n * The registry of initialized modules:\n * The module identifier or path to module exports map.\n * @private @const {!Object<string, {exports:?,type:string,moduleId:string}>}\n */\ngoog.loadedModules_ = {};\n\n\n/**\n * True if the debug loader enabled and used.\n * @const {boolean}\n */\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\n\n\n\n\n/**\n * @define {boolean} If true assume that ES modules have already been\n * transpiled by the jscompiler (in the same way that transpile.js would\n * transpile them - to jscomp modules). Useful only for servers that wish to use\n * the debug loader and transpile server side. Thus this is only respected if\n * goog.TRANSPILE is \"never\".\n */\ngoog.ASSUME_ES_MODULES_TRANSPILED =\n    goog.define('goog.ASSUME_ES_MODULES_TRANSPILED', false);\n\n\n/**\n * @define {string} Trusted Types policy name. If non-empty then Closure will\n * use Trusted Types.\n */\ngoog.TRUSTED_TYPES_POLICY_NAME =\n    goog.define('goog.TRUSTED_TYPES_POLICY_NAME', 'goog');\n\n\n/**\n * @package {?boolean}\n * Visible for testing.\n */\ngoog.hasBadLetScoping = null;\n\n\n/**\n * @param {function(?):?|string} moduleDef The module definition.\n */\ngoog.loadModule = function(moduleDef) {\n  // NOTE: we allow function definitions to be either in the from\n  // of a string to eval (which keeps the original source intact) or\n  // in a eval forbidden environment (CSP) we allow a function definition\n  // which in its body must call `goog.module`, and return the exports\n  // of the module.\n  var previousState = goog.moduleLoaderState_;\n  try {\n    goog.moduleLoaderState_ = {\n      moduleName: '',\n      declareLegacyNamespace: false,\n      type: goog.ModuleType.GOOG\n    };\n    var origExports = {};\n    var exports = origExports;\n    if (typeof moduleDef === 'function') {\n      exports = moduleDef.call(undefined, exports);\n    } else if (typeof moduleDef === 'string') {\n      exports = goog.loadModuleFromSource_.call(undefined, exports, moduleDef);\n    } else {\n      throw new Error('Invalid module definition');\n    }\n\n    var moduleName = goog.moduleLoaderState_.moduleName;\n    if (typeof moduleName === 'string' && moduleName) {\n      // Don't seal legacy namespaces as they may be used as a parent of\n      // another namespace\n      if (goog.moduleLoaderState_.declareLegacyNamespace) {\n        // Whether exports was overwritten via default export assignment.\n        // This is important for legacy namespaces as it dictates whether\n        // previously a previously loaded implicit namespace should be clobbered\n        // or not.\n        var isDefaultExport = origExports !== exports;\n        goog.constructNamespace_(moduleName, exports, isDefaultExport);\n      } else if (\n          goog.SEAL_MODULE_EXPORTS && Object.seal &&\n          typeof exports == 'object' && exports != null) {\n        Object.seal(exports);\n      }\n\n      var data = {\n        exports: exports,\n        type: goog.ModuleType.GOOG,\n        moduleId: goog.moduleLoaderState_.moduleName\n      };\n      goog.loadedModules_[moduleName] = data;\n    } else {\n      throw new Error('Invalid module name \\\"' + moduleName + '\\\"');\n    }\n  } finally {\n    goog.moduleLoaderState_ = previousState;\n  }\n};\n\n\n/**\n * @private @const\n */\ngoog.loadModuleFromSource_ =\n    /** @type {function(!Object, string):?} */ (function(exports) {\n      // NOTE: we avoid declaring parameters or local variables here to avoid\n      // masking globals or leaking values into the module definition.\n      'use strict';\n      eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(arguments[1]));\n      return exports;\n    });\n\n\n/**\n * Normalize a file path by removing redundant \"..\" and extraneous \".\" file\n * path components.\n * @param {string} path\n * @return {string}\n * @private\n */\ngoog.normalizePath_ = function(path) {\n  var components = path.split('/');\n  var i = 0;\n  while (i < components.length) {\n    if (components[i] == '.') {\n      components.splice(i, 1);\n    } else if (\n        i && components[i] == '..' && components[i - 1] &&\n        components[i - 1] != '..') {\n      components.splice(--i, 2);\n    } else {\n      i++;\n    }\n  }\n  return components.join('/');\n};\n\n\n/**\n * Provides a hook for loading a file when using Closure's goog.require() API\n * with goog.modules.  In particular this hook is provided to support Node.js.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_LOAD_FILE_SYNC;\n\n\n/**\n * Loads file by synchronous XHR. Should not be used in production environments.\n * @param {string} src Source URL.\n * @return {?string} File contents, or null if load failed.\n * @private\n */\ngoog.loadFileSync_ = function(src) {\n  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {\n    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);\n  } else {\n    try {\n      /** @type {XMLHttpRequest} */\n      var xhr = new goog.global['XMLHttpRequest']();\n      xhr.open('get', src, false);\n      xhr.send();\n      // NOTE: Successful http: requests have a status of 200, but successful\n      // file: requests may have a status of zero.  Any other status, or a\n      // thrown exception (particularly in case of file: requests) indicates\n      // some sort of error, which we treat as a missing or unavailable file.\n      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;\n    } catch (err) {\n      // No need to rethrow or log, since errors should show up on their own.\n      return null;\n    }\n  }\n};\n\n//==============================================================================\n// Language Enhancements\n//==============================================================================\n\n\n/**\n * This is a \"fixed\" version of the typeof operator.  It differs from the typeof\n * operator in such a way that null returns 'null' and arrays return 'array'.\n * @param {?} value The value to get the type of.\n * @return {string} The name of the type.\n */\ngoog.typeOf = function(value) {\n  var s = typeof value;\n\n  if (s != 'object') {\n    return s;\n  }\n\n  if (!value) {\n    return 'null';\n  }\n\n  if (Array.isArray(value)) {\n    return 'array';\n  }\n  return s;\n};\n\n\n/**\n * Returns true if the object looks like an array. To qualify as array like\n * the value needs to be either a NodeList or an object with a Number length\n * property. Note that for this function neither strings nor functions are\n * considered \"array-like\".\n *\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArrayLike = function(val) {\n  var type = goog.typeOf(val);\n  // We do not use goog.isObject here in order to exclude function values.\n  return type == 'array' || type == 'object' && typeof val.length == 'number';\n};\n\n\n/**\n * Returns true if the object looks like a Date. To qualify as Date-like the\n * value needs to be an object and have a getFullYear() function.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a like a Date.\n */\ngoog.isDateLike = function(val) {\n  return goog.isObject(val) && typeof val.getFullYear == 'function';\n};\n\n\n/**\n * Returns true if the specified value is an object.  This includes arrays and\n * functions.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an object.\n */\ngoog.isObject = function(val) {\n  var type = typeof val;\n  return type == 'object' && val != null || type == 'function';\n  // return Object(val) === val also works, but is slower, especially if val is\n  // not an object.\n};\n\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. The unique ID is\n * guaranteed to be unique across the current session amongst objects that are\n * passed into `getUid`. There is no guarantee that the ID is unique or\n * consistent across sessions. It is unsafe to generate unique ID for function\n * prototypes.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\ngoog.getUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n  return Object.prototype.hasOwnProperty.call(obj, goog.UID_PROPERTY_) &&\n      obj[goog.UID_PROPERTY_] ||\n      (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\n\n\n/**\n * Whether the given object is already assigned a unique ID.\n *\n * This does not modify the object.\n *\n * @param {!Object} obj The object to check.\n * @return {boolean} Whether there is an assigned unique id for the object.\n */\ngoog.hasUid = function(obj) {\n  return !!obj[goog.UID_PROPERTY_];\n};\n\n\n/**\n * Removes the unique ID from an object. This is useful if the object was\n * previously mutated using `goog.getUid` in which case the mutation is\n * undone.\n * @param {Object} obj The object to remove the unique ID field from.\n */\ngoog.removeUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In IE, DOM nodes are not instances of Object and throw an exception if we\n  // try to delete.  Instead we try to use removeAttribute.\n  if (obj !== null && 'removeAttribute' in obj) {\n    obj.removeAttribute(goog.UID_PROPERTY_);\n  }\n\n  try {\n    delete obj[goog.UID_PROPERTY_];\n  } catch (ex) {\n  }\n};\n\n\n/**\n * Name for unique ID property. Initialized in a way to help avoid collisions\n * with other closure JavaScript on the same page.\n * @type {string}\n * @private\n */\ngoog.UID_PROPERTY_ = 'closure_uid_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * Counter for UID.\n * @type {number}\n * @private\n */\ngoog.uidCounter_ = 0;\n\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n *\n * WARNINGS:\n * <code>goog.cloneObject</code> does not detect reference loops. Objects that\n * refer to themselves will cause infinite recursion.\n *\n * <code>goog.cloneObject</code> is unaware of unique identifiers, and copies\n * UIDs created by <code>getUid</code> into cloned results.\n *\n * @param {*} obj The value to clone.\n * @return {*} A clone of the input value.\n * @deprecated goog.cloneObject is unsafe. Prefer the goog.object methods.\n */\ngoog.cloneObject = function(obj) {\n  var type = goog.typeOf(obj);\n  if (type == 'object' || type == 'array') {\n    if (typeof obj.clone === 'function') {\n      return obj.clone();\n    }\n    if (typeof Map !== 'undefined' && obj instanceof Map) {\n      return new Map(obj);\n    } else if (typeof Set !== 'undefined' && obj instanceof Set) {\n      return new Set(obj);\n    }\n    var clone = type == 'array' ? [] : {};\n    for (var key in obj) {\n      clone[key] = goog.cloneObject(obj[key]);\n    }\n    return clone;\n  }\n\n  return obj;\n};\n\n\n/**\n * A native implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindNative_ = function(fn, selfObj, var_args) {\n  return /** @type {!Function} */ (fn.call.apply(fn.bind, arguments));\n};\n\n\n/**\n * A pure-JS implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindJs_ = function(fn, selfObj, var_args) {\n  if (!fn) {\n    throw new Error();\n  }\n\n  if (arguments.length > 2) {\n    var boundArgs = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      // Prepend the bound arguments to the current arguments.\n      var newArgs = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(newArgs, boundArgs);\n      return fn.apply(selfObj, newArgs);\n    };\n\n  } else {\n    return function() {\n      return fn.apply(selfObj, arguments);\n    };\n  }\n};\n\n\n/**\n * Partially applies this function to a particular 'this object' and zero or\n * more arguments. The result is a new function with some arguments of the first\n * function pre-filled and the value of this 'pre-specified'.\n *\n * Remaining arguments specified at call-time are appended to the pre-specified\n * ones.\n *\n * Also see: {@link #partial}.\n *\n * Usage:\n * <pre>var barMethBound = goog.bind(myFunction, myObj, 'arg1', 'arg2');\n * barMethBound('arg3', 'arg4');</pre>\n *\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @suppress {deprecated} See above.\n * @deprecated use `=> {}` or Function.prototype.bind instead.\n */\ngoog.bind = function(fn, selfObj, var_args) {\n  // TODO(nicksantos): narrow the type signature.\n  if (Function.prototype.bind &&\n      // NOTE(nicksantos): Somebody pulled base.js into the default Chrome\n      // extension environment. This means that for Chrome extensions, they get\n      // the implementation of Function.prototype.bind that calls goog.bind\n      // instead of the native one. Even worse, we don't want to introduce a\n      // circular dependency between goog.bind and Function.prototype.bind, so\n      // we have to hack this to make sure it works correctly.\n      Function.prototype.bind.toString().indexOf('native code') != -1) {\n    goog.bind = goog.bindNative_;\n  } else {\n    goog.bind = goog.bindJs_;\n  }\n  return goog.bind.apply(null, arguments);\n};\n\n\n/**\n * Like goog.bind(), except that a 'this object' is not required. Useful when\n * the target function is already bound.\n *\n * Usage:\n * var g = goog.partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn.\n * @return {!Function} A partially-applied form of the function goog.partial()\n *     was invoked as a method of.\n */\ngoog.partial = function(fn, var_args) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Clone the array (with slice()) and append additional arguments\n    // to the existing arguments.\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(/** @type {?} */ (this), newArgs);\n  };\n};\n\n\n/**\n * @return {number} An integer value representing the number of milliseconds\n *     between midnight, January 1, 1970 and the current time.\n * @deprecated Use Date.now\n */\ngoog.now = function() {\n  return Date.now();\n};\n\n\n/**\n * Evals JavaScript in the global scope.\n *\n * Throws an exception if neither execScript or eval is defined.\n * @param {string|!TrustedScript} script JavaScript string.\n */\ngoog.globalEval = function(script) {\n  (0, eval)(script);\n};\n\n\n/**\n * Optional map of CSS class names to obfuscated names used with\n * goog.getCssName().\n * @private {!Object<string, string>|undefined}\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMapping_;\n\n\n/**\n * Optional obfuscation style for CSS class names. Should be set to either\n * 'BY_WHOLE' or 'BY_PART' if defined.\n * @type {string|undefined}\n * @private\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMappingStyle_;\n\n\n\n/**\n * A hook for modifying the default behavior goog.getCssName. The function\n * if present, will receive the standard output of the goog.getCssName as\n * its input.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAP_FN;\n\n\n/**\n * Handles strings that are intended to be used as CSS class names.\n *\n * This function works in tandem with @see goog.setCssNameMapping.\n *\n * Without any mapping set, the arguments are simple joined with a hyphen and\n * passed through unaltered.\n *\n * When there is a mapping, there are two possible styles in which these\n * mappings are used. In the BY_PART style, each part (i.e. in between hyphens)\n * of the passed in css name is rewritten according to the map. In the BY_WHOLE\n * style, the full css name is looked up in the map directly. If a rewrite is\n * not specified by the map, the compiler will output a warning.\n *\n * When the mapping is passed to the compiler, it will replace calls to\n * goog.getCssName with the strings from the mapping, e.g.\n *     var x = goog.getCssName('foo');\n *     var y = goog.getCssName(this.baseClass, 'active');\n *  becomes:\n *     var x = 'foo';\n *     var y = this.baseClass + '-active';\n *\n * If one argument is passed it will be processed, if two are passed only the\n * modifier will be processed, as it is assumed the first argument was generated\n * as a result of calling goog.getCssName.\n *\n * @param {string} className The class name.\n * @param {string=} opt_modifier A modifier to be appended to the class name.\n * @return {string} The class name or the concatenation of the class name and\n *     the modifier.\n */\ngoog.getCssName = function(className, opt_modifier) {\n  // String() is used for compatibility with compiled soy where the passed\n  // className can be non-string objects.\n  if (String(className).charAt(0) == '.') {\n    throw new Error(\n        'className passed in goog.getCssName must not start with \".\".' +\n        ' You passed: ' + className);\n  }\n\n  var getMapping = function(cssName) {\n    return goog.cssNameMapping_[cssName] || cssName;\n  };\n\n  var renameByParts = function(cssName) {\n    // Remap all the parts individually.\n    var parts = cssName.split('-');\n    var mapped = [];\n    for (var i = 0; i < parts.length; i++) {\n      mapped.push(getMapping(parts[i]));\n    }\n    return mapped.join('-');\n  };\n\n  var rename;\n  if (goog.cssNameMapping_) {\n    rename =\n        goog.cssNameMappingStyle_ == 'BY_WHOLE' ? getMapping : renameByParts;\n  } else {\n    rename = function(a) {\n      return a;\n    };\n  }\n\n  var result =\n      opt_modifier ? className + '-' + rename(opt_modifier) : rename(className);\n\n  // The special CLOSURE_CSS_NAME_MAP_FN allows users to specify further\n  // processing of the class name.\n  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {\n    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);\n  }\n\n  return result;\n};\n\n\n/**\n * Sets the map to check when returning a value from goog.getCssName(). Example:\n * <pre>\n * goog.setCssNameMapping({\n *   \"goog\": \"a\",\n *   \"disabled\": \"b\",\n * });\n *\n * var x = goog.getCssName('goog');\n * // The following evaluates to: \"a a-b\".\n * goog.getCssName('goog') + ' ' + goog.getCssName(x, 'disabled')\n * </pre>\n * When declared as a map of string literals to string literals, the JSCompiler\n * will replace all calls to goog.getCssName() using the supplied map if the\n * --process_closure_primitives flag is set.\n *\n * @param {!Object} mapping A map of strings to strings where keys are possible\n *     arguments to goog.getCssName() and values are the corresponding values\n *     that should be returned.\n * @param {string=} opt_style The style of css name mapping. There are two valid\n *     options: 'BY_PART', and 'BY_WHOLE'.\n * @see goog.getCssName for a description.\n */\ngoog.setCssNameMapping = function(mapping, opt_style) {\n  goog.cssNameMapping_ = mapping;\n  goog.cssNameMappingStyle_ = opt_style;\n};\n\n\n/**\n * To use CSS renaming in compiled mode, one of the input files should have a\n * call to goog.setCssNameMapping() with an object literal that the JSCompiler\n * can extract and use to replace all calls to goog.getCssName(). In uncompiled\n * mode, JavaScript code should be loaded before this base.js file that declares\n * a global variable, CLOSURE_CSS_NAME_MAPPING, which is used below. This is\n * to ensure that the mapping is loaded before any calls to goog.getCssName()\n * are made in uncompiled mode.\n *\n * A hook for overriding the CSS name mapping.\n * @type {!Object<string, string>|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAPPING;\n\n\nif (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {\n  // This does not call goog.setCssNameMapping() because the JSCompiler\n  // requires that goog.setCssNameMapping() be called with an object literal.\n  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;\n}\n\n/**\n * Options bag type for `goog.getMsg()` third argument.\n *\n * It is important to note that these options need to be known at compile time,\n * so they must always be provided to `goog.getMsg()` as an actual object\n * literal in the function call. Otherwise, closure-compiler will report an\n * error.\n * @record\n */\ngoog.GetMsgOptions = function() {};\n\n/**\n * If `true`, escape '<' in the message string to '&lt;'.\n *\n * Used by Closure Templates where the generated code size and performance is\n * critical which is why {@link goog.html.SafeHtmlFormatter} is not used.\n * The value must be literal `true` or `false`.\n * @type {boolean|undefined}\n */\ngoog.GetMsgOptions.prototype.html;\n\n/**\n * If `true`, unescape common html entities: &gt;, &lt;, &apos;, &quot; and\n * &amp;.\n *\n * Used for messages not in HTML context, such as with the `textContent`\n * property.\n * The value must be literal `true` or `false`.\n * @type {boolean|undefined}\n */\ngoog.GetMsgOptions.prototype.unescapeHtmlEntities;\n\n/**\n * Associates placeholder names with strings showing how their values are\n * obtained.\n *\n * This field is intended for use in automatically generated JS code.\n * Human-written code should use meaningful placeholder names instead.\n *\n * closure-compiler uses this as the contents of the `<ph>` tag in the\n * XMB file it generates or defaults to `-` for historical reasons.\n *\n * Must be an object literal.\n * Ignored at runtime.\n * Keys are placeholder names.\n * Values are string literals indicating how the value is obtained.\n * Typically this is a snippet of source code.\n * @type {!Object<string, string>|undefined}\n */\ngoog.GetMsgOptions.prototype.original_code;\n\n/**\n * Associates placeholder names with example values.\n *\n * closure-compiler uses this as the contents of the `<ex>` tag in the\n * XMB file it generates or defaults to `-` for historical reasons.\n *\n * Must be an object literal.\n * Ignored at runtime.\n * Keys are placeholder names.\n * Values are string literals containing example placeholder values.\n * (e.g. \"George McFly\" for a name placeholder)\n * @type {!Object<string, string>|undefined}\n */\ngoog.GetMsgOptions.prototype.example;\n\n/**\n * Gets a localized message.\n *\n * This function is a compiler primitive. If you give the compiler a localized\n * message bundle, it will replace the string at compile-time with a localized\n * version, and expand goog.getMsg call to a concatenated string.\n *\n * Messages must be initialized in the form:\n * <code>\n * var MSG_NAME = goog.getMsg('Hello {$placeholder}', {'placeholder': 'world'});\n * </code>\n *\n * This function produces a string which should be treated as plain text. Use\n * {@link goog.html.SafeHtmlFormatter} in conjunction with goog.getMsg to\n * produce SafeHtml.\n *\n * @param {string} str Translatable string, places holders in the form {$foo}.\n * @param {!Object<string, string>=} opt_values Maps place holder name to value.\n * @param {!goog.GetMsgOptions=} opt_options see `goog.GetMsgOptions`\n * @return {string} message with placeholders filled.\n */\ngoog.getMsg = function(str, opt_values, opt_options) {\n  if (opt_options && opt_options.html) {\n    // Note that '&' is not replaced because the translation can contain HTML\n    // entities.\n    str = str.replace(/</g, '&lt;');\n  }\n  if (opt_options && opt_options.unescapeHtmlEntities) {\n    // Note that \"&amp;\" must be the last to avoid \"creating\" new entities.\n    str = str.replace(/&lt;/g, '<')\n              .replace(/&gt;/g, '>')\n              .replace(/&apos;/g, '\\'')\n              .replace(/&quot;/g, '\"')\n              .replace(/&amp;/g, '&');\n  }\n  if (opt_values) {\n    str = str.replace(/\\{\\$([^}]+)}/g, function(match, key) {\n      return (opt_values != null && key in opt_values) ? opt_values[key] :\n                                                         match;\n    });\n  }\n  return str;\n};\n\n\n/**\n * Gets a localized message. If the message does not have a translation, gives a\n * fallback message.\n *\n * This is useful when introducing a new message that has not yet been\n * translated into all languages.\n *\n * This function is a compiler primitive. Must be used in the form:\n * <code>var x = goog.getMsgWithFallback(MSG_A, MSG_B);</code>\n * where MSG_A and MSG_B were initialized with goog.getMsg.\n *\n * @param {string} a The preferred message.\n * @param {string} b The fallback message.\n * @return {string} The best translated message.\n */\ngoog.getMsgWithFallback = function(a, b) {\n  return a;\n};\n\n\n/**\n * Exposes an unobfuscated global namespace path for the given object.\n * Note that fields of the exported object *will* be obfuscated, unless they are\n * exported in turn via this function or goog.exportProperty.\n *\n * Also handy for making public items that are defined in anonymous closures.\n *\n * ex. goog.exportSymbol('public.path.Foo', Foo);\n *\n * ex. goog.exportSymbol('public.path.Foo.staticFunction', Foo.staticFunction);\n *     public.path.Foo.staticFunction();\n *\n * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',\n *                       Foo.prototype.myMethod);\n *     new public.path.Foo().myMethod();\n *\n * @param {string} publicPath Unobfuscated name to export.\n * @param {*} object Object the name should point to.\n * @param {?Object=} objectToExportTo The object to add the path to; default\n *     is goog.global.\n */\ngoog.exportSymbol = function(publicPath, object, objectToExportTo) {\n  goog.exportPath_(\n      publicPath, object, /* overwriteImplicit= */ true, objectToExportTo);\n};\n\n\n/**\n * Exports a property unobfuscated into the object's namespace.\n * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);\n * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);\n * @param {Object} object Object whose static property is being exported.\n * @param {string} publicName Unobfuscated name to export.\n * @param {*} symbol Object the name should point to.\n */\ngoog.exportProperty = function(object, publicName, symbol) {\n  object[publicName] = symbol;\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n * <pre>\n * function ParentClass(a, b) { }\n * ParentClass.prototype.foo = function(a) { };\n *\n * function ChildClass(a, b, c) {\n *   ChildClass.base(this, 'constructor', a, b);\n * }\n * goog.inherits(ChildClass, ParentClass);\n *\n * var child = new ChildClass('a', 'b', 'see');\n * child.foo(); // This works.\n * </pre>\n *\n * @param {!Function} childCtor Child class.\n * @param {!Function} parentCtor Parent class.\n * @suppress {strictMissingProperties} superClass_ and base is not defined on\n *    Function.\n * @deprecated Use ECMAScript class syntax instead.\n */\ngoog.inherits = function(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {}\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.superClass_ = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  /** @override */\n  childCtor.prototype.constructor = childCtor;\n\n  /**\n   * Calls superclass constructor/method.\n   *\n   * This function is only available if you use goog.inherits to\n   * express inheritance relationships between classes.\n   *\n   * NOTE: This is a replacement for goog.base and for superClass_\n   * property defined in childCtor.\n   *\n   * @param {!Object} me Should always be \"this\".\n   * @param {string} methodName The method name to call. Calling\n   *     superclass constructor can be done with the special string\n   *     'constructor'.\n   * @param {...*} var_args The arguments to pass to superclass\n   *     method/constructor.\n   * @return {*} The return value of the superclass method/constructor.\n   */\n  childCtor.base = function(me, methodName, var_args) {\n    // Copying using loop to avoid deop due to passing arguments object to\n    // function. This is faster in many JS engines as of late 2014.\n    var args = new Array(arguments.length - 2);\n    for (var i = 2; i < arguments.length; i++) {\n      args[i - 2] = arguments[i];\n    }\n    return parentCtor.prototype[methodName].apply(me, args);\n  };\n};\n\n\n/**\n * Allow for aliasing within scope functions.  This function exists for\n * uncompiled code - in compiled code the calls will be inlined and the aliases\n * applied.  In uncompiled code the function is simply run since the aliases as\n * written are valid JavaScript.\n *\n * MOE:begin_intracomment_strip\n * See the goog.scope document at http://go/goog.scope\n *\n * For more on goog.scope deprecation, see the style guide entry:\n * http://go/jsstyle#appendices-legacy-exceptions-goog-scope\n * MOE:end_intracomment_strip\n *\n * @param {function()} fn Function to call.  This function can contain aliases\n *     to namespaces (e.g. \"var dom = goog.dom\") or classes\n *     (e.g. \"var Timer = goog.Timer\").\n * @deprecated Use goog.module instead.\n */\ngoog.scope = function(fn) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.scope is not supported within a module.');\n  }\n  fn.call(goog.global);\n};\n\n\n/*\n * To support uncompiled, strict mode bundles that use eval to divide source\n * like so:\n *    eval('someSource;//# sourceUrl sourcefile.js');\n * We need to export the globally defined symbols \"goog\" and \"COMPILED\".\n * Exporting \"goog\" breaks the compiler optimizations, so we required that\n * be defined externally.\n * NOTE: We don't use goog.exportSymbol here because we don't want to trigger\n * extern generation when that compiler option is enabled.\n */\nif (!COMPILED) {\n  goog.LEGACY_NAMESPACE_OBJECT_['COMPILED'] = COMPILED;\n}\n\n\n//==============================================================================\n// goog.defineClass implementation\n//==============================================================================\n\n\n/**\n * Creates a restricted form of a Closure \"class\":\n *   - from the compiler's perspective, the instance returned from the\n *     constructor is sealed (no new properties may be added).  This enables\n *     better checks.\n *   - the compiler will rewrite this definition to a form that is optimal\n *     for type checking and optimization (initially this will be a more\n *     traditional form).\n *\n * @param {Function} superClass The superclass, Object or null.\n * @param {goog.defineClass.ClassDescriptor} def\n *     An object literal describing\n *     the class.  It may have the following properties:\n *     \"constructor\": the constructor function\n *     \"statics\": an object literal containing methods to add to the constructor\n *        as \"static\" methods or a function that will receive the constructor\n *        function as its only parameter to which static properties can\n *        be added.\n *     all other properties are added to the prototype.\n * @return {!Function} The class constructor.\n * @deprecated Use ECMAScript class syntax instead.\n */\ngoog.defineClass = function(superClass, def) {\n  // TODO(johnlenz): consider making the superClass an optional parameter.\n  var constructor = def.constructor;\n  var statics = def.statics;\n  // Wrap the constructor prior to setting up the prototype and static methods.\n  if (!constructor || constructor == Object.prototype.constructor) {\n    constructor = function() {\n      throw new Error(\n          'cannot instantiate an interface (no constructor defined).');\n    };\n  }\n\n  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);\n  if (superClass) {\n    goog.inherits(cls, superClass);\n  }\n\n  // Remove all the properties that should not be copied to the prototype.\n  delete def.constructor;\n  delete def.statics;\n\n  goog.defineClass.applyProperties_(cls.prototype, def);\n  if (statics != null) {\n    if (statics instanceof Function) {\n      statics(cls);\n    } else {\n      goog.defineClass.applyProperties_(cls, statics);\n    }\n  }\n\n  return cls;\n};\n\n\n/**\n * @typedef {{\n *   constructor: (!Function|undefined),\n *   statics: (Object|undefined|function(Function):void)\n * }}\n */\ngoog.defineClass.ClassDescriptor;\n\n\n/**\n * @define {boolean} Whether the instances returned by goog.defineClass should\n *     be sealed when possible.\n *\n * When sealing is disabled the constructor function will not be wrapped by\n * goog.defineClass, making it incompatible with ES6 class methods.\n */\ngoog.defineClass.SEAL_CLASS_INSTANCES =\n    goog.define('goog.defineClass.SEAL_CLASS_INSTANCES', goog.DEBUG);\n\n\n/**\n * If goog.defineClass.SEAL_CLASS_INSTANCES is enabled and Object.seal is\n * defined, this function will wrap the constructor in a function that seals the\n * results of the provided constructor function.\n *\n * @param {!Function} ctr The constructor whose results maybe be sealed.\n * @param {Function} superClass The superclass constructor.\n * @return {!Function} The replacement constructor.\n * @private\n */\ngoog.defineClass.createSealingConstructor_ = function(ctr, superClass) {\n  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {\n    // Do now wrap the constructor when sealing is disabled. Angular code\n    // depends on this for injection to work properly.\n    return ctr;\n  }\n\n  // NOTE: The sealing behavior has been removed\n\n  /**\n   * @this {Object}\n   * @return {?}\n   */\n  var wrappedCtr = function() {\n    // Don't seal an instance of a subclass when it calls the constructor of\n    // its super class as there is most likely still setup to do.\n    var instance = ctr.apply(this, arguments) || this;\n    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];\n\n    return instance;\n  };\n\n  return wrappedCtr;\n};\n\n\n\n// TODO(johnlenz): share these values with the goog.object\n/**\n * The names of the fields that are defined on Object.prototype.\n * @type {!Array<string>}\n * @private\n * @const\n */\ngoog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = [\n  'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n  'toLocaleString', 'toString', 'valueOf'\n];\n\n\n// TODO(johnlenz): share this function with the goog.object\n/**\n * @param {!Object} target The object to add properties to.\n * @param {!Object} source The object to copy properties from.\n * @private\n */\ngoog.defineClass.applyProperties_ = function(target, source) {\n  // TODO(johnlenz): update this to support ES5 getters/setters\n\n  var key;\n  for (key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n\n  // For IE the for-in-loop does not contain any properties that are not\n  // enumerable on the prototype object (for example isPrototypeOf from\n  // Object.prototype) and it will also not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {\n    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\n\n/**\n * Returns the parameter.\n * @param {string} s\n * @return {string}\n * @private\n */\ngoog.identity_ = function(s) {\n  return s;\n};\n\n\n/**\n * Creates Trusted Types policy if Trusted Types are supported by the browser.\n * The policy just blesses any string as a Trusted Type. It is not visibility\n * restricted because anyone can also call trustedTypes.createPolicy directly.\n * However, the allowed names should be restricted by a HTTP header and the\n * reference to the created policy should be visibility restricted.\n * @param {string} name\n * @return {?TrustedTypePolicy}\n */\ngoog.createTrustedTypesPolicy = function(name) {\n  var policy = null;\n  var policyFactory = goog.global.trustedTypes;\n  if (!policyFactory || !policyFactory.createPolicy) {\n    return policy;\n  }\n  // trustedTypes.createPolicy throws if called with a name that is already\n  // registered, even in report-only mode. Until the API changes, catch the\n  // error not to break the applications functionally. In such case, the code\n  // will fall back to using regular Safe Types.\n  // TODO(koto): Remove catching once createPolicy API stops throwing.\n  try {\n    policy = policyFactory.createPolicy(name, {\n      createHTML: goog.identity_,\n      createScript: goog.identity_,\n      createScriptURL: goog.identity_\n    });\n  } catch (e) {\n    goog.logToConsole_(e.message);\n  }\n  return policy;\n};\n\n// There's a bug in the compiler where without collapse properties the\n// Closure namespace defines do not guard code correctly. To help reduce code\n// size also check for !COMPILED even though it redundant until this is fixed.\nif (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n  // MOE:begin_strip\n  // TODO(b/67050526) This object is obsolete but some people are relying on\n  // it internally. Keep it around until we migrate them.\n  /**\n   * @private\n   * @type {{\n   *   loadFlags: !Object<string, !Object<string, string>>,\n   *   nameToPath: !Object<string, string>,\n   *   requires: !Object<string, !Object<string, boolean>>,\n   *   visited: !Object<string, boolean>,\n   *   written: !Object<string, boolean>,\n   *   deferred: !Object<string, string>\n   * }}\n   */\n  goog.dependencies_ = {\n    loadFlags: {},  // 1 to 1\n\n    nameToPath: {},  // 1 to 1\n\n    requires: {},  // 1 to many\n\n    // Used when resolving dependencies to prevent us from visiting file\n    // twice.\n    visited: {},\n\n    written: {},  // Used to keep track of script files we have written.\n\n    deferred: {}  // Used to track deferred module evaluations in old IEs\n  };\n\n  /**\n   * @return {!Object}\n   * @private\n   */\n  goog.getLoader_ = function() {\n    return {\n      dependencies_: goog.dependencies_,\n      writeScriptTag_: goog.writeScriptTag_\n    };\n  };\n\n\n  /**\n   * @param {string} src The script url.\n   * @param {string=} opt_sourceText The optionally source text to evaluate\n   * @return {boolean} True if the script was imported, false otherwise.\n   * @private\n   */\n  goog.writeScriptTag_ = function(src, opt_sourceText) {\n    if (goog.inHtmlDocument_()) {\n      /** @type {!HTMLDocument} */\n      var doc = goog.global.document;\n\n      // If the user tries to require a new symbol after document load,\n      // something has gone terribly wrong. Doing a document.write would\n      // wipe out the page. This does not apply to the CSP-compliant method\n      // of writing script tags.\n      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING &&\n          doc.readyState == 'complete') {\n        // Certain test frameworks load base.js multiple times, which tries\n        // to write deps.js each time. If that happens, just fail silently.\n        // These frameworks wipe the page between each load of base.js, so this\n        // is OK.\n        var isDeps = /\\bdeps.js$/.test(src);\n        if (isDeps) {\n          return false;\n        } else {\n          throw Error('Cannot write \"' + src + '\" after document load');\n        }\n      }\n\n      var nonceAttr = '';\n      var nonce = goog.getScriptNonce_();\n      if (nonce) {\n        nonceAttr = ' nonce=\"' + nonce + '\"';\n      }\n\n      if (opt_sourceText === undefined) {\n        var script = '<script src=\"' + src + '\"' + nonceAttr + '></' +\n            'script>';\n        doc.write(\n            goog.TRUSTED_TYPES_POLICY_ ?\n                goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n                script);\n      } else {\n        var script = '<script' + nonceAttr + '>' +\n            goog.protectScriptTag_(opt_sourceText) + '</' +\n            'script>';\n        doc.write(\n            goog.TRUSTED_TYPES_POLICY_ ?\n                goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n                script);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n  // MOE:end_strip\n\n\n  /**\n   * Tries to detect whether the current browser is Edge, based on the user\n   * agent. This matches only pre-Chromium Edge.\n   * @see https://docs.microsoft.com/en-us/microsoft-edge/web-platform/user-agent-string\n   * @return {boolean} True if the current browser is Edge.\n   * @private\n   */\n  goog.isEdge_ = function() {\n    var userAgent = goog.global.navigator && goog.global.navigator.userAgent ?\n        goog.global.navigator.userAgent :\n        '';\n    var edgeRe = /Edge\\/(\\d+)(\\.\\d)*/i;\n    return !!userAgent.match(edgeRe);\n  };\n\n\n  /**\n   * Tries to detect whether is in the context of an HTML document.\n   * @return {boolean} True if it looks like HTML document.\n   * @private\n   */\n  goog.inHtmlDocument_ = function() {\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    return doc != null && 'write' in doc;  // XULDocument misses write.\n  };\n\n\n  /**\n   * We'd like to check for if the document readyState is 'loading'; however\n   * there are bugs on IE 10 and below where the readyState being anything other\n   * than 'complete' is not reliable.\n   * @return {boolean}\n   * @private\n   */\n  goog.isDocumentLoading_ = function() {\n    // attachEvent is available on IE 6 thru 10 only, and thus can be used to\n    // detect those browsers.\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n    return doc.attachEvent ? doc.readyState != 'complete' :\n                             doc.readyState == 'loading';\n  };\n\n\n  /**\n   * Tries to detect the base path of base.js script that bootstraps Closure.\n   * @private\n   */\n  goog.findBasePath_ = function() {\n    if (goog.global.CLOSURE_BASE_PATH != undefined &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        typeof goog.global.CLOSURE_BASE_PATH === 'string') {\n      goog.basePath = goog.global.CLOSURE_BASE_PATH;\n      return;\n    } else if (!goog.inHtmlDocument_()) {\n      return;\n    }\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    // If we have a currentScript available, use it exclusively.\n    var currentScript = doc.currentScript;\n    if (currentScript) {\n      var scripts = [currentScript];\n    } else {\n      var scripts = doc.getElementsByTagName('SCRIPT');\n    }\n    // Search backwards since the current script is in almost all cases the one\n    // that has base.js.\n    for (var i = scripts.length - 1; i >= 0; --i) {\n      var script = /** @type {!HTMLScriptElement} */ (scripts[i]);\n      var src = script.src;\n      var qmark = src.lastIndexOf('?');\n      var l = qmark == -1 ? src.length : qmark;\n      if (src.slice(l - 7, l) == 'base.js') {\n        goog.basePath = src.slice(0, l - 7);\n        return;\n      }\n    }\n  };\n\n  goog.findBasePath_();\n\n  /**\n   * Rewrites closing script tags in input to avoid ending an enclosing script\n   * tag.\n   *\n   * @param {string} str\n   * @return {string}\n   * @private\n   */\n  goog.protectScriptTag_ = function(str) {\n    return str.replace(/<\\/(SCRIPT)/ig, '\\\\x3c/$1');\n  };\n\n\n  /**\n   * A debug loader is responsible for downloading and executing javascript\n   * files in an unbundled, uncompiled environment.\n   *\n   * This can be custimized via the setDependencyFactory method, or by\n   * CLOSURE_IMPORT_SCRIPT/CLOSURE_LOAD_FILE_SYNC.\n   *\n   * @struct @constructor @final @private\n   */\n  goog.DebugLoader_ = function() {\n    /** @private @const {!Object<string, !goog.Dependency>} */\n    this.dependencies_ = {};\n    /** @private @const {!Object<string, string>} */\n    this.idToPath_ = {};\n    /** @private @const {!Object<string, boolean>} */\n    this.written_ = {};\n    /** @private @const {!Array<!goog.Dependency>} */\n    this.loadingDeps_ = [];\n    /** @private {!Array<!goog.Dependency>} */\n    this.depsToLoad_ = [];\n    /** @private {boolean} */\n    this.paused_ = false;\n    /** @private {!goog.DependencyFactory} */\n    this.factory_ = new goog.DependencyFactory();\n    /** @private @const {!Object<string, !Function>} */\n    this.deferredCallbacks_ = {};\n    /** @private @const {!Array<string>} */\n    this.deferredQueue_ = [];\n  };\n\n\n  /**\n   * Loads the Closure deps.js file.\n   *\n   * Exposed a function so after base is loaded, and\n   * then this can be called to load the closure deps.js file.\n   */\n  goog.DebugLoader_.prototype.loadClosureDeps = function() {\n    // Circumvent addDependency, which would try to transpile deps.js if\n    // transpile is set to always.\n    var relPath = 'deps.js';\n    this.depsToLoad_.push(this.factory_.createDependency(\n        goog.normalizePath_(goog.basePath + relPath), relPath, [], [], {}));\n    this.loadDeps_();\n  };\n\n\n  /**\n   * Notifies the debug loader when a dependency has been requested.\n   *\n   * @param {string} absPathOrId Path of the dependency or goog id.\n   * @param {boolean=} opt_force\n   */\n  goog.DebugLoader_.prototype.requested = function(absPathOrId, opt_force) {\n    var path = this.getPathFromDeps_(absPathOrId);\n    if (path &&\n        (opt_force || this.areDepsLoaded_(this.dependencies_[path].requires))) {\n      var callback = this.deferredCallbacks_[path];\n      if (callback) {\n        delete this.deferredCallbacks_[path];\n        callback();\n      }\n    }\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.DebugLoader_.prototype.setDependencyFactory = function(factory) {\n    this.factory_ = factory;\n  };\n\n\n  /**\n   * Travserses the dependency graph and queues the given dependency, and all of\n   * its transitive dependencies, for loading and then starts loading if not\n   * paused.\n   *\n   * @param {string} namespace\n   * @private\n   */\n  goog.DebugLoader_.prototype.load_ = function(namespace) {\n    if (!this.getPathFromDeps_(namespace)) {\n      var errorMessage = 'goog.require could not find: ' + namespace;\n      goog.logToConsole_(errorMessage);\n    } else {\n      var loader = this;\n\n      var deps = [];\n\n      /** @param {string} namespace */\n      var visit = function(namespace) {\n        var path = loader.getPathFromDeps_(namespace);\n\n        if (!path) {\n          throw new Error('Bad dependency path or symbol: ' + namespace);\n        }\n\n        if (loader.written_[path]) {\n          return;\n        }\n\n        loader.written_[path] = true;\n\n        var dep = loader.dependencies_[path];\n        // MOE:begin_strip\n        if (goog.dependencies_.written[dep.relativePath]) {\n          return;\n        }\n        // MOE:end_strip\n        for (var i = 0; i < dep.requires.length; i++) {\n          if (!goog.isProvided_(dep.requires[i])) {\n            visit(dep.requires[i]);\n          }\n        }\n\n        deps.push(dep);\n      };\n\n      visit(namespace);\n\n      var wasLoading = !!this.depsToLoad_.length;\n      this.depsToLoad_ = this.depsToLoad_.concat(deps);\n\n      if (!this.paused_ && !wasLoading) {\n        this.loadDeps_();\n      }\n    }\n  };\n\n\n  /**\n   * Loads any queued dependencies until they are all loaded or paused.\n   *\n   * @private\n   */\n  goog.DebugLoader_.prototype.loadDeps_ = function() {\n    var loader = this;\n    var paused = this.paused_;\n\n    while (this.depsToLoad_.length && !paused) {\n      (function() {\n        var loadCallDone = false;\n        var dep = loader.depsToLoad_.shift();\n\n        var loaded = false;\n        loader.loading_(dep);\n\n        var controller = {\n          pause: function() {\n            if (loadCallDone) {\n              throw new Error('Cannot call pause after the call to load.');\n            } else {\n              paused = true;\n            }\n          },\n          resume: function() {\n            if (loadCallDone) {\n              loader.resume_();\n            } else {\n              // Some dep called pause and then resume in the same load call.\n              // Just keep running this same loop.\n              paused = false;\n            }\n          },\n          loaded: function() {\n            if (loaded) {\n              throw new Error('Double call to loaded.');\n            }\n\n            loaded = true;\n            loader.loaded_(dep);\n          },\n          pending: function() {\n            // Defensive copy.\n            var pending = [];\n            for (var i = 0; i < loader.loadingDeps_.length; i++) {\n              pending.push(loader.loadingDeps_[i]);\n            }\n            return pending;\n          },\n          /**\n           * @param {goog.ModuleType} type\n           */\n          setModuleState: function(type) {\n            goog.moduleLoaderState_ = {\n              type: type,\n              moduleName: '',\n              declareLegacyNamespace: false\n            };\n          },\n          /** @type {function(string, string, string=)} */\n          registerEs6ModuleExports: function(\n              path, exports, opt_closureNamespace) {\n            if (opt_closureNamespace) {\n              goog.loadedModules_[opt_closureNamespace] = {\n                exports: exports,\n                type: goog.ModuleType.ES6,\n                moduleId: opt_closureNamespace || ''\n              };\n            }\n          },\n          /** @type {function(string, ?)} */\n          registerGoogModuleExports: function(moduleId, exports) {\n            goog.loadedModules_[moduleId] = {\n              exports: exports,\n              type: goog.ModuleType.GOOG,\n              moduleId: moduleId\n            };\n          },\n          clearModuleState: function() {\n            goog.moduleLoaderState_ = null;\n          },\n          defer: function(callback) {\n            if (loadCallDone) {\n              throw new Error(\n                  'Cannot register with defer after the call to load.');\n            }\n            loader.defer_(dep, callback);\n          },\n          areDepsLoaded: function() {\n            return loader.areDepsLoaded_(dep.requires);\n          }\n        };\n\n        try {\n          dep.load(controller);\n        } finally {\n          loadCallDone = true;\n        }\n      })();\n    }\n\n    if (paused) {\n      this.pause_();\n    }\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.pause_ = function() {\n    this.paused_ = true;\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.resume_ = function() {\n    if (this.paused_) {\n      this.paused_ = false;\n      this.loadDeps_();\n    }\n  };\n\n\n  /**\n   * Marks the given dependency as loading (load has been called but it has not\n   * yet marked itself as finished). Useful for dependencies that want to know\n   * what else is loading. Example: goog.modules cannot eval if there are\n   * loading dependencies.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loading_ = function(dep) {\n    this.loadingDeps_.push(dep);\n  };\n\n\n  /**\n   * Marks the given dependency as having finished loading and being available\n   * for require.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loaded_ = function(dep) {\n    for (var i = 0; i < this.loadingDeps_.length; i++) {\n      if (this.loadingDeps_[i] == dep) {\n        this.loadingDeps_.splice(i, 1);\n        break;\n      }\n    }\n\n    for (var i = 0; i < this.deferredQueue_.length; i++) {\n      if (this.deferredQueue_[i] == dep.path) {\n        this.deferredQueue_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (this.loadingDeps_.length == this.deferredQueue_.length &&\n        !this.depsToLoad_.length) {\n      // Something has asked to load these, but they may not be directly\n      // required again later, so load them now that we know we're done loading\n      // everything else. e.g. a goog module entry point.\n      while (this.deferredQueue_.length) {\n        this.requested(this.deferredQueue_.shift(), true);\n      }\n    }\n\n    dep.loaded();\n  };\n\n\n  /**\n   * @param {!Array<string>} pathsOrIds\n   * @return {boolean}\n   * @private\n   */\n  goog.DebugLoader_.prototype.areDepsLoaded_ = function(pathsOrIds) {\n    for (var i = 0; i < pathsOrIds.length; i++) {\n      var path = this.getPathFromDeps_(pathsOrIds[i]);\n      if (!path ||\n          (!(path in this.deferredCallbacks_) &&\n           !goog.isProvided_(pathsOrIds[i]))) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * @param {string} absPathOrId\n   * @return {?string}\n   * @private\n   */\n  goog.DebugLoader_.prototype.getPathFromDeps_ = function(absPathOrId) {\n    if (absPathOrId in this.idToPath_) {\n      return this.idToPath_[absPathOrId];\n    } else if (absPathOrId in this.dependencies_) {\n      return absPathOrId;\n    } else {\n      return null;\n    }\n  };\n\n\n  /**\n   * @param {!goog.Dependency} dependency\n   * @param {!Function} callback\n   * @private\n   */\n  goog.DebugLoader_.prototype.defer_ = function(dependency, callback) {\n    this.deferredCallbacks_[dependency.path] = callback;\n    this.deferredQueue_.push(dependency.path);\n  };\n\n\n  /**\n   * Interface for goog.Dependency implementations to have some control over\n   * loading of dependencies.\n   *\n   * @record\n   */\n  goog.LoadController = function() {};\n\n\n  /**\n   * Tells the controller to halt loading of more dependencies.\n   */\n  goog.LoadController.prototype.pause = function() {};\n\n\n  /**\n   * Tells the controller to resume loading of more dependencies if paused.\n   */\n  goog.LoadController.prototype.resume = function() {};\n\n\n  /**\n   * Tells the controller that this dependency has finished loading.\n   *\n   * This causes this to be removed from pending() and any load callbacks to\n   * fire.\n   */\n  goog.LoadController.prototype.loaded = function() {};\n\n\n  /**\n   * List of dependencies on which load has been called but which have not\n   * called loaded on their controller. This includes the current dependency.\n   *\n   * @return {!Array<!goog.Dependency>}\n   */\n  goog.LoadController.prototype.pending = function() {};\n\n\n  /**\n   * Registers an object as an ES6 module's exports so that goog.modules may\n   * require it by path.\n   *\n   * @param {string} path Full path of the module.\n   * @param {?} exports\n   * @param {string=} opt_closureNamespace Closure namespace to associate with\n   *     this module.\n   */\n  goog.LoadController.prototype.registerEs6ModuleExports = function(\n      path, exports, opt_closureNamespace) {};\n\n\n  /**\n   * Sets the current module state.\n   *\n   * @param {goog.ModuleType} type Type of module.\n   */\n  goog.LoadController.prototype.setModuleState = function(type) {};\n\n\n  /**\n   * Clears the current module state.\n   */\n  goog.LoadController.prototype.clearModuleState = function() {};\n\n\n  /**\n   * Registers a callback to call once the dependency is actually requested\n   * via goog.require + all of the immediate dependencies have been loaded or\n   * all other files have been loaded. Allows for lazy loading until\n   * require'd without pausing dependency loading, which is needed on old IE.\n   *\n   * @param {!Function} callback\n   */\n  goog.LoadController.prototype.defer = function(callback) {};\n\n\n  /**\n   * @return {boolean}\n   */\n  goog.LoadController.prototype.areDepsLoaded = function() {};\n\n\n  /**\n   * Basic super class for all dependencies Closure Library can load.\n   *\n   * This default implementation is designed to load untranspiled, non-module\n   * scripts in a web broswer.\n   *\n   * For goog.modules see {@see goog.GoogModuleDependency}.\n   * For untranspiled ES6 modules {@see goog.Es6ModuleDependency}.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   */\n  goog.Dependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    /** @const */\n    this.path = path;\n    /** @const */\n    this.relativePath = relativePath;\n    /** @const */\n    this.provides = provides;\n    /** @const */\n    this.requires = requires;\n    /** @const */\n    this.loadFlags = loadFlags;\n    /** @private {boolean} */\n    this.loaded_ = false;\n    /** @private {!Array<function()>} */\n    this.loadCallbacks_ = [];\n  };\n\n\n  /**\n   * @return {string} The pathname part of this dependency's path if it is a\n   *     URI.\n   */\n  goog.Dependency.prototype.getPathName = function() {\n    var pathName = this.path;\n    var protocolIndex = pathName.indexOf('://');\n    if (protocolIndex >= 0) {\n      pathName = pathName.substring(protocolIndex + 3);\n      var slashIndex = pathName.indexOf('/');\n      if (slashIndex >= 0) {\n        pathName = pathName.substring(slashIndex + 1);\n      }\n    }\n    return pathName;\n  };\n\n\n  /**\n   * @param {function()} callback Callback to fire as soon as this has loaded.\n   * @final\n   */\n  goog.Dependency.prototype.onLoad = function(callback) {\n    if (this.loaded_) {\n      callback();\n    } else {\n      this.loadCallbacks_.push(callback);\n    }\n  };\n\n\n  /**\n   * Marks this dependency as loaded and fires any callbacks registered with\n   * onLoad.\n   * @final\n   */\n  goog.Dependency.prototype.loaded = function() {\n    this.loaded_ = true;\n    var callbacks = this.loadCallbacks_;\n    this.loadCallbacks_ = [];\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i]();\n    }\n  };\n\n\n  /**\n   * Whether or not document.written / appended script tags should be deferred.\n   *\n   * @private {boolean}\n   */\n  goog.Dependency.defer_ = false;\n\n\n  /**\n   * Map of script ready / state change callbacks. Old IE cannot handle putting\n   * these properties on goog.global.\n   *\n   * @private @const {!Object<string, function(?):undefined>}\n   */\n  goog.Dependency.callbackMap_ = {};\n\n\n  /**\n   * @param {function(...?):?} callback\n   * @return {string}\n   * @private\n   */\n  goog.Dependency.registerCallback_ = function(callback) {\n    var key = Math.random().toString(32);\n    goog.Dependency.callbackMap_[key] = callback;\n    return key;\n  };\n\n\n  /**\n   * @param {string} key\n   * @private\n   */\n  goog.Dependency.unregisterCallback_ = function(key) {\n    delete goog.Dependency.callbackMap_[key];\n  };\n\n\n  /**\n   * @param {string} key\n   * @param {...?} var_args\n   * @private\n   * @suppress {unusedPrivateMembers}\n   */\n  goog.Dependency.callback_ = function(key, var_args) {\n    if (key in goog.Dependency.callbackMap_) {\n      var callback = goog.Dependency.callbackMap_[key];\n      var args = [];\n      for (var i = 1; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n      callback.apply(undefined, args);\n    } else {\n      var errorMessage = 'Callback key ' + key +\n          ' does not exist (was base.js loaded more than once?).';\n      // MOE:begin_strip\n      // TODO(johnplaisted): Some people internally are mistakenly loading\n      // base.js twice, and this can happen while a dependency is loading,\n      // wiping out state.\n      goog.logToConsole_(errorMessage);\n      // MOE:end_strip\n      // MOE:insert throw Error(errorMessage);\n    }\n  };\n\n\n  /**\n   * Starts loading this dependency. This dependency can pause loading if it\n   * needs to and resume it later via the controller interface.\n   *\n   * When this is loaded it should call controller.loaded(). Note that this will\n   * end up calling the loaded method of this dependency; there is no need to\n   * call it explicitly.\n   *\n   * @param {!goog.LoadController} controller\n   */\n  goog.Dependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      if (this.relativePath == 'deps.js') {\n        // CLOSURE_IMPORT_SCRIPT should be set *before* base.js is loaded.\n        goog.logToConsole_(\n            'Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js.');\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    // If the user tries to require a new symbol after document load,\n    // something has gone terribly wrong. Doing a document.write would\n    // wipe out the page. This does not apply to the CSP-compliant method\n    // of writing script tags.\n    if (doc.readyState == 'complete' &&\n        !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {\n      // Certain test frameworks load base.js multiple times, which tries\n      // to write deps.js each time. If that happens, just fail silently.\n      // These frameworks wipe the page between each load of base.js, so this\n      // is OK.\n      var isDeps = /\\bdeps.js$/.test(this.path);\n      if (isDeps) {\n        controller.loaded();\n        return;\n      } else {\n        throw Error('Cannot write \"' + this.path + '\" after document load');\n      }\n    }\n\n    var nonce = goog.getScriptNonce_();\n    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING &&\n        goog.isDocumentLoading_()) {\n      var key;\n      var callback = function(script) {\n        if (script.readyState && script.readyState != 'complete') {\n          script.onload = callback;\n          return;\n        }\n        goog.Dependency.unregisterCallback_(key);\n        controller.loaded();\n      };\n      key = goog.Dependency.registerCallback_(callback);\n\n      var defer = goog.Dependency.defer_ ? ' defer' : '';\n      var nonceAttr = nonce ? ' nonce=\"' + nonce + '\"' : '';\n      var script = '<script src=\"' + this.path + '\"' + nonceAttr + defer +\n          ' id=\"script-' + key + '\"><\\/script>';\n\n      script += '<script' + nonceAttr + '>';\n\n      if (goog.Dependency.defer_) {\n        script += 'document.getElementById(\\'script-' + key +\n            '\\').onload = function() {\\n' +\n            '  goog.Dependency.callback_(\\'' + key + '\\', this);\\n' +\n            '};\\n';\n      } else {\n        script += 'goog.Dependency.callback_(\\'' + key +\n            '\\', document.getElementById(\\'script-' + key + '\\'));';\n      }\n\n      script += '<\\/script>';\n\n      doc.write(\n          goog.TRUSTED_TYPES_POLICY_ ?\n              goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n              script);\n    } else {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = goog.Dependency.defer_;\n      scriptEl.async = false;\n\n      // If CSP nonces are used, propagate them to dynamically created scripts.\n      // This is necessary to allow nonce-based CSPs without 'strict-dynamic'.\n      if (nonce) {\n        scriptEl.nonce = nonce;\n      }\n\n      scriptEl.onload = function() {\n        scriptEl.onload = null;\n        controller.loaded();\n      };\n\n      scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ?\n          goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) :\n          this.path;\n      doc.head.appendChild(scriptEl);\n    }\n  };\n\n\n  /**\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides Should be an empty array.\n   *     TODO(johnplaisted) add support for adding closure namespaces to ES6\n   *     modules for interop purposes.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.Dependency}\n   */\n  goog.Es6ModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.Es6ModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n  };\n  goog.inherits(goog.Es6ModuleDependency, goog.Dependency);\n\n\n  /**\n   * @override\n   * @param {!goog.LoadController} controller\n   */\n  goog.Es6ModuleDependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      controller.pause();\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    var dep = this;\n\n    // TODO(johnplaisted): Does document.writing really speed up anything? Any\n    // difference between this and just waiting for interactive mode and then\n    // appending?\n    function write(src, contents) {\n      var nonceAttr = '';\n      var nonce = goog.getScriptNonce_();\n      if (nonce) {\n        nonceAttr = ' nonce=\"' + nonce + '\"';\n      }\n\n      if (contents) {\n        var script = '<script type=\"module\" crossorigin' + nonceAttr + '>' +\n            contents + '</' +\n            'script>';\n        doc.write(\n            goog.TRUSTED_TYPES_POLICY_ ?\n                goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n                script);\n      } else {\n        var script = '<script type=\"module\" crossorigin src=\"' + src + '\"' +\n            nonceAttr + '></' +\n            'script>';\n        doc.write(\n            goog.TRUSTED_TYPES_POLICY_ ?\n                goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n                script);\n      }\n    }\n\n    function append(src, contents) {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = true;\n      scriptEl.async = false;\n      scriptEl.type = 'module';\n      scriptEl.setAttribute('crossorigin', true);\n\n      // If CSP nonces are used, propagate them to dynamically created scripts.\n      // This is necessary to allow nonce-based CSPs without 'strict-dynamic'.\n      var nonce = goog.getScriptNonce_();\n      if (nonce) {\n        scriptEl.nonce = nonce;\n      }\n\n      if (contents) {\n        scriptEl.text = goog.TRUSTED_TYPES_POLICY_ ?\n            goog.TRUSTED_TYPES_POLICY_.createScript(contents) :\n            contents;\n      } else {\n        scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ?\n            goog.TRUSTED_TYPES_POLICY_.createScriptURL(src) :\n            src;\n      }\n\n      doc.head.appendChild(scriptEl);\n    }\n\n    var create;\n\n    if (goog.isDocumentLoading_()) {\n      create = write;\n      // We can ONLY call document.write if we are guaranteed that any\n      // non-module script tags document.written after this are deferred.\n      // Small optimization, in theory document.writing is faster.\n      goog.Dependency.defer_ = true;\n    } else {\n      create = append;\n    }\n\n    // Write 4 separate tags here:\n    // 1) Sets the module state at the correct time (just before execution).\n    // 2) A src node for this, which just hopefully lets the browser load it a\n    //    little early (no need to parse #3).\n    // 3) Import the module and register it.\n    // 4) Clear the module state at the correct time. Guaranteed to run even\n    //    if there is an error in the module (#3 will not run if there is an\n    //    error in the module).\n    var beforeKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(beforeKey);\n      controller.setModuleState(goog.ModuleType.ES6);\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + beforeKey + '\")');\n\n    // TODO(johnplaisted): Does this really speed up anything?\n    create(this.path, undefined);\n\n    var registerKey = goog.Dependency.registerCallback_(function(exports) {\n      goog.Dependency.unregisterCallback_(registerKey);\n      controller.registerEs6ModuleExports(\n          dep.path, exports, goog.moduleLoaderState_.moduleName);\n    });\n    create(\n        undefined,\n        'import * as m from \"' + this.path + '\"; goog.Dependency.callback_(\"' +\n            registerKey + '\", m)');\n\n    var afterKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(afterKey);\n      controller.clearModuleState();\n      controller.loaded();\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + afterKey + '\")');\n  };\n\n\n  /**\n   * Superclass of any dependency that needs to be loaded into memory,\n   * transformed, and then eval'd (goog.modules and transpiled files).\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor @abstract\n   * @extends {goog.Dependency}\n   */\n  goog.TransformedDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.TransformedDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @private {?string} */\n    this.contents_ = null;\n\n    /**\n     * Whether to lazily make the synchronous XHR (when goog.require'd) or make\n     * the synchronous XHR when initially loading. On FireFox 61 there is a bug\n     * where an ES6 module cannot make a synchronous XHR (rather, it can, but if\n     * it does then no other ES6 modules will load after).\n     *\n     * tl;dr we lazy load due to bugs on older browsers and eager load due to\n     * bugs on newer ones.\n     *\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1477090\n     *\n     * @private @const {boolean}\n     */\n    this.lazyFetch_ = !goog.inHtmlDocument_() ||\n        !('noModule' in goog.global.document.createElement('script'));\n  };\n  goog.inherits(goog.TransformedDependency, goog.Dependency);\n\n\n  /**\n   * @override\n   * @param {!goog.LoadController} controller\n   */\n  goog.TransformedDependency.prototype.load = function(controller) {\n    var dep = this;\n\n    function fetch() {\n      dep.contents_ = goog.loadFileSync_(dep.path);\n\n      if (dep.contents_) {\n        dep.contents_ = dep.transform(dep.contents_);\n        if (dep.contents_) {\n          dep.contents_ += '\\n//# sourceURL=' + dep.path;\n        }\n      }\n    }\n\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      fetch();\n      if (this.contents_ &&\n          goog.global.CLOSURE_IMPORT_SCRIPT('', this.contents_)) {\n        this.contents_ = null;\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n\n    var isEs6 = this.loadFlags['module'] == goog.ModuleType.ES6;\n\n    if (!this.lazyFetch_) {\n      fetch();\n    }\n\n    function load() {\n      if (dep.lazyFetch_) {\n        fetch();\n      }\n\n      if (!dep.contents_) {\n        // loadFileSync_ or transform are responsible. Assume they logged an\n        // error.\n        return;\n      }\n\n      if (isEs6) {\n        controller.setModuleState(goog.ModuleType.ES6);\n      }\n\n      var namespace;\n\n      try {\n        var contents = dep.contents_;\n        dep.contents_ = null;\n        goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(contents));\n        if (isEs6) {\n          namespace = goog.moduleLoaderState_.moduleName;\n        }\n      } finally {\n        if (isEs6) {\n          controller.clearModuleState();\n        }\n      }\n\n      if (isEs6) {\n        // Due to circular dependencies this may not be available for require\n        // right now.\n        goog.LEGACY_NAMESPACE_OBJECT_['$jscomp']['require']['ensure'](\n            [dep.getPathName()], function() {\n              controller.registerEs6ModuleExports(\n                  dep.path,\n                  goog.LEGACY_NAMESPACE_OBJECT_['$jscomp']['require'](\n                      dep.getPathName()),\n                  namespace);\n            });\n      }\n\n      controller.loaded();\n    }\n\n    // Do not fetch now; in FireFox 47 the synchronous XHR doesn't block all\n    // events. If we fetched now and then document.write'd the contents the\n    // document.write would be an eval and would execute too soon! Instead write\n    // a script tag to fetch and eval synchronously at the correct time.\n    function fetchInOwnScriptThenLoad() {\n      /** @type {!HTMLDocument} */\n      var doc = goog.global.document;\n\n      var key = goog.Dependency.registerCallback_(function() {\n        goog.Dependency.unregisterCallback_(key);\n        load();\n      });\n\n      var nonce = goog.getScriptNonce_();\n      var nonceAttr = nonce ? ' nonce=\"' + nonce + '\"' : '';\n      var script = '<script' + nonceAttr + '>' +\n          goog.protectScriptTag_('goog.Dependency.callback_(\"' + key + '\");') +\n          '</' +\n          'script>';\n      doc.write(\n          goog.TRUSTED_TYPES_POLICY_ ?\n              goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n              script);\n    }\n\n    // If one thing is pending it is this.\n    var anythingElsePending = controller.pending().length > 1;\n\n    // Additionally if we are meant to defer scripts but the page is still\n    // loading (e.g. an ES6 module is loading) then also defer. Or if we are\n    // meant to defer and anything else is pending then defer (those may be\n    // scripts that did not need transformation and are just script tags with\n    // defer set to true, and we need to evaluate after that deferred script).\n    var needsAsyncLoading = goog.Dependency.defer_ &&\n        (anythingElsePending || goog.isDocumentLoading_());\n\n    if (needsAsyncLoading) {\n      // Note that we only defer when we have to rather than 100% of the time.\n      // Always defering would work, but then in theory the order of\n      // goog.require calls would then matter. We want to enforce that most of\n      // the time the order of the require calls does not matter.\n      controller.defer(function() {\n        load();\n      });\n      return;\n    }\n    // TODO(johnplaisted): Externs are missing onreadystatechange for\n    // HTMLDocument.\n    /** @type {?} */\n    var doc = goog.global.document;\n\n    var isInternetExplorerOrEdge = goog.inHtmlDocument_() &&\n        ('ActiveXObject' in goog.global || goog.isEdge_());\n\n    // Don't delay in any version of IE or pre-Chromium Edge. There's a bug\n    // around this that will cause out of order script execution. This means\n    // that on older IE ES6 modules will load too early (while the document is\n    // still loading + the dom is not available). The other option is to load\n    // too late (when the document is complete and the onload even will never\n    // fire). This seems to be the lesser of two evils as scripts already act\n    // like the former.\n    if (isEs6 && goog.inHtmlDocument_() && goog.isDocumentLoading_() &&\n        !isInternetExplorerOrEdge) {\n      goog.Dependency.defer_ = true;\n      // Transpiled ES6 modules still need to load like regular ES6 modules,\n      // aka only after the document is interactive.\n      controller.pause();\n      var oldCallback = doc.onreadystatechange;\n      doc.onreadystatechange = function() {\n        if (doc.readyState == 'interactive') {\n          doc.onreadystatechange = oldCallback;\n          load();\n          controller.resume();\n        }\n        if (typeof oldCallback === 'function') {\n          oldCallback.apply(undefined, arguments);\n        }\n      };\n    } else {\n      // Always eval on old IE.\n      if (!goog.inHtmlDocument_() || !goog.isDocumentLoading_()) {\n        load();\n      } else {\n        fetchInOwnScriptThenLoad();\n      }\n    }\n  };\n\n\n  /**\n   * @param {string} contents\n   * @return {string}\n   * @abstract\n   */\n  goog.TransformedDependency.prototype.transform = function(contents) {};\n\n\n  /**\n   * An ES6 module dependency that was transpiled to a jscomp module outside\n   * of the debug loader, e.g. server side.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.PreTranspiledEs6ModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.PreTranspiledEs6ModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n  };\n  goog.inherits(\n      goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency);\n\n\n  /**\n   * @override\n   * @param {string} contents\n   * @return {string}\n   */\n  goog.PreTranspiledEs6ModuleDependency.prototype.transform = function(\n      contents) {\n    return contents;\n  };\n\n\n  /**\n   * A goog.module, transpiled or not. Will always perform some minimal\n   * transformation even when not transpiled to wrap in a goog.loadModule\n   * statement.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.GoogModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.GoogModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n  };\n  goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency);\n\n\n  /**\n   * @override\n   * @param {string} contents\n   * @return {string}\n   */\n  goog.GoogModuleDependency.prototype.transform = function(contents) {\n    if (!goog.LOAD_MODULE_USING_EVAL || goog.global.JSON === undefined) {\n      return '' +\n          'goog.loadModule(function(exports) {' +\n          '\"use strict\";' + contents +\n          '\\n' +  // terminate any trailing single line comment.\n          ';return exports' +\n          '});' +\n          '\\n//# sourceURL=' + this.path + '\\n';\n    } else {\n      return '' +\n          'goog.loadModule(' +\n          goog.global.JSON.stringify(\n              contents + '\\n//# sourceURL=' + this.path + '\\n') +\n          ');';\n    }\n  };\n\n\n  /**\n   * @param {string} relPath\n   * @param {!Array<string>|undefined} provides\n   * @param {!Array<string>} requires\n   * @param {boolean|!Object<string>=} opt_loadFlags\n   * @see goog.addDependency\n   */\n  goog.DebugLoader_.prototype.addDependency = function(\n      relPath, provides, requires, opt_loadFlags) {\n    provides = provides || [];\n    relPath = relPath.replace(/\\\\/g, '/');\n    var path = goog.normalizePath_(goog.basePath + relPath);\n    if (!opt_loadFlags || typeof opt_loadFlags === 'boolean') {\n      opt_loadFlags = opt_loadFlags ? {'module': goog.ModuleType.GOOG} : {};\n    }\n    var dep = this.factory_.createDependency(\n        path, relPath, provides, requires, opt_loadFlags);\n    this.dependencies_[path] = dep;\n    for (var i = 0; i < provides.length; i++) {\n      this.idToPath_[provides[i]] = path;\n    }\n    this.idToPath_[relPath] = path;\n  };\n\n\n  /**\n   * Creates goog.Dependency instances for the debug loader to load.\n   *\n   * Should be overridden to have the debug loader use custom subclasses of\n   * goog.Dependency.\n   *\n   * @struct @constructor\n   */\n  goog.DependencyFactory = function() {};\n\n\n  /**\n   * @param {string} path Absolute path of the file.\n   * @param {string} relativePath Path relative to closure\u2019s base.js.\n   * @param {!Array<string>} provides Array of provided goog.provide/module ids.\n   * @param {!Array<string>} requires Array of required goog.provide/module /\n   *     relative ES6 module paths.\n   * @param {!Object<string, string>} loadFlags\n   * @return {!goog.Dependency}\n   */\n  goog.DependencyFactory.prototype.createDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    // MOE:begin_strip\n    var provide, require;\n    for (var i = 0; provide = provides[i]; i++) {\n      goog.dependencies_.nameToPath[provide] = relativePath;\n      goog.dependencies_.loadFlags[relativePath] = loadFlags;\n    }\n    for (var j = 0; require = requires[j]; j++) {\n      if (!(relativePath in goog.dependencies_.requires)) {\n        goog.dependencies_.requires[relativePath] = {};\n      }\n      goog.dependencies_.requires[relativePath][require] = true;\n    }\n    // MOE:end_strip\n\n    if (loadFlags['module'] == goog.ModuleType.GOOG) {\n      return new goog.GoogModuleDependency(\n          path, relativePath, provides, requires, loadFlags);\n    } else {\n      if (loadFlags['module'] == goog.ModuleType.ES6) {\n        if (goog.ASSUME_ES_MODULES_TRANSPILED) {\n          return new goog.PreTranspiledEs6ModuleDependency(\n              path, relativePath, provides, requires, loadFlags);\n        } else {\n          return new goog.Es6ModuleDependency(\n              path, relativePath, provides, requires, loadFlags);\n        }\n      } else {\n        return new goog.Dependency(\n            path, relativePath, provides, requires, loadFlags);\n      }\n    }\n  };\n\n\n  /** @private @const */\n  goog.debugLoader_ = new goog.DebugLoader_();\n\n\n  /**\n   * Loads the Closure deps.js file.\n   *\n   * Exposed a public function so after base is loaded, and\n   * then this can be called to load the closure deps.js file.\n   */\n  goog.loadClosureDeps = function() {\n    goog.debugLoader_.loadClosureDeps();\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * Note:\n   * You can call goog.loadClosureDeps to load the Closure dependency file\n   * later, after your factory is injected.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.setDependencyFactory = function(factory) {\n    goog.debugLoader_.setDependencyFactory(factory);\n  };\n\n\n  /**\n   * Trusted Types policy for the debug loader.\n   * @private @const {?TrustedTypePolicy}\n   */\n  goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ?\n      goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + '#base') :\n      null;\n}\n\n\nif (!COMPILED) {\n  var isChrome87 = false;\n  // Cannot run check for Chrome <87 bug in case of strict CSP environments.\n  // TODO(aaronshim): Remove once Chrome <87 bug is no longer a problem.\n  try {\n    isChrome87 = eval(goog.global.trustedTypes.emptyScript) !==\n        goog.global.trustedTypes.emptyScript;\n  } catch (err) {\n  }\n\n  /**\n   * Trusted Types for running dev servers.\n   *\n   * @private @const\n   */\n  goog.CLOSURE_EVAL_PREFILTER_ =\n      // Detect Chrome <87 bug with TT and eval.\n      goog.global.trustedTypes && isChrome87 &&\n          goog.createTrustedTypesPolicy('goog#base#devonly#eval') ||\n      {createScript: goog.identity_};\n}\n","/**\n * @fileoverview\n * Hand-modified Closure version of tslib.js.\n * These use the literal space optimized code from TypeScript for\n * compatibility.\n *\n * @suppress {undefinedVars}\n */\n\n// Do not use @license\n\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n\ngoog.module('google3.third_party.javascript.tslib.tslib');\n\n/** @suppress {missingPolyfill} the code below intentionally feature-tests. */\nvar extendStatics = Object.setPrototypeOf ||\n    function(d, b) {\n      for (var p in b)\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n/**\n * @param {?} d\n * @param {?} b\n */\nexports.__extends = function(d, b) {\n  extendStatics(d, b);\n  // LOCAL MODIFICATION: Add jsdoc annotation here:\n  /** @constructor */\n  function __() { /** @type {?} */\n    (this).constructor = d;\n  }\n  d.prototype =\n      b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/** @type {typeof Object.assign} */\nexports.__assign = Object.assign || /** @return {?} */ function(/** ? */ t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n    for (var p in s)\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n  return t;\n};\n\n/**\n * @param {?} s\n * @param {?} e\n * @return {?}\n */\nexports.__rest = function(s, e) {\n  var t = {};\n  for (var p in s)\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === 'function')\n    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 &&\n          Object.prototype.propertyIsEnumerable.call(s, p[i]))\n        t[p[i]] = s[p[i]];\n    }\n  return t;\n};\n\n/**\n * @param {?} decorators\n * @param {T} target\n * @param {?=} key\n * @param {?=} desc\n * @return {T}\n * @template T\n */\nexports.__decorate = function(decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3     ? target :\n      desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) :\n                      desc,\n      d;\n  // google3 local modification: use quoted property access to work around\n  // https://b.corp.google.com/issues/77140019.\n  if (typeof Reflect === 'object' && Reflect &&\n      typeof Reflect['decorate'] === 'function')\n    r = Reflect['decorate'](decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n/**\n * @param {?} paramIndex\n * @param {?} decorator\n * @return {?}\n */\nexports.__param = function(paramIndex, decorator) {\n  return function(target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nexports.__setFunctionName = function(f, name, prefix) {\n  if (typeof name === 'symbol')\n    name = name.description ? '['.concat(name.description, ']') : '';\n  return Object.defineProperty(f, 'name', {\n    configurable: true,\n    value: prefix ? ''.concat(prefix, ' ', name) : name\n  });\n};\n\n/**\n * @param {?} metadataKey\n * @param {?} metadataValue\n * @return {?}\n */\nexports.__metadata = function(metadataKey, metadataValue) {\n  // google3 local modification: use quoted property access to work around\n  // https://b.corp.google.com/issues/77140019.\n  if (typeof Reflect === 'object' && Reflect &&\n      typeof Reflect['metadata'] === 'function')\n    return Reflect['metadata'](metadataKey, metadataValue);\n};\n\n/**\n * @template T\n * @param {T} thisArg\n * @param {?} _arguments\n * @param {?} P\n * @param {function(this:T)} generator\n * @return {?}\n */\nexports.__awaiter = function(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function(resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function(resolve, reject) {\n    // LOCAL MODIFICATION: Cannot express the function + keys pattern in\n    // closure, so we escape generator.next with ? type.\n    function fulfilled(value) {\n      try {\n        step((/** @type {?} */ (generator)).next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator['throw'](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) :\n                    adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\n/**\n * @param {?} thisArg\n * @param {?} body\n * @return {?}\n */\nexports.__generator = function(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function() {\n      if (t[0] & 1) throw (/** @type {!Error} */ (t[1]));\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f, y, t, g;\n  // LOCAL MODIFICATION: Originally iterator body was \"return this\", but it\n  // doesn't compile as this is unknown. Changed to g, which is equivalent.\n  return g = {next: verb(0), 'throw': verb(1), 'return': verb(2)},\n         typeof Symbol === 'function' && (g[Symbol.iterator] = function() {\n           return g;\n         }), g;\n  function verb(n) {\n    return function(v) {\n      return step([n, v]);\n    };\n  }\n  /**\n   * @suppress {strictMissingProperties} TODO(b/214874268): Remove\n   * strictMissingProperties suppression after b/214427036 is fixed\n   */\n  function step(op) {\n    if (f) throw new TypeError('Generator is already executing.');\n    while (_) try {\n        if (f = 1,\n            y &&\n                (t = op[0] & 2 ? y['return'] :\n                     op[0] ? y['throw'] || ((t = y['return']) && t.call(y), 0) :\n                             y.next) &&\n                !(t = t.call(y, op[1])).done)\n          return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {value: op[1], done: false};\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) &&\n                (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    if (op[0] & 5) throw (/** @type {!Error} */ (op[1]));\n    return {value: op[0] ? op[1] : void 0, done: true};\n  }\n};\n\n/**\n * @param {?} m\n * @param {?} o\n */\nexports.__exportStar = function(m, o) {\n  for (var p in m)\n    if (!o.hasOwnProperty(p)) o[p] = m[p];\n};\n\n/**\n * @param {?} o\n * @return {?}\n */\nexports.__values = function(o) {\n  var m = typeof Symbol === 'function' && o[Symbol.iterator], i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function() {\n      if (o && i >= o.length) o = void 0;\n      return {value: o && o[i++], done: !o};\n    }\n  };\n};\n\n/**\n * @param {?} o\n * @param {?=} n\n * @return {?}\n */\nexports.__read = function(o, n) {\n  var m = typeof Symbol === 'function' && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {error: error};\n  } finally {\n    try {\n      if (r && !r.done && (m = i['return'])) m.call(i);\n    } finally {\n      if (e) throw (/** @type {!Error} */ (e.error));\n    }\n  }\n  return ar;\n};\n\n\n/** @deprecated */\nexports.__spread = function() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n    ar = ar.concat(exports.__read(arguments[i]));\n  return ar;\n};\n\n/** @deprecated */\nexports.__spreadArrays = function() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n    s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n      r[k] = a[j];\n  return r;\n};\n\n/**\n * @param {!Array<?>} to\n * @param {!Array<?>} from\n * @param {!Array<?>} pack\n * @return {!Array<?>}\n */\nexports.__spreadArray = function(to, from, pack) {\n  // LOCAL MODIFICATION: https://github.com/microsoft/TypeScript/issues/43353\n  // We have to accept NodeList because they don't implement Iterable in Edge.\n  if (!Array.isArray(from) && !(from instanceof NodeList) &&\n      Object.prototype.toString.call(from) !== '[object Arguments]') {\n    throw new TypeError(\n        'Expected an Array, NodeList, or or Arguments: ' + String(from));\n  }\n  // END LOCAL MODIFICATION\n  if (pack || arguments.length === 2)\n    for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n        if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n        ar[i] = from[i];\n      }\n    }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\n/**\n * @constructor\n * LOCAL MODIFICATION: Originally used \"this\" in function body,\n * @this {?}\n * END LOCAL MODIFICATION\n * @param {?} v\n * @return {?}\n */\nexports.__await = function(v) {\n  return this instanceof exports.__await ? (this.v = v, this) :\n                                           new exports.__await(v);\n};\n\n/**\n * @template T\n * @param {T} thisArg\n * @param {?} _arguments\n * @param {function(this:T)} generator\n * @return {?}\n */\nexports.__asyncGenerator = function(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator)\n    throw new TypeError('Symbol.asyncIterator is not defined.');\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb('next'), verb('throw'), verb('return', awaitReturn),\n         i[Symbol.asyncIterator] = function() {\n           return (/** @type {?} */ (this));\n         }, i;\n  function awaitReturn(f) {\n    return function(v) {\n      return Promise.resolve(v).then(f, reject);\n    };\n  }\n  /**\n   * @param {?} n\n   * @param {?=} f\n   * @return {?}\n   */\n  function verb(n, f) {\n    if (g[n]) {\n      i[n] = function(v) {\n        return new Promise(function(a, b) {\n          q.push([n, v, a, b]) > 1 || resume(n, v);\n        });\n      };\n      if (f) i[n] = f(i[n]);\n    }\n  }\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n  function step(r) {\n    r.value instanceof exports.__await ?\n        Promise.resolve(/** @type {?} */ (r.value).v).then(fulfill, reject) :\n        settle(q[0][2], r);\n  }\n  function fulfill(value) {\n    resume('next', value);\n  }\n  function reject(value) {\n    resume('throw', value);\n  }\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n};\n\n/**\n * @param {?} o\n * @return {?}\n */\nexports.__asyncDelegator = function(o) {\n  var i, p;\n  // LOCAL MODIFICATION: Originally iterator body was \"return this\", but it\n  // doesn't compile in some builds, as this is unknown. Changed to i, which is\n  // equivalent.\n  return i = {}, verb('next'), verb('throw', function(e) {\n           throw e;\n         }), verb('return'), i[Symbol.iterator] = function() {\n    return i;\n  }, i;\n  /**\n   * @param {?} n\n   * @param {?=} f\n   * @return {?}\n   */\n  function verb(n, f) {\n    i[n] = o[n] ? function(v) {\n      return (p = !p) ?\n          {value: new exports.__await(o[n](v)), done: n === 'return'} :\n          f ? f(v) :\n              v;\n    } : f;\n  }\n};\n\n/**\n * @param {?} o\n * @return {?}\n */\nexports.__asyncValues = function(o) {\n  if (!Symbol.asyncIterator)\n    throw new TypeError('Symbol.asyncIterator is not defined.');\n  var m = o[Symbol.asyncIterator], i;\n  return m ?\n      m.call(o) :\n      (o = typeof __values === 'function' ? __values(o) : o[Symbol.iterator](),\n       i = {}, verb('next'), verb('throw'), verb('return'),\n       i[Symbol.asyncIterator] = function() {\n         return (/** @type {?} */ (this));\n       }, i);\n  function verb(n) {\n    i[n] = o[n] && function(v) {\n      return new Promise(function(resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function(v) {\n      resolve({value: v, done: d});\n    }, reject);\n  }\n};\n\n/**\n * @param {?=} cooked\n * @param {?=} raw\n * @return {?}\n */\nexports.__makeTemplateObject = function(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, 'raw', {value: raw});\n  } else {\n    cooked.raw = raw;\n  }\n  return cooked;\n};\n\n/**\n * @param {?} receiver\n * @param {?} state\n * @param {?} kind\n * @param {?} f\n * @return {?}\n */\nexports.__classPrivateFieldGet = function(receiver, state, kind, f) {\n  if (kind === 'a' && !f)\n    throw new TypeError('Private accessor was defined without a getter');\n  if (typeof state === 'function' ? receiver !== state || !f :\n                                    !state.has(receiver))\n    throw new TypeError(\n        'Cannot read private member from an object whose class did not declare it');\n  return kind === 'm' ? f :\n      kind === 'a'    ? f.call(receiver) :\n      f               ? f.value :\n                        state.get(receiver);\n};\n\n/**\n * @param {?} receiver\n * @param {?} state\n * @param {?} value\n * @param {?} kind\n * @param {?} f\n * @return {?}\n */\nexports.__classPrivateFieldSet = function(receiver, state, value, kind, f) {\n  if (kind === 'm') throw new TypeError('Private method is not writable');\n  if (kind === 'a' && !f)\n    throw new TypeError('Private accessor was defined without a setter');\n  if (typeof state === 'function' ? receiver !== state || !f :\n                                    !state.has(receiver))\n    throw new TypeError(\n        'Cannot write private member to an object whose class did not declare it');\n  return (kind === 'a' ? f.call(receiver, value) :\n              f        ? f.value = value :\n                         state.set(receiver, value)),\n         value;\n};\n\n/**\n * @param {?} state\n * @param {?} receiver\n * @return {?}\n */\nexports.__classPrivateFieldIn = function(state, receiver) {\n  if (receiver === null ||\n      (typeof receiver !== 'object' && typeof receiver !== 'function'))\n    throw new TypeError('Cannot use \\'in\\' operator on non-object');\n  return typeof state === 'function' ? receiver === state : state.has(receiver);\n};\n","/**\n * Insert serialised data into Chrome sotrage.local or storage.sync, determined\n * by the local param.\n */\nexport async function writeData(\n  key: string,\n  data: string,\n  local = false,\n): Promise<void> {\n  if (local) {\n    await chrome.storage.local.set({[key]: data});\n  } else {\n    await chrome.storage.sync.set({[key]: data});\n  }\n}\n\n/**\n * Read serialised data from Chrome sotrage.local or storage.sync, determined by\n * the local param.\n */\nexport async function readData(key: string, local = false): Promise<string> {\n  let data;\n  if (local) {\n    data = await chrome.storage.local.get([key]);\n  } else {\n    data = await chrome.storage.sync.get([key]);\n  }\n  return data ? data[key] : '';\n}\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Provides a base class for custom Error objects such that the\n * stack is correctly maintained.\n *\n * You should never need to throw DebugError(msg) directly, Error(msg) is\n * sufficient.\n */\n\ngoog.module('goog.debug.Error');\ngoog.module.declareLegacyNamespace();\n\n\n\n/**\n * Base class for custom error objects.\n * @param {*=} msg The message associated with the error.\n * @param {{\n *    message: (?|undefined),\n *    name: (?|undefined),\n *    lineNumber: (?|undefined),\n *    fileName: (?|undefined),\n *    stack: (?|undefined),\n *    cause: (?|undefined),\n * }=} cause The original error object to chain with.\n * @constructor\n * @extends {Error}\n */\nfunction DebugError(msg = undefined, cause = undefined) {\n  // Attempt to ensure there is a stack trace.\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, DebugError);\n  } else {\n    const stack = new Error().stack;\n    if (stack) {\n      /** @override @type {string} */\n      this.stack = stack;\n    }\n  }\n\n  if (msg) {\n    /** @override @type {string} */\n    this.message = String(msg);\n  }\n\n  if (cause !== undefined) {\n    /** @type {?} */\n    this.cause = cause;\n  }\n\n  /**\n   * Whether to report this error to the server. Setting this to false will\n   * cause the error reporter to not report the error back to the server,\n   * which can be useful if the client knows that the error has already been\n   * logged on the server.\n   * @type {boolean}\n   */\n  this.reportErrorToServer = true;\n}\ngoog.inherits(DebugError, Error);\n\n\n/** @override @type {string} */\nDebugError.prototype.name = 'CustomError';\n\n\nexports = DebugError;\n\n// MOE:begin_strip\n// Ensure ES2021 inputs. go/transpile-js\nnull?.(6_6);\n// MOE:end_strip\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package are given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will make the compiler treat <code>foo</code> as non-nullable. Similarly,\n * <code>goog.asserts.assertNumber(foo)</code> informs the compiler about the\n * type of <code>foo</code>. Where applicable, such assertions are preferable to\n * casts by jsdoc with <code>@type</code>.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo());\n * goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * Additionally, note the compiler will consider the type to be \"tightened\" for\n * all statements <em>after</em> the assertion. For example:\n * <code>\n * const /** ?Object &#ast;/ value = foo();\n * goog.asserts.assert(value);\n * // \"value\" is of type {!Object} at this point.\n * </code>\n */\n\ngoog.module('goog.asserts');\ngoog.module.declareLegacyNamespace();\n\nconst DebugError = goog.require('goog.debug.Error');\nconst NodeType = goog.require('goog.dom.NodeType');\n\n\n// NOTE: this needs to be exported directly and referenced via the exports\n// object because unit tests stub it out.\n/**\n * @define {boolean} Whether to strip out asserts or to leave them in.\n */\nexports.ENABLE_ASSERTS = goog.define('goog.asserts.ENABLE_ASSERTS', goog.DEBUG);\n\n\n\n/**\n * Error object for failed assertions.\n * @param {string} messagePattern The pattern that was used to form message.\n * @param {!Array<*>} messageArgs The items to substitute into the pattern.\n * @constructor\n * @extends {DebugError}\n * @final\n */\nfunction AssertionError(messagePattern, messageArgs) {\n  DebugError.call(this, subs(messagePattern, messageArgs));\n\n  /**\n   * The message pattern used to format the error message. Error handlers can\n   * use this to uniquely identify the assertion.\n   * @type {string}\n   */\n  this.messagePattern = messagePattern;\n}\ngoog.inherits(AssertionError, DebugError);\nexports.AssertionError = AssertionError;\n\n/** @override @type {string} */\nAssertionError.prototype.name = 'AssertionError';\n\n\n/**\n * The default error handler.\n * @param {!AssertionError} e The exception to be handled.\n * @return {void}\n */\nexports.DEFAULT_ERROR_HANDLER = function(e) {\n  throw e;\n};\n\n\n/**\n * The handler responsible for throwing or logging assertion errors.\n * @type {function(!AssertionError)}\n */\nlet errorHandler_ = exports.DEFAULT_ERROR_HANDLER;\n\n\n/**\n * Does simple python-style string substitution.\n * subs(\"foo%s hot%s\", \"bar\", \"dog\") becomes \"foobar hotdog\".\n * @param {string} pattern The string containing the pattern.\n * @param {!Array<*>} subs The items to substitute into the pattern.\n * @return {string} A copy of `str` in which each occurrence of\n *     `%s` has been replaced an argument from `var_args`.\n */\nfunction subs(pattern, subs) {\n  const splitParts = pattern.split('%s');\n  let returnString = '';\n\n  // Replace up to the last split part. We are inserting in the\n  // positions between split parts.\n  const subLast = splitParts.length - 1;\n  for (let i = 0; i < subLast; i++) {\n    // keep unsupplied as '%s'\n    const sub = (i < subs.length) ? subs[i] : '%s';\n    returnString += splitParts[i] + sub;\n  }\n  return returnString + splitParts[subLast];\n}\n\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {?Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {!Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {AssertionError} When the value is not a number.\n */\nfunction doAssertFailure(defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += ': ' + givenMessage;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += ': ' + defaultMessage;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new AssertionError('' + message, args || []);\n  errorHandler_(e);\n}\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!AssertionError)} errorHandler\n * @return {void}\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {AssertionError} When the condition evaluates to false.\n * @closurePrimitive {asserts.truthy}\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    doAssertFailure(\n        '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Checks if `value` is `null` or `undefined` if goog.asserts.ENABLE_ASSERTS is\n * true.\n *\n * @param {T} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {R} `value` with its type narrowed to exclude `null` and `undefined`.\n *\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n *\n * @throws {!AssertionError} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexports.assertExists = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && value == null) {\n    doAssertFailure(\n        'Expected to exist: %s.', [value], opt_message,\n        Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {void}\n * @throws {AssertionError} Failure.\n * @closurePrimitive {asserts.fail}\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    errorHandler_(new AssertionError(\n        'Failure' + (opt_message ? ': ' + opt_message : ''),\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {AssertionError} When the value is not a number.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && typeof value !== 'number') {\n    doAssertFailure(\n        'Expected number but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {AssertionError} When the value is not a string.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && typeof value !== 'string') {\n    doAssertFailure(\n        'Expected string but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {AssertionError} When the value is not a function.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && typeof value !== 'function') {\n    doAssertFailure(\n        'Expected function but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {AssertionError} When the value is not an object.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    doAssertFailure(\n        'Expected object but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {AssertionError} When the value is not an array.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !Array.isArray(value)) {\n    doAssertFailure(\n        'Expected array but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {AssertionError} When the value is not a boolean.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && typeof value !== 'boolean') {\n    doAssertFailure(\n        'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {AssertionError} When the value is not an Element.\n * @closurePrimitive {asserts.matchesReturn}\n * @deprecated Use goog.asserts.dom.assertIsElement instead.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) ||\n       /** @type {!Node} */ (value).nodeType != NodeType.ELEMENT)) {\n    doAssertFailure(\n        'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * Do not use this to ensure a value is an HTMLElement or a subclass! Cross-\n * document DOM inherits from separate - though identical - browser classes, and\n * such a check will unexpectedly fail. Please use the methods in\n * goog.asserts.dom for these purposes.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n * @closurePrimitive {asserts.matchesReturn}\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    doAssertFailure(\n        'Expected instanceof %s but got %s.', [getType(type), getType(value)],\n        opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks whether the value is a finite number, if ENABLE_ASSERTS\n * is true.\n *\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {AssertionError} When the value is not a number, or is\n *     a non-finite number such as NaN, Infinity or -Infinity.\n * @return {number} The value initially passed in.\n */\nexports.assertFinite = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (typeof value != 'number' || !isFinite(value))) {\n    doAssertFailure(\n        'Expected %s to be a finite number but it is not.', [value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n */\nfunction getType(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return /** @type {string} */ (value.constructor.displayName) ||\n        value.constructor.name || Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n}\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Policy to convert strings to Trusted Types. See\n * https://github.com/WICG/trusted-types for details.\n */\n\ngoog.provide('goog.html.trustedtypes');\n\n\n/**\n * @define {string} Name for the Trusted Types policy used in Closure Safe\n * Types. Differs from `goog.TRUSTED_TYPES_POLICY_NAME` in that the latter is\n * also used for other purposes like the debug loader. If empty, Closure Safe\n * Types will not use Trusted Types. Default is `goog.TRUSTED_TYPES_POLICY_NAME`\n * plus the suffix `#html`, unless `goog.TRUSTED_TYPES_POLICY_NAME` is empty.\n * @package\n */\ngoog.html.trustedtypes.POLICY_NAME = goog.define(\n    'goog.html.trustedtypes.POLICY_NAME',\n    goog.TRUSTED_TYPES_POLICY_NAME ? goog.TRUSTED_TYPES_POLICY_NAME + '#html' :\n                                     '');\n\n\n/**\n * Cached result of goog.createTrustedTypesPolicy.\n * @type {?TrustedTypePolicy|undefined}\n * @private\n */\ngoog.html.trustedtypes.cachedPolicy_;\n\n\n/**\n * Creates a (singleton) Trusted Type Policy for Safe HTML Types.\n * @return {?TrustedTypePolicy}\n */\ngoog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse = function() {\n  'use strict';\n  if (!goog.html.trustedtypes.POLICY_NAME) {\n    // Binary not configured for Trusted Types.\n    return null;\n  }\n\n  if (goog.html.trustedtypes.cachedPolicy_ === undefined) {\n    goog.html.trustedtypes.cachedPolicy_ =\n        goog.createTrustedTypesPolicy(goog.html.trustedtypes.POLICY_NAME);\n  }\n\n  return goog.html.trustedtypes.cachedPolicy_;\n};\n\n// MOE:begin_strip\n// Ensure ES2021 inputs. go/transpile-js\nnull?.(6_6);\n// MOE:end_strip\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview The TrustedResourceUrl type and its builders.\n *\n * TODO(xtof): Link to document stating type contract.\n */\n\ngoog.provide('goog.html.TrustedResourceUrl');\n\ngoog.require('goog.asserts');\ngoog.require('goog.html.trustedtypes');\ngoog.require('goog.string.Const');\n\n\n\n/**\n * A URL which is under application control and from which script, CSS, and\n * other resources that represent executable code, can be fetched.\n *\n * Given that the URL can only be constructed from strings under application\n * control and is used to load resources, bugs resulting in a malformed URL\n * should not have a security impact and are likely to be easily detectable\n * during testing. Given the wide number of non-RFC compliant URLs in use,\n * stricter validation could prevent some applications from being able to use\n * this type.\n *\n * Instances of this type must be created via the factory method,\n * (`fromConstant`, `fromConstants`, `format` or `formatWithParams`), and not by\n * invoking its constructor. The constructor intentionally takes an extra\n * parameter that cannot be constructed outside of this file and the type is\n * immutable; hence only a default instance corresponding to the empty string\n * can be obtained via constructor invocation.\n *\n * Creating TrustedResourceUrl objects HAS SIDE-EFFECTS due to calling\n * Trusted Types Web API.\n *\n * @see goog.html.TrustedResourceUrl#fromConstant\n * @final\n * @struct\n */\ngoog.html.TrustedResourceUrl = class {\n  /**\n   * @private\n   * @param {!TrustedScriptURL|string} value\n   * @param {!Object} token package-internal implementation detail.\n   */\n  constructor(value, token) {\n    if (goog.DEBUG &&\n        token !== goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_) {\n      throw Error('TrustedResourceUrl is not meant to be built directly');\n    }\n\n    /**\n     * The contained value of this TrustedResourceUrl.  The field has a\n     * purposely ugly name to make (non-compiled) code that attempts to directly\n     * access this field stand out.\n     * @const\n     * @private {!TrustedScriptURL|string}\n     */\n    this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = value;\n  }\n\n  /**\n   * Returns a string-representation of this value.\n   *\n   * To obtain the actual string value wrapped in a TrustedResourceUrl, use\n   * `goog.html.TrustedResourceUrl.unwrap`.\n   *\n   * @return {string}\n   * @see goog.html.TrustedResourceUrl#unwrap\n   * @override\n   */\n  toString() {\n    return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + '';\n  }\n};\n\n\n/**\n * Creates a new TrustedResourceUrl with params added to URL. Both search and\n * hash params can be specified.\n *\n * @param {string|?Object<string, *>|undefined} searchParams Search parameters\n *     to add to URL. See goog.html.TrustedResourceUrl.stringifyParams_ for\n *     exact format definition.\n * @param {(string|?Object<string, *>)=} opt_hashParams Hash parameters to add\n *     to URL. See goog.html.TrustedResourceUrl.stringifyParams_ for exact\n *     format definition.\n * @return {!goog.html.TrustedResourceUrl} New TrustedResourceUrl with params.\n * @deprecated Use `safevalues.appendParams` and `safevalues.replaceFragment`\n *     instead.\n */\ngoog.html.TrustedResourceUrl.prototype.cloneWithParams = function(\n    searchParams, opt_hashParams) {\n  'use strict';\n  var url = goog.html.TrustedResourceUrl.unwrap(this);\n  var parts = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(url);\n  var urlBase = parts[1];\n  var urlSearch = parts[2] || '';\n  var urlHash = parts[3] || '';\n\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(\n          urlBase +\n          goog.html.TrustedResourceUrl.stringifyParams_(\n              '?', urlSearch, searchParams) +\n          goog.html.TrustedResourceUrl.stringifyParams_(\n              '#', urlHash, opt_hashParams));\n};\n\n/**\n * Performs a runtime check that the provided object is indeed a\n * TrustedResourceUrl object, and returns its value.\n *\n * @param {!goog.html.TrustedResourceUrl} trustedResourceUrl The object to\n *     extract from.\n * @return {string} The trustedResourceUrl object's contained string, unless\n *     the run-time type check fails. In that case, `unwrap` returns an\n *     innocuous string, or, if assertions are enabled, throws\n *     `goog.asserts.AssertionError`.\n * @deprecated Use `safevalues.unwrapResourceUrl` and `toString()` instead\n */\ngoog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {\n  'use strict';\n  return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(trustedResourceUrl)\n      .toString();\n};\n\n\n/**\n * Unwraps value as TrustedScriptURL if supported or as a string if not.\n * @param {!goog.html.TrustedResourceUrl} trustedResourceUrl\n * @return {!TrustedScriptURL|string}\n * @see goog.html.TrustedResourceUrl.unwrap\n * @deprecated Use `safevalues.unwrapResourceUrl` instead.\n */\ngoog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function(\n    trustedResourceUrl) {\n  'use strict';\n  // Perform additional Run-time type-checking to ensure that\n  // trustedResourceUrl is indeed an instance of the expected type.  This\n  // provides some additional protection against security bugs due to\n  // application code that disables type checks.\n  // Specifically, the following checks are performed:\n  // 1. The object is an instance of the expected type.\n  // 2. The object is not an instance of a subclass.\n  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl &&\n      trustedResourceUrl.constructor === goog.html.TrustedResourceUrl) {\n    return trustedResourceUrl\n        .privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;\n  } else {\n    goog.asserts.fail(\n        'expected object of type TrustedResourceUrl, got \\'%s\\' of type %s',\n        trustedResourceUrl, goog.typeOf(trustedResourceUrl));\n    return 'type_error:TrustedResourceUrl';\n  }\n};\n\n\n/**\n * Creates a TrustedResourceUrl from a format string and arguments.\n *\n * The arguments for interpolation into the format string map labels to values.\n * Values of type `goog.string.Const` are interpolated without modifcation.\n * Values of other types are cast to string and encoded with\n * encodeURIComponent.\n *\n * `%{<label>}` markers are used in the format string to indicate locations\n * to be interpolated with the valued mapped to the given label. `<label>`\n * must contain only alphanumeric and `_` characters.\n *\n * The format string must match goog.html.TrustedResourceUrl.BASE_URL_.\n *\n * Example usage:\n *\n *    var url = goog.html.TrustedResourceUrl.format(goog.string.Const.from(\n *        'https://www.google.com/search?q=%{query}'), {'query': searchTerm});\n *\n *    var url = goog.html.TrustedResourceUrl.format(goog.string.Const.from(\n *        '//www.youtube.com/v/%{videoId}?hl=en&fs=1%{autoplay}'), {\n *        'videoId': videoId,\n *        'autoplay': opt_autoplay ?\n *            goog.string.Const.from('&autoplay=1') : goog.string.Const.EMPTY\n *    });\n *\n * While this function can be used to create a TrustedResourceUrl from only\n * constants, fromConstant() and fromConstants() are generally preferable for\n * that purpose.\n *\n * @param {!goog.string.Const} format The format string.\n * @param {!Object<string, (string|number|!goog.string.Const)>} args Mapping\n *     of labels to values to be interpolated into the format string.\n *     goog.string.Const values are interpolated without encoding.\n * @return {!goog.html.TrustedResourceUrl}\n * @throws {!Error} On an invalid format string or if a label used in the\n *     the format string is not present in args.\n * @deprecated Use the `safevalues.trustedResourceUrl` template string literal\n *     builder instead.\n */\ngoog.html.TrustedResourceUrl.format = function(format, args) {\n  'use strict';\n  var formatStr = goog.string.Const.unwrap(format);\n  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {\n    throw new Error('Invalid TrustedResourceUrl format: ' + formatStr);\n  }\n  var result = formatStr.replace(\n      goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {\n        'use strict';\n        if (!Object.prototype.hasOwnProperty.call(args, id)) {\n          throw new Error(\n              'Found marker, \"' + id + '\", in format string, \"' + formatStr +\n              '\", but no valid label mapping found ' +\n              'in args: ' + JSON.stringify(args));\n        }\n        var arg = args[id];\n        if (arg instanceof goog.string.Const) {\n          return goog.string.Const.unwrap(arg);\n        } else {\n          return encodeURIComponent(String(arg));\n        }\n      });\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);\n};\n\n\n/**\n * @private @const {!RegExp}\n */\ngoog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\\w+)}/g;\n\n\n/**\n * The URL must be absolute, scheme-relative or path-absolute. So it must\n * start with:\n * - https:// followed by allowed origin characters.\n * - // followed by allowed origin characters.\n * - Any absolute or relative path.\n *\n * Based on\n * https://url.spec.whatwg.org/commit-snapshots/56b74ce7cca8883eab62e9a12666e2fac665d03d/#url-parsing\n * an initial / which is not followed by another / or \\ will end up in the \"path\n * state\" and from there it can only go to \"fragment state\" and \"query state\".\n *\n * We don't enforce a well-formed domain name. So '.' or '1.2' are valid.\n * That's ok because the origin comes from a compile-time constant.\n *\n * A regular expression is used instead of goog.uri for several reasons:\n * - Strictness. E.g. we don't want any userinfo component and we don't\n *   want '/./, nor \\' in the first path component.\n * - Small trusted base. goog.uri is generic and might need to change,\n *   reasoning about all the ways it can parse a URL now and in the future\n *   is error-prone.\n * - Code size. We expect many calls to .format(), many of which might\n *   not be using goog.uri.\n * - Simplicity. Using goog.uri would likely not result in simpler nor shorter\n *   code.\n * @private @const {!RegExp}\n */\ngoog.html.TrustedResourceUrl.BASE_URL_ = new RegExp(\n    '^((https:)?//[0-9a-z.:[\\\\]-]+/'  // Origin.\n        + '|/[^/\\\\\\\\]'                // Absolute path.\n        + '|[^:/\\\\\\\\%]+/'             // Relative path.\n        + '|[^:/\\\\\\\\%]*[?#]'          // Query string or fragment.\n        + '|about:blank#'             // about:blank with fragment.\n        + ')',\n    'i');\n\n/**\n * RegExp for splitting a URL into the base, search field, and hash field.\n *\n * @private @const {!RegExp}\n */\ngoog.html.TrustedResourceUrl.URL_PARAM_PARSER_ =\n    /^([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/;\n\n\n/**\n * Formats the URL same as TrustedResourceUrl.format and then adds extra URL\n * parameters.\n *\n * Example usage:\n *\n *     // Creates '//www.youtube.com/v/abc?autoplay=1' for videoId='abc' and\n *     // opt_autoplay=1. Creates '//www.youtube.com/v/abc' for videoId='abc'\n *     // and opt_autoplay=undefined.\n *     var url = goog.html.TrustedResourceUrl.formatWithParams(\n *         goog.string.Const.from('//www.youtube.com/v/%{videoId}'),\n *         {'videoId': videoId},\n *         {'autoplay': opt_autoplay});\n *\n * @param {!goog.string.Const} format The format string.\n * @param {!Object<string, (string|number|!goog.string.Const)>} args Mapping\n *     of labels to values to be interpolated into the format string.\n *     goog.string.Const values are interpolated without encoding.\n * @param {string|?Object<string, *>|undefined} searchParams Parameters to add\n *     to URL. See goog.html.TrustedResourceUrl.stringifyParams_ for exact\n *     format definition.\n * @param {(string|?Object<string, *>)=} opt_hashParams Hash parameters to add\n *     to URL. See goog.html.TrustedResourceUrl.stringifyParams_ for exact\n *     format definition.\n * @return {!goog.html.TrustedResourceUrl}\n * @throws {!Error} On an invalid format string or if a label used in the\n *     the format string is not present in args.\n * @deprecated Use `safevalues.trustedResourceUrl` and `safevalues.appendParams`\n *     instead.\n */\ngoog.html.TrustedResourceUrl.formatWithParams = function(\n    format, args, searchParams, opt_hashParams) {\n  'use strict';\n  var url = goog.html.TrustedResourceUrl.format(format, args);\n  return url.cloneWithParams(searchParams, opt_hashParams);\n};\n\n\n/**\n * Creates a TrustedResourceUrl object from a compile-time constant string.\n *\n * Compile-time constant strings are inherently program-controlled and hence\n * trusted.\n *\n * @param {!goog.string.Const} url A compile-time-constant string from which to\n *     create a TrustedResourceUrl.\n * @return {!goog.html.TrustedResourceUrl} A TrustedResourceUrl object\n *     initialized to `url`.\n * @deprecated Use `safevalues.trustedResourceUrl` instead.\n */\ngoog.html.TrustedResourceUrl.fromConstant = function(url) {\n  'use strict';\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(\n          goog.string.Const.unwrap(url));\n};\n\n\n/**\n * Creates a TrustedResourceUrl object from a compile-time constant strings.\n *\n * Compile-time constant strings are inherently program-controlled and hence\n * trusted.\n *\n * @param {!Array<!goog.string.Const>} parts Compile-time-constant strings from\n *     which to create a TrustedResourceUrl.\n * @return {!goog.html.TrustedResourceUrl} A TrustedResourceUrl object\n *     initialized to concatenation of `parts`.\n * @deprecated Use `safevalues.trustedResourceUrl` instead.\n */\ngoog.html.TrustedResourceUrl.fromConstants = function(parts) {\n  'use strict';\n  var unwrapped = '';\n  for (var i = 0; i < parts.length; i++) {\n    unwrapped += goog.string.Const.unwrap(parts[i]);\n  }\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);\n};\n\n\n/**\n * Token used to ensure that object is created only from this file. No code\n * outside of this file can access this token.\n * @private {!Object}\n * @const\n */\ngoog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};\n\n\n/**\n * Package-internal utility method to create TrustedResourceUrl instances.\n *\n * @param {string} url The string to initialize the TrustedResourceUrl object\n *     with.\n * @return {!goog.html.TrustedResourceUrl} The initialized TrustedResourceUrl\n *     object.\n * @package\n */\ngoog.html.TrustedResourceUrl\n    .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {\n  'use strict';\n  /** @noinline */\n  const noinlineUrl = url;\n  const policy = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();\n  const value = policy ? policy.createScriptURL(noinlineUrl) : noinlineUrl;\n  return new goog.html.TrustedResourceUrl(\n      value, goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_);\n};\n\n\n/**\n * Stringifies the passed params to be used as either a search or hash field of\n * a URL.\n *\n * @param {string} prefix The prefix character for the given field ('?' or '#').\n * @param {string} currentString The existing field value (including the prefix\n *     character, if the field is present).\n * @param {string|?Object<string, *>|undefined} params The params to set or\n *     append to the field.\n * - If `undefined` or `null`, the field remains unchanged.\n * - If a string, then the string will be escaped and the field will be\n *   overwritten with that value.\n * - If an Object, that object is treated as a set of key-value pairs to be\n *   appended to the current field. Note that JavaScript doesn't guarantee the\n *   order of values in an object which might result in non-deterministic order\n *   of the parameters. However, browsers currently preserve the order. The\n *   rules for each entry:\n *   - If an array, it will be processed as if each entry were an additional\n *     parameter with exactly the same key, following the same logic below.\n *   - If `undefined` or `null`, it will be skipped.\n *   - Otherwise, it will be turned into a string, escaped, and appended.\n * @return {string}\n * @private\n */\ngoog.html.TrustedResourceUrl.stringifyParams_ = function(\n    prefix, currentString, params) {\n  'use strict';\n  if (params == null) {\n    // Do not modify the field.\n    return currentString;\n  }\n  if (typeof params === 'string') {\n    // Set field to the passed string.\n    return params ? prefix + encodeURIComponent(params) : '';\n  }\n  // Add on parameters to field from key-value object.\n  for (var key in params) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty#Using_hasOwnProperty_as_a_property_name\n    if (Object.prototype.hasOwnProperty.call(params, key)) {\n      var value = params[key];\n      var outputValues = Array.isArray(value) ? value : [value];\n      for (var i = 0; i < outputValues.length; i++) {\n        var outputValue = outputValues[i];\n        if (outputValue != null) {\n          if (!currentString) {\n            currentString = prefix;\n          }\n          currentString += (currentString.length > prefix.length ? '&' : '') +\n              encodeURIComponent(key) + '=' +\n              encodeURIComponent(String(outputValue));\n        }\n      }\n    }\n  }\n  return currentString;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n/**\n * @fileoverview The SafeHtml type and its builders.\n *\n * TODO(xtof): Link to document stating type contract.\n */\n\ngoog.module('goog.html.SafeHtml');\ngoog.module.declareLegacyNamespace();\n\nconst Const = goog.require('goog.string.Const');\nconst SafeStyle = goog.require('goog.html.SafeStyle');\nconst SafeStyleSheet = goog.require('goog.html.SafeStyleSheet');\nconst TagName = goog.require('goog.dom.TagName');\nconst TrustedResourceUrl = goog.require('goog.html.TrustedResourceUrl');\nconst asserts = goog.require('goog.asserts');\nconst googArray = goog.require('goog.array');\nconst googObject = goog.require('goog.object');\nconst internal = goog.require('goog.string.internal');\nconst tags = goog.require('goog.dom.tags');\nconst trustedtypes = goog.require('goog.html.trustedtypes');\nconst {SafeUrl, sanitizeUrl, unwrapUrl} = goog.require('safevalues.for_closure');\n\n/**\n * Token used to ensure that object is created only from this file. No code\n * outside of this file can access this token.\n * @type {!Object}\n * @const\n */\nconst CONSTRUCTOR_TOKEN_PRIVATE = {};\n\n/**\n * A string that is safe to use in HTML context in DOM APIs and HTML documents.\n *\n * A SafeHtml is a string-like object that carries the security type contract\n * that its value as a string will not cause untrusted script execution when\n * evaluated as HTML in a browser.\n *\n * Values of this type are guaranteed to be safe to use in HTML contexts,\n * such as, assignment to the innerHTML DOM property, or interpolation into\n * a HTML template in HTML PC_DATA context, in the sense that the use will not\n * result in a Cross-Site-Scripting vulnerability.\n *\n * Instances of this type must be created via the factory methods\n * (`SafeHtml.create`, `SafeHtml.htmlEscape`),\n * etc and not by invoking its constructor. The constructor intentionally takes\n * an extra parameter that cannot be constructed outside of this file and the\n * type is immutable; hence only a default instance corresponding to the empty\n * string can be obtained via constructor invocation.\n *\n * Creating SafeHtml objects HAS SIDE-EFFECTS due to calling Trusted Types Web\n * API.\n *\n * Note that there is no `SafeHtml.fromConstant`. The reason is that\n * the following code would create an unsafe HTML:\n *\n * ```\n * SafeHtml.concat(\n *     SafeHtml.fromConstant(Const.from('<script>')),\n *     SafeHtml.htmlEscape(userInput),\n *     SafeHtml.fromConstant(Const.from('<\\/script>')));\n * ```\n *\n * There's `goog.dom.constHtmlToNode` to create a node from constant strings\n * only.\n *\n * @see SafeHtml.create\n * @see SafeHtml.htmlEscape\n * @final\n * @struct\n */\nclass SafeHtml {\n  /**\n   * @private\n   * @param {!TrustedHTML|string} value\n   * @param {!Object} token package-internal implementation detail.\n   */\n  constructor(value, token) {\n    if (goog.DEBUG && token !== CONSTRUCTOR_TOKEN_PRIVATE) {\n      throw Error('SafeHtml is not meant to be built directly');\n    }\n\n    /**\n     * The contained value of this SafeHtml.  The field has a purposely ugly\n     * name to make (non-compiled) code that attempts to directly access this\n     * field stand out.\n     * @const\n     * @private {!TrustedHTML|string}\n     */\n    this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = value;\n  }\n\n\n  /**\n   * Returns a string-representation of this value.\n   *\n   * To obtain the actual string value wrapped in a SafeHtml, use\n   * `SafeHtml.unwrap`.\n   *\n   * @return {string}\n   * @see SafeHtml.unwrap\n   * @override\n   */\n  toString() {\n    return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();\n  }\n\n  /**\n   * Performs a runtime check that the provided object is indeed a SafeHtml\n   * object, and returns its value.\n   * @param {!SafeHtml} safeHtml The object to extract from.\n   * @return {string} The SafeHtml object's contained string, unless the\n   *     run-time type check fails. In that case, `unwrap` returns an innocuous\n   *     string, or, if assertions are enabled, throws\n   *     `asserts.AssertionError`.\n   * @deprecated Use `safevalues.unwrapHtml` combined with `toString()` instead.\n   */\n  static unwrap(safeHtml) {\n    return SafeHtml.unwrapTrustedHTML(safeHtml).toString();\n  }\n\n\n  /**\n   * Unwraps value as TrustedHTML if supported or as a string if not.\n   * @param {!SafeHtml} safeHtml\n   * @return {!TrustedHTML|string}\n   * @see SafeHtml.unwrap\n   * @deprecated Use `safevalues.unwrapHtml` instead.\n   */\n  static unwrapTrustedHTML(safeHtml) {\n    // Perform additional run-time type-checking to ensure that safeHtml is\n    // indeed an instance of the expected type.  This provides some additional\n    // protection against security bugs due to application code that disables\n    // type checks. Specifically, the following checks are performed:\n    // 1. The object is an instance of the expected type.\n    // 2. The object is not an instance of a subclass.\n    if (safeHtml instanceof SafeHtml && safeHtml.constructor === SafeHtml) {\n      return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n    } else {\n      asserts.fail(\n          `expected object of type SafeHtml, got '${safeHtml}' of type ` +\n          goog.typeOf(safeHtml));\n      return 'type_error:SafeHtml';\n    }\n  }\n\n  /**\n   * Returns HTML-escaped text as a SafeHtml object.\n   *\n   * @param {!SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n   *     the parameter is of type SafeHtml it is returned directly (no escaping\n   *     is done).\n   * @return {!SafeHtml} The escaped text, wrapped as a SafeHtml.\n   * @deprecated Use `safevalues.htmlEscape` instead.\n   */\n  static htmlEscape(textOrHtml) {\n    if (textOrHtml instanceof SafeHtml) {\n      return textOrHtml;\n    }\n    return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        internal.htmlEscape(String(textOrHtml)));\n  }\n\n\n  /**\n   * Returns HTML-escaped text as a SafeHtml object, with newlines changed to\n   * &lt;br&gt;.\n   * @param {!SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n   *     the parameter is of type SafeHtml it is returned directly (no escaping\n   *     is done).\n   * @return {!SafeHtml} The escaped text, wrapped as a SafeHtml.\n   * @deprecated Use `safevalues.htmlEscape` instead.\n   */\n  static htmlEscapePreservingNewlines(textOrHtml) {\n    if (textOrHtml instanceof SafeHtml) {\n      return textOrHtml;\n    }\n    const html = SafeHtml.htmlEscape(textOrHtml);\n    return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        internal.newLineToBr(SafeHtml.unwrap(html)));\n  }\n\n\n  /**\n   * Returns HTML-escaped text as a SafeHtml object, with newlines changed to\n   * &lt;br&gt; and escaping whitespace to preserve spatial formatting.\n   * Character entity #160 is used to make it safer for XML.\n   * @param {!SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n   *     the parameter is of type SafeHtml it is returned directly (no escaping\n   *     is done).\n   * @return {!SafeHtml} The escaped text, wrapped as a SafeHtml.\n   * @deprecated Use `safevalues.htmlEscape` instead.\n   */\n  static htmlEscapePreservingNewlinesAndSpaces(textOrHtml) {\n    if (textOrHtml instanceof SafeHtml) {\n      return textOrHtml;\n    }\n    const html = SafeHtml.htmlEscape(textOrHtml);\n    return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        internal.whitespaceEscape(SafeHtml.unwrap(html)));\n  }\n\n  /**\n   * Creates a SafeHtml content consisting of a tag with optional attributes and\n   * optional content.\n   *\n   * For convenience tag names and attribute names are accepted as regular\n   * strings, instead of Const. Nevertheless, you should not pass\n   * user-controlled values to these parameters. Note that these parameters are\n   * syntactically validated at runtime, and invalid values will result in\n   * an exception.\n   *\n   * Example usage:\n   *\n   * SafeHtml.create('br');\n   * SafeHtml.create('div', {'class': 'a'});\n   * SafeHtml.create('p', {}, 'a');\n   * SafeHtml.create('p', {}, SafeHtml.create('br'));\n   *\n   * SafeHtml.create('span', {\n   *   'style': {'margin': '0'}\n   * });\n   *\n   * To guarantee SafeHtml's type contract is upheld there are restrictions on\n   * attribute values and tag names.\n   *\n   * - For attributes which contain script code (on*), a Const is\n   *   required.\n   * - For attributes which contain style (style), a SafeStyle or a\n   *   SafeStyle.PropertyMap is required.\n   * - For attributes which are interpreted as URLs (e.g. src, href) a\n   *   SafeUrl, Const or string is required. If a string\n   *   is passed, it will be sanitized with sanitizeUrl().\n   * - For tags which can load code or set security relevant page metadata,\n   *   more specific SafeHtml.create*() functions must be used. Tags\n   *   which are not supported by this function are applet, base, embed, iframe,\n   *   link, math, meta, object, script, style, svg, and template.\n   *\n   * @param {!TagName|string} tagName The name of the tag. Only tag names\n   *     consisting of [a-zA-Z0-9-] are allowed. Tag names documented above are\n   *     disallowed.\n   * @param {?Object<string, ?SafeHtml.AttributeValue>=} attributes  Mapping\n   *     from attribute names to their values. Only attribute names consisting\n   *     of [a-zA-Z0-9-] are allowed. Value of null or undefined causes the\n   *     attribute to be omitted.\n   * @param {!SafeHtml.TextOrHtml_|\n   *     !Array<!SafeHtml.TextOrHtml_>=} content Content to HTML-escape and put\n   * inside the tag. This must be empty for void tags like <br>. Array elements\n   * are concatenated.\n   * @return {!SafeHtml} The SafeHtml content with the tag.\n   * @throws {!Error} If invalid tag name, attribute name, or attribute value is\n   *     provided.\n   * @throws {!asserts.AssertionError} If content for void tag is provided.\n   * @deprecated For large HTML chunks, use a recommended templating system like\n   *     Lit. For small chunks that are immediately rendered as HTML elements,\n   *     use native DOM APIs. For the rest, use `safevalues.createHtml`.\n   * More information:\n   *     go/goog.html-readme // LINE-INTERNAL\n   */\n  static create(tagName, attributes = undefined, content = undefined) {\n    SafeHtml.verifyTagName(String(tagName));\n    return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n        String(tagName), attributes, content);\n  }\n\n\n  /**\n   * Verifies if the tag name is valid and if it doesn't change the context.\n   * E.g. STRONG is fine but SCRIPT throws because it changes context. See\n   * SafeHtml.create for an explanation of allowed tags.\n   * @param {string} tagName\n   * @return {void}\n   * @throws {!Error} If invalid tag name is provided.\n   * @package\n   */\n  static verifyTagName(tagName) {\n    if (!VALID_NAMES_IN_TAG.test(tagName)) {\n      throw new Error(\n          SafeHtml.ENABLE_ERROR_MESSAGES ? `Invalid tag name <${tagName}>.` :\n                                           '');\n    }\n    if (tagName.toUpperCase() in NOT_ALLOWED_TAG_NAMES) {\n      throw new Error(\n          SafeHtml.ENABLE_ERROR_MESSAGES ?\n\n              `Tag name <${tagName}> is not allowed for SafeHtml.` :\n              '');\n    }\n  }\n\n\n  /**\n   * Creates a SafeHtml representing an iframe tag.\n   *\n   * This by default restricts the iframe as much as possible by setting the\n   * sandbox attribute to the empty string. If the iframe requires less\n   * restrictions, set the sandbox attribute as tight as possible, but do not\n   * rely on the sandbox as a security feature because it is not supported by\n   * older browsers. If a sandbox is essential to security (e.g. for third-party\n   * frames), use createSandboxIframe which checks for browser support.\n   *\n   * @see https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#attr-sandbox\n   *\n   * @param {?TrustedResourceUrl=} src The value of the src\n   *     attribute. If null or undefined src will not be set.\n   * @param {?SafeHtml=} srcdoc The value of the srcdoc attribute.\n   *     If null or undefined srcdoc will not be set.\n   * @param {?Object<string, ?SafeHtml.AttributeValue>=} attributes  Mapping\n   *     from attribute names to their values. Only attribute names consisting\n   *     of [a-zA-Z0-9-] are allowed. Value of null or undefined causes the\n   *     attribute to be omitted.\n   * @param {!SafeHtml.TextOrHtml_|\n   *     !Array<!SafeHtml.TextOrHtml_>=} content Content to HTML-escape and put\n   * inside the tag. Array elements are concatenated.\n   * @return {!SafeHtml} The SafeHtml content with the tag.\n   * @throws {!Error} If invalid tag name, attribute name, or attribute value is\n   *     provided. If attributes\n   * contains the src or srcdoc attributes.\n   */\n  static createIframe(\n      src = undefined, srcdoc = undefined, attributes = undefined,\n      content = undefined) {\n    if (src) {\n      // Check whether this is really TrustedResourceUrl.\n      TrustedResourceUrl.unwrap(src);\n    }\n\n    const fixedAttributes = {};\n    fixedAttributes['src'] = src || null;\n    fixedAttributes['srcdoc'] = srcdoc && SafeHtml.unwrap(srcdoc);\n    const defaultAttributes = {'sandbox': ''};\n    const combinedAttrs = SafeHtml.combineAttributes(\n        fixedAttributes, defaultAttributes, attributes);\n    return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n        'iframe', combinedAttrs, content);\n  }\n\n\n  /**\n   * Creates a SafeHtml representing a sandboxed iframe tag.\n   *\n   * The sandbox attribute is enforced in its most restrictive mode, an empty\n   * string. Consequently, the security requirements for the src and srcdoc\n   * attributes are relaxed compared to SafeHtml.createIframe. This function\n   * will throw on browsers that do not support the sandbox attribute, as\n   * determined by SafeHtml.canUseSandboxIframe.\n   *\n   * The SafeHtml returned by this function can trigger downloads with no\n   * user interaction on Chrome (though only a few, further attempts are\n   * blocked). Firefox and IE will block all downloads from the sandbox.\n   *\n   * @see https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#attr-sandbox\n   * @see https://lists.w3.org/Archives/Public/public-whatwg-archive/2013Feb/0112.html\n   *\n   * @param {string|!SafeUrl=} src The value of the src\n   *     attribute. If null or undefined src will not be set.\n   * @param {string=} srcdoc The value of the srcdoc attribute.\n   *     If null or undefined srcdoc will not be set. Will not be sanitized.\n   * @param {!Object<string, ?SafeHtml.AttributeValue>=} attributes  Mapping\n   *     from attribute names to their values. Only attribute names consisting\n   *     of [a-zA-Z0-9-] are allowed. Value of null or undefined causes the\n   *     attribute to be omitted.\n   * @param {!SafeHtml.TextOrHtml_|\n   *     !Array<!SafeHtml.TextOrHtml_>=} content Content to HTML-escape and put\n   * inside the tag. Array elements are concatenated.\n   * @return {!SafeHtml} The SafeHtml content with the tag.\n   * @throws {!Error} If invalid tag name, attribute name, or attribute value is\n   *     provided. If attributes\n   * contains the src, srcdoc or sandbox attributes. If browser does not support\n   * the sandbox attribute on iframe.\n   */\n  static createSandboxIframe(\n      src = undefined, srcdoc = undefined, attributes = undefined,\n      content = undefined) {\n    if (!SafeHtml.canUseSandboxIframe()) {\n      throw new Error(\n          SafeHtml.ENABLE_ERROR_MESSAGES ?\n              'The browser does not support sandboxed iframes.' :\n              '');\n    }\n\n    const fixedAttributes = {};\n    if (src) {\n      // Note that sanitize is a no-op on SafeUrl.\n      fixedAttributes['src'] = unwrapUrl(sanitizeUrl(src));\n    } else {\n      fixedAttributes['src'] = null;\n    }\n    fixedAttributes['srcdoc'] = srcdoc || null;\n    fixedAttributes['sandbox'] = '';\n    const combinedAttrs =\n        SafeHtml.combineAttributes(fixedAttributes, {}, attributes);\n    return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n        'iframe', combinedAttrs, content);\n  }\n\n\n  /**\n   * Checks if the user agent supports sandboxed iframes.\n   * @return {boolean}\n   */\n  static canUseSandboxIframe() {\n    return goog.global['HTMLIFrameElement'] &&\n        ('sandbox' in goog.global['HTMLIFrameElement'].prototype);\n  }\n\n\n  /**\n   * Creates a SafeHtml representing a script tag with the src attribute.\n   * @param {!TrustedResourceUrl} src The value of the src\n   * attribute.\n   * @param {?Object<string, ?SafeHtml.AttributeValue>=}\n   * attributes\n   *     Mapping from attribute names to their values. Only attribute names\n   *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined\n   *     causes the attribute to be omitted.\n   * @return {!SafeHtml} The SafeHtml content with the tag.\n   * @throws {!Error} If invalid attribute name or value is provided. If\n   *     attributes  contains the\n   * src attribute.\n   * @deprecated Use `safevalues.scriptUrlToHtml` instead.\n   */\n  static createScriptSrc(src, attributes = undefined) {\n    // TODO(mlourenco): The charset attribute should probably be blocked. If\n    // its value is attacker controlled, the script contains attacker controlled\n    // sub-strings (even if properly escaped) and the server does not set\n    // charset then XSS is likely possible.\n    // https://html.spec.whatwg.org/multipage/scripting.html#dom-script-charset\n\n    // Check whether this is really TrustedResourceUrl.\n    TrustedResourceUrl.unwrap(src);\n\n    const fixedAttributes = {'src': src};\n    const defaultAttributes = {};\n    const combinedAttrs = SafeHtml.combineAttributes(\n        fixedAttributes, defaultAttributes, attributes);\n    return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n        'script', combinedAttrs);\n  }\n\n\n  /**\n   * Creates a SafeHtml representing a style tag. The type attribute is set\n   * to \"text/css\".\n   * @param {!SafeStyleSheet|!Array<!SafeStyleSheet>}\n   *     styleSheet Content to put inside the tag. Array elements are\n   *     concatenated.\n   * @param {?Object<string, ?SafeHtml.AttributeValue>=} attributes  Mapping\n   *     from attribute names to their values. Only attribute names consisting\n   *     of [a-zA-Z0-9-] are allowed. Value of null or undefined causes the\n   *     attribute to be omitted.\n   * @return {!SafeHtml} The SafeHtml content with the tag.\n   * @throws {!Error} If invalid attribute name or attribute value is provided.\n   *     If attributes  contains the\n   *     type attribute.\n   */\n  static createStyle(styleSheet, attributes = undefined) {\n    const fixedAttributes = {'type': 'text/css'};\n    const defaultAttributes = {};\n    const combinedAttrs = SafeHtml.combineAttributes(\n        fixedAttributes, defaultAttributes, attributes);\n\n    let content = '';\n    styleSheet = googArray.concat(styleSheet);\n    for (let i = 0; i < styleSheet.length; i++) {\n      content += SafeStyleSheet.unwrap(styleSheet[i]);\n    }\n    // Convert to SafeHtml so that it's not HTML-escaped. This is safe because\n    // as part of its contract, SafeStyleSheet should have no dangerous '<'.\n    const htmlContent =\n        SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content);\n    return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n        'style', combinedAttrs, htmlContent);\n  }\n\n\n  /**\n   * Creates a SafeHtml representing a meta refresh tag.\n   * @param {!SafeUrl|string} url Where to redirect. If a string is\n   *     passed, it will be sanitized with sanitizeUrl().\n   * @param {number=} secs Number of seconds until the page should be\n   *     reloaded. Will be set to 0 if unspecified.\n   * @return {!SafeHtml} The SafeHtml content with the tag.\n   */\n  static createMetaRefresh(url, secs = undefined) {\n    // Note that sanitize is a no-op on SafeUrl.\n    let unwrappedUrl = unwrapUrl(sanitizeUrl(url));\n\n    const attributes = {\n      'http-equiv': 'refresh',\n      'content': (secs || 0) + '; url=' + unwrappedUrl,\n    };\n\n    // This function will handle the HTML escaping for attributes.\n    return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n        'meta', attributes);\n  }\n\n  /**\n   * Creates a new SafeHtml object by joining the parts with separator.\n   * @param {!SafeHtml.TextOrHtml_} separator\n   * @param {!Array<!SafeHtml.TextOrHtml_|\n   *     !Array<!SafeHtml.TextOrHtml_>>} parts Parts to join. If a part\n   *     contains an array then each member of this array is also joined with\n   * the separator.\n   * @return {!SafeHtml}\n   * @deprecated Use `safevalues.joinHtmls` instead.\n   */\n  static join(separator, parts) {\n    const separatorHtml = SafeHtml.htmlEscape(separator);\n    const content = [];\n\n    /**\n     * @param {!SafeHtml.TextOrHtml_|\n     *     !Array<!SafeHtml.TextOrHtml_>} argument\n     */\n    const addArgument = (argument) => {\n      if (Array.isArray(argument)) {\n        argument.forEach(addArgument);\n      } else {\n        const html = SafeHtml.htmlEscape(argument);\n        content.push(SafeHtml.unwrap(html));\n      }\n    };\n\n    parts.forEach(addArgument);\n    return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        content.join(SafeHtml.unwrap(separatorHtml)));\n  }\n\n\n  /**\n   * Creates a new SafeHtml object by concatenating values.\n   * @param {...(!SafeHtml.TextOrHtml_|\n   *     !Array<!SafeHtml.TextOrHtml_>)} var_args Values to concatenate.\n   * @return {!SafeHtml}\n   * @deprecated Use `safevalues.concatHtmls` instead.\n   */\n  static concat(var_args) {\n    return SafeHtml.join(SafeHtml.EMPTY, Array.prototype.slice.call(arguments));\n  }\n\n  /**\n   * Package-internal utility method to create SafeHtml instances.\n   *\n   * @param {string} html The string to initialize the SafeHtml object with.\n   * @return {!SafeHtml} The initialized SafeHtml object.\n   * @package\n   */\n  static createSafeHtmlSecurityPrivateDoNotAccessOrElse(html) {\n    /** @noinline */\n    const noinlineHtml = html;\n    const policy = trustedtypes.getPolicyPrivateDoNotAccessOrElse();\n    const trustedHtml = policy ? policy.createHTML(noinlineHtml) : noinlineHtml;\n    return new SafeHtml(trustedHtml, CONSTRUCTOR_TOKEN_PRIVATE);\n  }\n\n\n  /**\n   * Like create() but does not restrict which tags can be constructed.\n   *\n   * @param {string} tagName Tag name. Set or validated by caller.\n   * @param {?Object<string, ?SafeHtml.AttributeValue>=} attributes\n   * @param {(!SafeHtml.TextOrHtml_|\n   *     !Array<!SafeHtml.TextOrHtml_>)=} content\n   * @return {!SafeHtml}\n   * @throws {!Error} If invalid or unsafe attribute name or value is provided.\n   * @throws {!asserts.AssertionError} If content for void tag is provided.\n   * @package\n   */\n  static createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      tagName, attributes = undefined, content = undefined) {\n    let result = `<${tagName}`;\n    result += SafeHtml.stringifyAttributes(tagName, attributes);\n\n    if (content == null) {\n      content = [];\n    } else if (!Array.isArray(content)) {\n      content = [content];\n    }\n\n    if (tags.isVoidTag(tagName.toLowerCase())) {\n      asserts.assert(\n          !content.length, `Void tag <${tagName}> does not allow content.`);\n      result += '>';\n    } else {\n      const html = SafeHtml.concat(content);\n      result += '>' + SafeHtml.unwrap(html) + '</' + tagName + '>';\n    }\n\n    return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result);\n  }\n\n\n  /**\n   * Creates a string with attributes to insert after tagName.\n   * @param {string} tagName\n   * @param {?Object<string, ?SafeHtml.AttributeValue>=} attributes\n   * @return {string} Returns an empty string if there are no attributes,\n   *     returns a string starting with a space otherwise.\n   * @throws {!Error} If attribute value is unsafe for the given tag and\n   *     attribute.\n   * @package\n   */\n  static stringifyAttributes(tagName, attributes = undefined) {\n    let result = '';\n    if (attributes) {\n      for (let name in attributes) {\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty#Using_hasOwnProperty_as_a_property_name\n        if (Object.prototype.hasOwnProperty.call(attributes, name)) {\n          if (!VALID_NAMES_IN_TAG.test(name)) {\n            throw new Error(\n                SafeHtml.ENABLE_ERROR_MESSAGES ?\n                    `Invalid attribute name \"${name}\".` :\n                    '');\n          }\n          const value = attributes[name];\n          if (value == null) {\n            continue;\n          }\n          result += ' ' + getAttrNameAndValue(tagName, name, value);\n        }\n      }\n    }\n    return result;\n  }\n\n\n  /**\n   * @param {!Object<string, ?SafeHtml.AttributeValue>} fixedAttributes\n   * @param {!Object<string, string>} defaultAttributes\n   * @param {?Object<string, ?SafeHtml.AttributeValue>=} attributes  Optional\n   *     attributes passed to create*().\n   * @return {!Object<string, ?SafeHtml.AttributeValue>}\n   * @throws {!Error} If attributes contains an attribute with the same name as\n   *     an attribute in fixedAttributes.\n   * @package\n   */\n  static combineAttributes(\n      fixedAttributes, defaultAttributes, attributes = undefined) {\n    const combinedAttributes = {};\n\n    for (const name in fixedAttributes) {\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty#Using_hasOwnProperty_as_a_property_name\n      if (Object.prototype.hasOwnProperty.call(fixedAttributes, name)) {\n        asserts.assert(name.toLowerCase() == name, 'Must be lower case');\n        combinedAttributes[name] = fixedAttributes[name];\n      }\n    }\n    for (const name in defaultAttributes) {\n      if (Object.prototype.hasOwnProperty.call(defaultAttributes, name)) {\n        asserts.assert(name.toLowerCase() == name, 'Must be lower case');\n        combinedAttributes[name] = defaultAttributes[name];\n      }\n    }\n\n    if (attributes) {\n      for (const name in attributes) {\n        if (Object.prototype.hasOwnProperty.call(attributes, name)) {\n          const nameLower = name.toLowerCase();\n          if (nameLower in fixedAttributes) {\n            throw new Error(\n                SafeHtml.ENABLE_ERROR_MESSAGES ?\n                    `Cannot override \"${nameLower}\" attribute, got \"` + name +\n                        '\" with value \"' + attributes[name] + '\"' :\n                    '');\n          }\n          if (nameLower in defaultAttributes) {\n            delete combinedAttributes[nameLower];\n          }\n          combinedAttributes[name] = attributes[name];\n        }\n      }\n    }\n\n    return combinedAttributes;\n  }\n}\n\n\n/**\n * @define {boolean} Whether to strip out error messages or to leave them in.\n */\nSafeHtml.ENABLE_ERROR_MESSAGES =\n    goog.define('goog.html.SafeHtml.ENABLE_ERROR_MESSAGES', goog.DEBUG);\n\n\n/**\n * Whether the `style` attribute is supported. Set to false to avoid the byte\n * weight of `SafeStyle` where unneeded. An error will be thrown if\n * the `style` attribute is used.\n * @define {boolean}\n */\nSafeHtml.SUPPORT_STYLE_ATTRIBUTE =\n    goog.define('goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE', true);\n\n\n/**\n * Shorthand for union of types that can sensibly be converted to strings\n * or might already be SafeHtml.\n * @private\n * @typedef {string|number|boolean|!SafeHtml|!Const}\n * @deprecated Use an explicit type instead.\n */\nSafeHtml.TextOrHtml_;\n\n\n/**\n * Coerces an arbitrary object into a SafeHtml object.\n *\n * If `textOrHtml` is already of type `SafeHtml`, the same\n * object is returned. Otherwise, `textOrHtml` is coerced to string, and\n * HTML-escaped.\n *\n * @param {!SafeHtml.TextOrHtml_} textOrHtml The text or SafeHtml to\n *     coerce.\n * @return {!SafeHtml} The resulting SafeHtml object.\n * @deprecated Use SafeHtml.htmlEscape.\n */\nSafeHtml.from = SafeHtml.htmlEscape;\n\n\n/**\n * @const\n */\nconst VALID_NAMES_IN_TAG = /^[a-zA-Z0-9-]+$/;\n\n\n/**\n * Set of attributes containing URL as defined at\n * http://www.w3.org/TR/html5/index.html#attributes-1.\n * @const {!Object<string,boolean>}\n */\nconst URL_ATTRIBUTES = googObject.createSet(\n    'action', 'cite', 'data', 'formaction', 'href', 'manifest', 'poster',\n    'src');\n\n\n/**\n * Tags which are unsupported via create(). They might be supported via a\n * tag-specific create method. These are tags which might require a\n * TrustedResourceUrl in one of their attributes or a restricted type for\n * their content.\n * @const {!Object<string,boolean>}\n */\nconst NOT_ALLOWED_TAG_NAMES = googObject.createSet(\n    TagName.APPLET, TagName.BASE, TagName.EMBED, TagName.IFRAME, TagName.LINK,\n    TagName.MATH, TagName.META, TagName.OBJECT, TagName.SCRIPT, TagName.STYLE,\n    TagName.SVG, TagName.TEMPLATE);\n\n\n/**\n * @typedef {string|number|\n *     !SafeUrl|!SafeStyle|!Const|!TrustedResourceUrl|!SafeHtml|\n *     !SafeStyle.PropertyMap|undefined|null}\n * @deprecated Use an explicit type instead.\n */\nSafeHtml.AttributeValue;\n\n\n/**\n * @param {string} tagName The tag name.\n * @param {string} name The attribute name.\n * @param {!SafeHtml.AttributeValue} value The attribute value.\n * @return {string} A \"name=value\" string.\n * @throws {!Error} If attribute value is unsafe for the given tag and\n *     attribute.\n * @private\n */\nfunction getAttrNameAndValue(tagName, name, value) {\n  // If it's goog.string.Const, allow any valid attribute name.\n  if (value instanceof Const) {\n    value = Const.unwrap(value);\n  } else if (name.toLowerCase() == 'style') {\n    if (SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {\n      value = getStyleValue(value);\n    } else {\n      throw new Error(\n          SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute \"style\" not supported.' :\n                                           '');\n    }\n  } else if (/^on/i.test(name)) {\n    // TODO(jakubvrana): Disallow more attributes with a special meaning.\n    throw new Error(\n        SafeHtml.ENABLE_ERROR_MESSAGES ? `Attribute \"${name}` +\n                '\" requires goog.string.Const value, \"' + value + '\" given.' :\n                                         '');\n    // URL attributes handled differently according to tag.\n  } else if (name.toLowerCase() in URL_ATTRIBUTES) {\n    if (value instanceof TrustedResourceUrl) {\n      value = TrustedResourceUrl.unwrap(value);\n    } else if (value instanceof SafeUrl) {\n      value = unwrapUrl(value);\n    } else if (typeof value === 'string') {\n      value = sanitizeUrl(value).toString();\n    } else {\n      throw new Error(\n          SafeHtml.ENABLE_ERROR_MESSAGES ?\n              `Attribute \"${name}\" on tag \"${tagName}` +\n                  '\" requires safevalues.SafeUrl, goog.string.Const, or' +\n                  ' string, value \"' + value + '\" given.' :\n              '');\n    }\n  }\n\n  asserts.assert(\n      value instanceof SafeUrl || value instanceof TrustedResourceUrl ||\n          value instanceof SafeStyle || value instanceof SafeHtml ||\n          typeof value === 'string' || typeof value === 'number',\n      'String or number value expected, got ' + (typeof value) +\n          ' with value: ' + value);\n  return `${name}=\"` + internal.htmlEscape(String(value)) + '\"';\n}\n\n\n/**\n * Gets value allowed in \"style\" attribute.\n * @param {!SafeHtml.AttributeValue} value It could be SafeStyle or a\n *     map which will be passed to SafeStyle.create.\n * @return {string} Unwrapped value.\n * @throws {!Error} If string value is given.\n * @private\n */\nfunction getStyleValue(value) {\n  if (!goog.isObject(value)) {\n    throw new Error(\n        SafeHtml.ENABLE_ERROR_MESSAGES ?\n            'The \"style\" attribute requires goog.html.SafeStyle or map ' +\n                'of style properties, ' + (typeof value) + ' given: ' + value :\n            '');\n  }\n  if (!(value instanceof SafeStyle)) {\n    // Process the property bag into a style object.\n    value = SafeStyle.create(value);\n  }\n  return SafeStyle.unwrap(value);\n}\n\n\n/**\n * A SafeHtml instance corresponding to the HTML doctype: \"<!DOCTYPE html>\".\n * @const {!SafeHtml}\n */\nSafeHtml.DOCTYPE_HTML = /** @type {!SafeHtml} */ ({\n  // NOTE: this compiles to nothing, but hides the possible side effect of\n  // SafeHtml creation (due to calling trustedTypes.createPolicy) from the\n  // compiler so that the entire call can be removed if the result is not used.\n  // MOE:begin_strip\n  // TODO(b/155299094): Refactor after adding compiler support.\n  // MOE:end_strip\n  valueOf: function() {\n    return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        '<!DOCTYPE html>');\n  },\n}.valueOf());\n\n/**\n * A SafeHtml instance corresponding to the empty string.\n * @const {!SafeHtml}\n * @deprecated Use `safevalues.EMPTY_HTML` instead.\n */\nSafeHtml.EMPTY = new SafeHtml(\n    (goog.global.trustedTypes && goog.global.trustedTypes.emptyHTML) || '',\n    CONSTRUCTOR_TOKEN_PRIVATE);\n\n/**\n * A SafeHtml instance corresponding to the <br> tag.\n * @const {!SafeHtml}\n * @deprecated Use `safevalues.createHtml('br')` instead.\n */\nSafeHtml.BR = /** @type {!SafeHtml} */ ({\n  // NOTE: this compiles to nothing, but hides the possible side effect of\n  // SafeHtml creation (due to calling trustedTypes.createPolicy) from the\n  // compiler so that the entire call can be removed if the result is not used.\n  // MOE:begin_strip\n  // TODO(b/155299094): Refactor after adding compiler support.\n  // MOE:end_strip\n  valueOf: function() {\n    return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse('<br>');\n  },\n}.valueOf());\n\n\nexports = SafeHtml;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities for string manipulation.\n */\n\n\n/**\n * Namespace for string utilities\n */\ngoog.provide('goog.string');\ngoog.provide('goog.string.Unicode');\n\ngoog.require('goog.string.internal');\ngoog.require('safevalues.dom');\ngoog.require('safevalues.restricted.reviewed');\n\n\n/**\n * @define {boolean} Enables HTML escaping of lowercase letter \"e\" which helps\n * with detection of double-escaping as this letter is frequently used.\n */\ngoog.string.DETECT_DOUBLE_ESCAPING =\n    goog.define('goog.string.DETECT_DOUBLE_ESCAPING', false);\n\n\n/**\n * @define {boolean} Whether to force non-dom html unescaping.\n */\ngoog.string.FORCE_NON_DOM_HTML_UNESCAPING =\n    goog.define('goog.string.FORCE_NON_DOM_HTML_UNESCAPING', false);\n\n\n/**\n * Common Unicode string characters.\n * @enum {string}\n */\ngoog.string.Unicode = {\n  NBSP: '\\xa0',\n  ZERO_WIDTH_SPACE: '\\u200b'  // This is equivalent to <wbr>.\n};\n\n\n/**\n * Fast prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix A string to look for at the start of `str`.\n * @return {boolean} True if `str` begins with `prefix`.\n */\ngoog.string.startsWith = goog.string.internal.startsWith;\n\n\n/**\n * Fast suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix`.\n */\ngoog.string.endsWith = goog.string.internal.endsWith;\n\n\n/**\n * Case-insensitive prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix  A string to look for at the end of `str`.\n * @return {boolean} True if `str` begins with `prefix` (ignoring\n *     case).\n */\ngoog.string.caseInsensitiveStartsWith =\n    goog.string.internal.caseInsensitiveStartsWith;\n\n\n/**\n * Case-insensitive suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix` (ignoring\n *     case).\n */\ngoog.string.caseInsensitiveEndsWith =\n    goog.string.internal.caseInsensitiveEndsWith;\n\n\n/**\n * Case-insensitive equality checker.\n * @param {string} str1 First string to check.\n * @param {string} str2 Second string to check.\n * @return {boolean} True if `str1` and `str2` are the same string,\n *     ignoring case.\n */\ngoog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;\n\n\n/**\n * Does simple python-style string substitution.\n * subs(\"foo%s hot%s\", \"bar\", \"dog\") becomes \"foobar hotdog\".\n * @param {string} str The string containing the pattern.\n * @param {...*} var_args The items to substitute into the pattern.\n * @return {string} A copy of `str` in which each occurrence of\n *     {@code %s} has been replaced an argument from `var_args`.\n */\ngoog.string.subs = function(str, var_args) {\n  'use strict';\n  const splitParts = str.split('%s');\n  let returnString = '';\n\n  const subsArguments = Array.prototype.slice.call(arguments, 1);\n  while (subsArguments.length &&\n         // Replace up to the last split part. We are inserting in the\n         // positions between split parts.\n         splitParts.length > 1) {\n    returnString += splitParts.shift() + subsArguments.shift();\n  }\n\n  return returnString + splitParts.join('%s');  // Join unused '%s'\n};\n\n\n/**\n * Converts multiple whitespace chars (spaces, non-breaking-spaces, new lines\n * and tabs) to a single space, and strips leading and trailing whitespace.\n * @param {string} str Input string.\n * @return {string} A copy of `str` with collapsed whitespace.\n */\ngoog.string.collapseWhitespace = function(str) {\n  'use strict';\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/[\\s\\xa0]+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n */\ngoog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;\n\n\n/**\n * Checks if a string is empty.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty.\n */\ngoog.string.isEmptyString = function(str) {\n  'use strict';\n  return str.length == 0;\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n *\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace instead.\n */\ngoog.string.isEmpty = goog.string.isEmptyOrWhitespace;\n\n\n/**\n * Checks if a string is null, undefined, empty or contains only whitespaces.\n * @param {*} str The string to check.\n * @return {boolean} Whether `str` is null, undefined, empty, or\n *     whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str))\n *     instead.\n */\ngoog.string.isEmptyOrWhitespaceSafe = function(str) {\n  'use strict';\n  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));\n};\n\n\n/**\n * Checks if a string is null, undefined, empty or contains only whitespaces.\n *\n * @param {*} str The string to check.\n * @return {boolean} Whether `str` is null, undefined, empty, or\n *     whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace instead.\n */\ngoog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;\n\n\n/**\n * Checks if a string is all breaking whitespace.\n * @param {string} str The string to check.\n * @return {boolean} Whether the string is all breaking whitespace.\n */\ngoog.string.isBreakingWhitespace = function(str) {\n  'use strict';\n  return !/[^\\t\\n\\r ]/.test(str);\n};\n\n\n/**\n * Checks if a string contains all letters.\n * @param {string} str string to check.\n * @return {boolean} True if `str` consists entirely of letters.\n */\ngoog.string.isAlpha = function(str) {\n  'use strict';\n  return !/[^a-zA-Z]/.test(str);\n};\n\n\n/**\n * Checks if a string contains only numbers.\n * @param {*} str string to check. If not a string, it will be\n *     casted to one.\n * @return {boolean} True if `str` is numeric.\n */\ngoog.string.isNumeric = function(str) {\n  'use strict';\n  return !/[^0-9]/.test(str);\n};\n\n\n/**\n * Checks if a string contains only numbers or letters.\n * @param {string} str string to check.\n * @return {boolean} True if `str` is alphanumeric.\n */\ngoog.string.isAlphaNumeric = function(str) {\n  'use strict';\n  return !/[^a-zA-Z0-9]/.test(str);\n};\n\n\n/**\n * Checks if a character is a space character.\n * @param {string} ch Character to check.\n * @return {boolean} True if `ch` is a space.\n */\ngoog.string.isSpace = function(ch) {\n  'use strict';\n  return ch == ' ';\n};\n\n\n/**\n * Checks if a character is a valid unicode character.\n * @param {string} ch Character to check.\n * @return {boolean} True if `ch` is a valid unicode character.\n */\ngoog.string.isUnicodeChar = function(ch) {\n  'use strict';\n  return ch.length == 1 && ch >= ' ' && ch <= '~' ||\n      ch >= '\\u0080' && ch <= '\\uFFFD';\n};\n\n\n/**\n * Takes a string and replaces newlines with a space. Multiple lines are\n * replaced with a single space.\n * @param {string} str The string from which to strip newlines.\n * @return {string} A copy of `str` stripped of newlines.\n */\ngoog.string.stripNewlines = function(str) {\n  'use strict';\n  return str.replace(/(\\r\\n|\\r|\\n)+/g, ' ');\n};\n\n\n/**\n * Replaces Windows and Mac new lines with unix style: \\r or \\r\\n with \\n.\n * @param {string} str The string to in which to canonicalize newlines.\n * @return {string} `str` A copy of {@code} with canonicalized newlines.\n */\ngoog.string.canonicalizeNewlines = function(str) {\n  'use strict';\n  return str.replace(/(\\r\\n|\\r|\\n)/g, '\\n');\n};\n\n\n/**\n * Normalizes whitespace in a string, replacing all whitespace chars with\n * a space.\n * @param {string} str The string in which to normalize whitespace.\n * @return {string} A copy of `str` with all whitespace normalized.\n */\ngoog.string.normalizeWhitespace = function(str) {\n  'use strict';\n  return str.replace(/\\xa0|\\s/g, ' ');\n};\n\n\n/**\n * Normalizes spaces in a string, replacing all consecutive spaces and tabs\n * with a single space. Replaces non-breaking space with a space.\n * @param {string} str The string in which to normalize spaces.\n * @return {string} A copy of `str` with all consecutive spaces and tabs\n *    replaced with a single space.\n */\ngoog.string.normalizeSpaces = function(str) {\n  'use strict';\n  return str.replace(/\\xa0|[ \\t]+/g, ' ');\n};\n\n\n/**\n * Removes the breaking spaces from the left and right of the string and\n * collapses the sequences of breaking spaces in the middle into single spaces.\n * The original and the result strings render the same way in HTML.\n * @param {string} str A string in which to collapse spaces.\n * @return {string} Copy of the string with normalized breaking spaces.\n */\ngoog.string.collapseBreakingSpaces = function(str) {\n  'use strict';\n  return str.replace(/[\\t\\r\\n ]+/g, ' ')\n      .replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n};\n\n\n/**\n * Trims white spaces to the left and right of a string.\n * @param {string} str The string to trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trim = goog.string.internal.trim;\n\n\n/**\n * Trims whitespaces at the left end of a string.\n * @param {string} str The string to left trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trimLeft = function(str) {\n  'use strict';\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/^[\\s\\xa0]+/, '');\n};\n\n\n/**\n * Trims whitespaces at the right end of a string.\n * @param {string} str The string to right trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trimRight = function(str) {\n  'use strict';\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/[\\s\\xa0]+$/, '');\n};\n\n\n/**\n * A string comparator that ignores case.\n * -1 = str1 less than str2\n *  0 = str1 equals str2\n *  1 = str1 greater than str2\n *\n * @param {string} str1 The string to compare.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} The comparator result, as described above.\n */\ngoog.string.caseInsensitiveCompare =\n    goog.string.internal.caseInsensitiveCompare;\n\n\n/**\n * Compares two strings interpreting their numeric substrings as numbers.\n *\n * @param {string} str1 First string.\n * @param {string} str2 Second string.\n * @param {!RegExp} tokenizerRegExp Splits a string into substrings of\n *     non-negative integers, non-numeric characters and optionally fractional\n *     numbers starting with a decimal point.\n * @return {number} Negative if str1 < str2, 0 is str1 == str2, positive if\n *     str1 > str2.\n * @private\n */\ngoog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {\n  'use strict';\n  if (str1 == str2) {\n    return 0;\n  }\n  if (!str1) {\n    return -1;\n  }\n  if (!str2) {\n    return 1;\n  }\n\n  // Using match to split the entire string ahead of time turns out to be faster\n  // for most inputs than using RegExp.exec or iterating over each character.\n  const tokens1 = str1.toLowerCase().match(tokenizerRegExp);\n  const tokens2 = str2.toLowerCase().match(tokenizerRegExp);\n\n  const count = Math.min(tokens1.length, tokens2.length);\n\n  for (let i = 0; i < count; i++) {\n    const a = tokens1[i];\n    const b = tokens2[i];\n\n    // Compare pairs of tokens, returning if one token sorts before the other.\n    if (a != b) {\n      // Only if both tokens are integers is a special comparison required.\n      // Decimal numbers are sorted as strings (e.g., '.09' < '.1').\n      const num1 = parseInt(a, 10);\n      if (!isNaN(num1)) {\n        const num2 = parseInt(b, 10);\n        if (!isNaN(num2) && num1 - num2) {\n          return num1 - num2;\n        }\n      }\n      return a < b ? -1 : 1;\n    }\n  }\n\n  // If one string is a substring of the other, the shorter string sorts first.\n  if (tokens1.length != tokens2.length) {\n    return tokens1.length - tokens2.length;\n  }\n\n  // The two strings must be equivalent except for case (perfect equality is\n  // tested at the head of the function.) Revert to default ASCII string\n  // comparison to stabilize the sort.\n  return str1 < str2 ? -1 : 1;\n};\n\n\n/**\n * String comparison function that handles non-negative integer numbers in a\n * way humans might expect. Using this function, the string 'File 2.jpg' sorts\n * before 'File 10.jpg', and 'Version 1.9' before 'Version 1.10'. The comparison\n * is mostly case-insensitive, though strings that are identical except for case\n * are sorted with the upper-case strings before lower-case.\n *\n * This comparison function is up to 50x slower than either the default or the\n * case-insensitive compare. It should not be used in time-critical code, but\n * should be fast enough to sort several hundred short strings (like filenames)\n * with a reasonable delay.\n *\n * @param {string} str1 The string to compare in a numerically sensitive way.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} less than 0 if str1 < str2, 0 if str1 == str2, greater than\n *     0 if str1 > str2.\n */\ngoog.string.intAwareCompare = function(str1, str2) {\n  'use strict';\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\D+/g);\n};\n\n\n/**\n * String comparison function that handles non-negative integer and fractional\n * numbers in a way humans might expect. Using this function, the string\n * 'File 2.jpg' sorts before 'File 10.jpg', and '3.14' before '3.2'. Equivalent\n * to {@link goog.string.intAwareCompare} apart from the way how it interprets\n * dots.\n *\n * @param {string} str1 The string to compare in a numerically sensitive way.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} less than 0 if str1 < str2, 0 if str1 == str2, greater than\n *     0 if str1 > str2.\n */\ngoog.string.floatAwareCompare = function(str1, str2) {\n  'use strict';\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\.\\d+|\\D+/g);\n};\n\n\n/**\n * Alias for {@link goog.string.floatAwareCompare}.\n *\n * @param {string} str1\n * @param {string} str2\n * @return {number}\n */\ngoog.string.numerateCompare = goog.string.floatAwareCompare;\n\n\n/**\n * URL-encodes a string\n * @param {*} str The string to url-encode.\n * @return {string} An encoded copy of `str` that is safe for urls.\n *     Note that '#', ':', and other characters used to delimit portions\n *     of URLs *will* be encoded.\n */\ngoog.string.urlEncode = function(str) {\n  'use strict';\n  return encodeURIComponent(String(str));\n};\n\n\n/**\n * URL-decodes the string. We need to specially handle '+'s because\n * the javascript library doesn't convert them to spaces.\n * @param {string} str The string to url decode.\n * @return {string} The decoded `str`.\n */\ngoog.string.urlDecode = function(str) {\n  'use strict';\n  return decodeURIComponent(str.replace(/\\+/g, ' '));\n};\n\n\n/**\n * Converts \\n to <br>s or <br />s.\n * @param {string} str The string in which to convert newlines.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} A copy of `str` with converted newlines.\n */\ngoog.string.newLineToBr = goog.string.internal.newLineToBr;\n\n\n/**\n * Escapes double quote '\"' and single quote '\\'' characters in addition to\n * '&', '<', and '>' so that a string can be included in an HTML tag attribute\n * value within double or single quotes.\n *\n * It should be noted that > doesn't need to be escaped for the HTML or XML to\n * be valid, but it has been decided to escape it for consistency with other\n * implementations.\n *\n * With goog.string.DETECT_DOUBLE_ESCAPING, this function escapes also the\n * lowercase letter \"e\".\n *\n * NOTE(pupius):\n * HtmlEscape is often called during the generation of large blocks of HTML.\n * Using statics for the regular expressions and strings is an optimization\n * that can more than half the amount of time IE spends in this function for\n * large apps, since strings and regexes both contribute to GC allocations.\n *\n * Testing for the presence of a character before escaping increases the number\n * of function calls, but actually provides a speed increase for the average\n * case -- since the average case often doesn't require the escaping of all 4\n * characters and indexOf() is much cheaper than replace().\n * The worst case does suffer slightly from the additional calls, therefore the\n * opt_isLikelyToContainHtmlChars option has been included for situations\n * where all 4 HTML entities are very likely to be present and need escaping.\n *\n * Some benchmarks (times tended to fluctuate +-0.05ms):\n *                                     FireFox                     IE6\n * (no chars / average (mix of cases) / all 4 chars)\n * no checks                     0.13 / 0.22 / 0.22         0.23 / 0.53 / 0.80\n * indexOf                       0.08 / 0.17 / 0.26         0.22 / 0.54 / 0.84\n * indexOf + re test             0.07 / 0.17 / 0.28         0.19 / 0.50 / 0.85\n *\n * An additional advantage of checking if replace actually needs to be called\n * is a reduction in the number of object allocations, so as the size of the\n * application grows the difference between the various methods would increase.\n *\n * @param {string} str string to be escaped.\n * @param {boolean=} opt_isLikelyToContainHtmlChars Don't perform a check to see\n *     if the character needs replacing - use this option if you expect each of\n *     the characters to appear often. Leave false if you expect few html\n *     characters to occur in your strings, such as if you are escaping HTML.\n * @return {string} An escaped copy of `str`.\n */\ngoog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {\n  'use strict';\n  str = goog.string.internal.htmlEscape(str, opt_isLikelyToContainHtmlChars);\n  if (goog.string.DETECT_DOUBLE_ESCAPING) {\n    str = str.replace(goog.string.E_RE_, '&#101;');\n  }\n  return str;\n};\n\n\n/**\n * Regular expression that matches a lowercase letter \"e\", for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.E_RE_ = /e/g;\n\n\n/**\n * Unescapes an HTML string.\n *\n * @param {string} str The string to unescape.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapeEntities = function(str) {\n  'use strict';\n  if (goog.string.contains(str, '&')) {\n    // We are careful not to use a DOM if we do not have one or we explicitly\n    // requested non-DOM html unescaping.\n    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING &&\n        'document' in goog.global) {\n      return goog.string.unescapeEntitiesUsingDom_(str);\n    } else {\n      // Fall back on pure XML entities\n      return goog.string.unescapePureXmlEntities_(str);\n    }\n  }\n  return str;\n};\n\n\n/**\n * Unescapes a HTML string using the provided document.\n *\n * @param {string} str The string to unescape.\n * @param {!Document} document A document to use in escaping the string.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapeEntitiesWithDocument = function(str, document) {\n  'use strict';\n  if (goog.string.contains(str, '&')) {\n    return goog.string.unescapeEntitiesUsingDom_(str, document);\n  }\n  return str;\n};\n\n\n/**\n * Unescapes an HTML string using a DOM to resolve non-XML, non-numeric\n * entities. This function is XSS-safe and whitespace-preserving.\n * @private\n * @param {string} str The string to unescape.\n * @param {Document=} opt_document An optional document to use for creating\n *     elements. If this is not specified then the default window.document\n *     will be used.\n * @return {string} The unescaped `str` string.\n */\ngoog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {\n  'use strict';\n  /** @type {!Object<string, string>} */\n  const seen = {'&amp;': '&', '&lt;': '<', '&gt;': '>', '&quot;': '\"'};\n  /** @type {!Element} */\n  let div;\n  if (opt_document) {\n    div = opt_document.createElement('div');\n  } else {\n    div = goog.global.document.createElement('div');\n  }\n  // Match as many valid entity characters as possible. If the actual entity\n  // happens to be shorter, it will still work as innerHTML will return the\n  // trailing characters unchanged. Since the entity characters do not include\n  // open angle bracket, there is no chance of XSS from the innerHTML use.\n  // Since no whitespace is passed to innerHTML, whitespace is preserved.\n  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {\n    'use strict';\n    // Check for cached entity.\n    let value = seen[s];\n    if (value) {\n      return value;\n    }\n    // Check for numeric entity.\n    if (entity.charAt(0) == '#') {\n      // Prefix with 0 so that hex entities (e.g. &#x10) parse as hex numbers.\n      const n = Number('0' + entity.slice(1));\n      if (!isNaN(n)) {\n        value = String.fromCharCode(n);\n      }\n    }\n    // Fall back to innerHTML otherwise.\n    if (!value) {\n      // Append a non-entity character to avoid a bug in Webkit that parses\n      // an invalid entity at the end of innerHTML text as the empty string.\n      safevalues.dom.safeElement.setInnerHtml(\n          div,\n          safevalues.restricted.reviewed.htmlSafeByReview(\n              s + ' ', {justification: 'Single HTML entity.'}));\n      // Then remove the trailing character from the result.\n      value = div.firstChild.nodeValue.slice(0, -1);\n    }\n    // Cache and return.\n    return seen[s] = value;\n  });\n};\n\n\n/**\n * Unescapes XML entities.\n * @private\n * @param {string} str The string to unescape.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapePureXmlEntities_ = function(str) {\n  'use strict';\n  return str.replace(/&([^;]+);/g, function(s, entity) {\n    'use strict';\n    switch (entity) {\n      case 'amp':\n        return '&';\n      case 'lt':\n        return '<';\n      case 'gt':\n        return '>';\n      case 'quot':\n        return '\"';\n      default:\n        if (entity.charAt(0) == '#') {\n          // Prefix with 0 so that hex entities (e.g. &#x10) parse as hex.\n          const n = Number('0' + entity.slice(1));\n          if (!isNaN(n)) {\n            return String.fromCharCode(n);\n          }\n        }\n        // For invalid entities we just return the entity\n        return s;\n    }\n  });\n};\n\n\n/**\n * Regular expression that matches an HTML entity.\n * See also HTML5: Tokenization / Tokenizing character references.\n * @private\n * @type {!RegExp}\n */\ngoog.string.HTML_ENTITY_PATTERN_ = /&([^;\\s<&]+);?/g;\n\n\n/**\n * Do escaping of whitespace to preserve spatial formatting. We use character\n * entity #160 to make it safer for xml.\n * @param {string} str The string in which to escape whitespace.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} An escaped copy of `str`.\n */\ngoog.string.whitespaceEscape = function(str, opt_xml) {\n  'use strict';\n  // This doesn't use goog.string.preserveSpaces for backwards compatibility.\n  return goog.string.newLineToBr(str.replace(/  /g, ' &#160;'), opt_xml);\n};\n\n\n/**\n * Preserve spaces that would be otherwise collapsed in HTML by replacing them\n * with non-breaking space Unicode characters.\n * @param {string} str The string in which to preserve whitespace.\n * @return {string} A copy of `str` with preserved whitespace.\n */\ngoog.string.preserveSpaces = function(str) {\n  'use strict';\n  return str.replace(/(^|[\\n ]) /g, '$1' + goog.string.Unicode.NBSP);\n};\n\n\n/**\n * Strip quote characters around a string.  The second argument is a string of\n * characters to treat as quotes.  This can be a single character or a string of\n * multiple character and in that case each of those are treated as possible\n * quote characters. For example:\n *\n * <pre>\n * goog.string.stripQuotes('\"abc\"', '\"`') --\u003e 'abc'\n * goog.string.stripQuotes('`abc`', '\"`') --\u003e 'abc'\n * </pre>\n *\n * @param {string} str The string to strip.\n * @param {string} quoteChars The quote characters to strip.\n * @return {string} A copy of `str` without the quotes.\n */\ngoog.string.stripQuotes = function(str, quoteChars) {\n  'use strict';\n  const length = quoteChars.length;\n  for (let i = 0; i < length; i++) {\n    const quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);\n    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {\n      return str.substring(1, str.length - 1);\n    }\n  }\n  return str;\n};\n\n\n/**\n * Truncates a string to a certain length and adds '...' if necessary.  The\n * length also accounts for the ellipsis, so a maximum length of 10 and a string\n * 'Hello World!' produces 'Hello W...'.\n * @param {string} str The string to truncate.\n * @param {number} chars Max number of characters.\n * @param {boolean=} opt_protectEscapedCharacters Whether to protect escaped\n *     characters from being cut off in the middle.\n * @return {string} The truncated `str` string.\n */\ngoog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {\n  'use strict';\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.unescapeEntities(str);\n  }\n\n  if (str.length > chars) {\n    str = str.substring(0, chars - 3) + '...';\n  }\n\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.htmlEscape(str);\n  }\n\n  return str;\n};\n\n\n/**\n * Truncate a string in the middle, adding \"...\" if necessary,\n * and favoring the beginning of the string.\n * @param {string} str The string to truncate the middle of.\n * @param {number} chars Max number of characters.\n * @param {boolean=} opt_protectEscapedCharacters Whether to protect escaped\n *     characters from being cutoff in the middle.\n * @param {number=} opt_trailingChars Optional number of trailing characters to\n *     leave at the end of the string, instead of truncating as close to the\n *     middle as possible.\n * @return {string} A truncated copy of `str`.\n */\ngoog.string.truncateMiddle = function(\n    str, chars, opt_protectEscapedCharacters, opt_trailingChars) {\n  'use strict';\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.unescapeEntities(str);\n  }\n\n  if (opt_trailingChars && str.length > chars) {\n    if (opt_trailingChars > chars) {\n      opt_trailingChars = chars;\n    }\n    const endPoint = str.length - opt_trailingChars;\n    const startPoint = chars - opt_trailingChars;\n    str = str.substring(0, startPoint) + '...' + str.substring(endPoint);\n  } else if (str.length > chars) {\n    // Favor the beginning of the string:\n    let half = Math.floor(chars / 2);\n    const endPos = str.length - half;\n    half += chars % 2;\n    str = str.substring(0, half) + '...' + str.substring(endPos);\n  }\n\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.htmlEscape(str);\n  }\n\n  return str;\n};\n\n\n/**\n * Special chars that need to be escaped for goog.string.quote.\n * @private {!Object<string, string>}\n */\ngoog.string.specialEscapeChars_ = {\n  '\\0': '\\\\0',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  '\\x0B': '\\\\x0B',  // '\\v' is not supported in JScript\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  // To support the use case of embedding quoted strings inside of script\n  // tags, we have to make sure HTML comments and opening/closing script tags do\n  // not appear in the resulting string. The specific strings that must be\n  // escaped are documented at:\n  // https://html.spec.whatwg.org/multipage/scripting.html#restrictions-for-contents-of-script-elements\n  '<': '\\\\u003C'  // NOTE: JSON.parse crashes on '\\\\x3c'.\n};\n\n\n/**\n * Character mappings used internally for goog.string.escapeChar.\n * @private {!Object<string, string>}\n */\ngoog.string.jsEscapeCache_ = {\n  '\\'': '\\\\\\''\n};\n\n\n/**\n * Encloses a string in double quotes and escapes characters so that the\n * string is a valid JS string. The resulting string is safe to embed in\n * `<script>` tags as \"<\" is escaped.\n * @param {string} s The string to quote.\n * @return {string} A copy of `s` surrounded by double quotes.\n */\ngoog.string.quote = function(s) {\n  'use strict';\n  s = String(s);\n  const sb = ['\"'];\n  for (let i = 0; i < s.length; i++) {\n    const ch = s.charAt(i);\n    const cc = ch.charCodeAt(0);\n    sb[i + 1] = goog.string.specialEscapeChars_[ch] ||\n        ((cc > 31 && cc < 127) ? ch : goog.string.escapeChar(ch));\n  }\n  sb.push('\"');\n  return sb.join('');\n};\n\n\n/**\n * Takes a string and returns the escaped string for that input string.\n * @param {string} str The string to escape.\n * @return {string} An escaped string representing `str`.\n */\ngoog.string.escapeString = function(str) {\n  'use strict';\n  const sb = [];\n  for (let i = 0; i < str.length; i++) {\n    sb[i] = goog.string.escapeChar(str.charAt(i));\n  }\n  return sb.join('');\n};\n\n\n/**\n * Takes a character and returns the escaped string for that character. For\n * example escapeChar(String.fromCharCode(15)) -> \"\\\\x0E\".\n * @param {string} c The character to escape.\n * @return {string} An escaped string representing `c`.\n */\ngoog.string.escapeChar = function(c) {\n  'use strict';\n  if (c in goog.string.jsEscapeCache_) {\n    return goog.string.jsEscapeCache_[c];\n  }\n\n  if (c in goog.string.specialEscapeChars_) {\n    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];\n  }\n\n  let rv = c;\n  const cc = c.charCodeAt(0);\n  if (cc > 31 && cc < 127) {\n    rv = c;\n  } else {\n    // tab is 9 but handled above\n    if (cc < 256) {\n      rv = '\\\\x';\n      if (cc < 16 || cc > 256) {\n        rv += '0';\n      }\n    } else {\n      rv = '\\\\u';\n      if (cc < 4096) {  // \\u1000\n        rv += '0';\n      }\n    }\n    rv += cc.toString(16).toUpperCase();\n  }\n\n  return goog.string.jsEscapeCache_[c] = rv;\n};\n\n\n/**\n * Determines whether a string contains a substring.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n */\ngoog.string.contains = goog.string.internal.contains;\n\n\n/**\n * Determines whether a string contains a substring, ignoring case.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n */\ngoog.string.caseInsensitiveContains =\n    goog.string.internal.caseInsensitiveContains;\n\n\n/**\n * Returns the non-overlapping occurrences of ss in s.\n * If either s or ss evalutes to false, then returns zero.\n * @param {string} s The string to look in.\n * @param {string} ss The string to look for.\n * @return {number} Number of occurrences of ss in s.\n */\ngoog.string.countOf = function(s, ss) {\n  'use strict';\n  return s && ss ? s.split(ss).length - 1 : 0;\n};\n\n\n/**\n * Removes a substring of a specified length at a specific\n * index in a string.\n * @param {string} s The base string from which to remove.\n * @param {number} index The index at which to remove the substring.\n * @param {number} stringLength The length of the substring to remove.\n * @return {string} A copy of `s` with the substring removed or the full\n *     string if nothing is removed or the input is invalid.\n */\ngoog.string.removeAt = function(s, index, stringLength) {\n  'use strict';\n  let resultStr = s;\n  // If the index is greater or equal to 0 then remove substring\n  if (index >= 0 && index < s.length && stringLength > 0) {\n    resultStr = s.slice(0, index) + s.slice(index + stringLength);\n  }\n  return resultStr;\n};\n\n\n/**\n * Removes the first occurrence of a substring from a string.\n * @param {string} str The base string from which to remove.\n * @param {string} substr The string to remove.\n * @return {string} A copy of `str` with `substr` removed or the\n *     full string if nothing is removed.\n */\ngoog.string.remove = function(str, substr) {\n  'use strict';\n  return str.replace(substr, '');\n};\n\n\n/**\n *  Removes all occurrences of a substring from a string.\n *  @param {string} s The base string from which to remove.\n *  @param {string} ss The string to remove.\n *  @return {string} A copy of `s` with `ss` removed or the full\n *      string if nothing is removed.\n */\ngoog.string.removeAll = function(s, ss) {\n  'use strict';\n  const re = new RegExp(goog.string.regExpEscape(ss), 'g');\n  return s.replace(re, '');\n};\n\n\n/**\n *  Replaces all occurrences of a substring of a string with a new substring.\n *  @param {string} s The base string from which to remove.\n *  @param {string} ss The string to replace.\n *  @param {string} replacement The replacement string.\n *  @return {string} A copy of `s` with `ss` replaced by\n *      `replacement` or the original string if nothing is replaced.\n */\ngoog.string.replaceAll = function(s, ss, replacement) {\n  'use strict';\n  const re = new RegExp(goog.string.regExpEscape(ss), 'g');\n  return s.replace(re, replacement.replace(/\\$/g, '$$$$'));\n};\n\n\n/**\n * Escapes characters in the string that are not safe to use in a RegExp.\n * @param {*} s The string to escape. If not a string, it will be casted\n *     to one.\n * @return {string} A RegExp safe, escaped copy of `s`.\n */\ngoog.string.regExpEscape = function(s) {\n  'use strict';\n  return String(s)\n      .replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1')\n      .replace(/\\x08/g, '\\\\x08');\n};\n\n\n/**\n * Repeats a string n times.\n * @param {string} string The string to repeat.\n * @param {number} length The number of times to repeat.\n * @return {string} A string containing `length` repetitions of\n *     `string`.\n */\ngoog.string.repeat = (String.prototype.repeat) ? function(string, length) {\n  'use strict';\n  // The native method is over 100 times faster than the alternative.\n  return string.repeat(length);\n} : function(string, length) {\n  'use strict';\n  return new Array(length + 1).join(string);\n};\n\n\n/**\n * Pads number to given length and optionally rounds it to a given precision.\n * For example:\n * <pre>padNumber(1.25, 2, 3) -> '01.250'\n * padNumber(1.25, 2) -> '01.25'\n * padNumber(1.25, 2, 1) -> '01.3'\n * padNumber(1.25, 0) -> '1.25'</pre>\n *\n * @param {number} num The number to pad.\n * @param {number} length The desired length.\n * @param {number=} opt_precision The desired precision.\n * @return {string} `num` as a string with the given options.\n */\ngoog.string.padNumber = function(num, length, opt_precision) {\n  'use strict';\n  if (!Number.isFinite(num)) return String(num);\n  let s =\n      (opt_precision !== undefined) ? num.toFixed(opt_precision) : String(num);\n  let index = s.indexOf('.');\n  if (index === -1) {\n    index = s.length;\n  }\n  const sign = s[0] === '-' ? '-' : '';\n  if (sign) {\n    s = s.substring(1);\n  }\n  return sign + goog.string.repeat('0', Math.max(0, length - index)) + s;\n};\n\n\n/**\n * Returns a string representation of the given object, with\n * null and undefined being returned as the empty string.\n *\n * @param {*} obj The object to convert.\n * @return {string} A string representation of the `obj`.\n */\ngoog.string.makeSafe = function(obj) {\n  'use strict';\n  return obj == null ? '' : String(obj);\n};\n\n/**\n * Returns a string with at least 64-bits of randomness.\n *\n * Doesn't trust JavaScript's random function entirely. Uses a combination of\n * random and current timestamp, and then encodes the string in base-36 to\n * make it shorter.\n *\n * @return {string} A random string, e.g. sn1s7vb4gcic.\n */\ngoog.string.getRandomString = function() {\n  'use strict';\n  const x = 2147483648;\n  return Math.floor(Math.random() * x).toString(36) +\n      Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);\n};\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string|number} version1 Version of first item.\n * @param {string|number} version2 Version of second item.\n *\n * @return {number}  1 if `version1` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `version2` is higher.\n */\ngoog.string.compareVersions = goog.string.internal.compareVersions;\n\n\n/**\n * String hash function similar to java.lang.String.hashCode().\n * The hash code for a string is computed as\n * s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n * where s[i] is the ith character of the string and n is the length of\n * the string. We mod the result to make it between 0 (inclusive) and 2^32\n * (exclusive).\n * @param {string} str A string.\n * @return {number} Hash value for `str`, between 0 (inclusive) and 2^32\n *  (exclusive). The empty string returns 0.\n */\ngoog.string.hashCode = function(str) {\n  'use strict';\n  let result = 0;\n  for (let i = 0; i < str.length; ++i) {\n    // Normalize to 4 byte range, 0 ... 2^32.\n    result = (31 * result + str.charCodeAt(i)) >>> 0;\n  }\n  return result;\n};\n\n\n/**\n * The most recent unique ID. |0 is equivalent to Math.floor in this case.\n * @type {number}\n * @private\n */\ngoog.string.uniqueStringCounter_ = Math.random() * 0x80000000 | 0;\n\n\n/**\n * Generates and returns a string which is unique in the current document.\n * This is useful, for example, to create unique IDs for DOM elements.\n * @return {string} A unique id.\n */\ngoog.string.createUniqueString = function() {\n  'use strict';\n  return 'goog_' + goog.string.uniqueStringCounter_++;\n};\n\n\n/**\n * Converts the supplied string to a number, which may be Infinity or NaN.\n * This function strips whitespace: (toNumber(' 123') === 123)\n * This function accepts scientific notation: (toNumber('1e1') === 10)\n *\n * This is better than JavaScript's built-in conversions because, sadly:\n *     (Number(' ') === 0) and (parseFloat('123a') === 123)\n *\n * @param {string} str The string to convert.\n * @return {number} The number the supplied string represents, or NaN.\n */\ngoog.string.toNumber = function(str) {\n  'use strict';\n  const num = Number(str);\n  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {\n    return NaN;\n  }\n  return num;\n};\n\n\n/**\n * Returns whether the given string is lower camel case (e.g. \"isFooBar\").\n *\n * Note that this assumes the string is entirely letters.\n * @see http://en.wikipedia.org/wiki/CamelCase#Variations_and_synonyms\n *\n * @param {string} str String to test.\n * @return {boolean} Whether the string is lower camel case.\n */\ngoog.string.isLowerCamelCase = function(str) {\n  'use strict';\n  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);\n};\n\n\n/**\n * Returns whether the given string is upper camel case (e.g. \"FooBarBaz\").\n *\n * Note that this assumes the string is entirely letters.\n * @see http://en.wikipedia.org/wiki/CamelCase#Variations_and_synonyms\n *\n * @param {string} str String to test.\n * @return {boolean} Whether the string is upper camel case.\n */\ngoog.string.isUpperCamelCase = function(str) {\n  'use strict';\n  return /^([A-Z][a-z]*)+$/.test(str);\n};\n\n\n/**\n * Converts a string from selector-case to camelCase (e.g. from\n * \"multi-part-string\" to \"multiPartString\"), useful for converting\n * CSS selectors and HTML dataset keys to their equivalent JS properties.\n * @param {string} str The string in selector-case form.\n * @return {string} The string in camelCase form.\n */\ngoog.string.toCamelCase = function(str) {\n  'use strict';\n  return String(str).replace(/\\-([a-z])/g, function(all, match) {\n    'use strict';\n    return match.toUpperCase();\n  });\n};\n\n\n/**\n * Converts a string from camelCase to selector-case (e.g. from\n * \"multiPartString\" to \"multi-part-string\"), useful for converting JS\n * style and dataset properties to equivalent CSS selectors and HTML keys.\n * @param {string} str The string in camelCase form.\n * @return {string} The string in selector-case form.\n */\ngoog.string.toSelectorCase = function(str) {\n  'use strict';\n  return String(str).replace(/([A-Z])/g, '-$1').toLowerCase();\n};\n\n\n/**\n * Converts a string into TitleCase. First character of the string is always\n * capitalized in addition to the first letter of every subsequent word.\n * Words are delimited by one or more whitespaces by default. Custom delimiters\n * can optionally be specified to replace the default, which doesn't preserve\n * whitespace delimiters and instead must be explicitly included if needed.\n *\n * Default delimiter => \" \":\n *    goog.string.toTitleCase('oneTwoThree')    => 'OneTwoThree'\n *    goog.string.toTitleCase('one two three')  => 'One Two Three'\n *    goog.string.toTitleCase('  one   two   ') => '  One   Two   '\n *    goog.string.toTitleCase('one_two_three')  => 'One_two_three'\n *    goog.string.toTitleCase('one-two-three')  => 'One-two-three'\n *\n * Custom delimiter => \"_-.\":\n *    goog.string.toTitleCase('oneTwoThree', '_-.')       => 'OneTwoThree'\n *    goog.string.toTitleCase('one two three', '_-.')     => 'One two three'\n *    goog.string.toTitleCase('  one   two   ', '_-.')    => '  one   two   '\n *    goog.string.toTitleCase('one_two_three', '_-.')     => 'One_Two_Three'\n *    goog.string.toTitleCase('one-two-three', '_-.')     => 'One-Two-Three'\n *    goog.string.toTitleCase('one...two...three', '_-.') => 'One...Two...Three'\n *    goog.string.toTitleCase('one. two. three', '_-.')   => 'One. two. three'\n *    goog.string.toTitleCase('one-two.three', '_-.')     => 'One-Two.Three'\n *\n * @param {string} str String value in camelCase form.\n * @param {string=} opt_delimiters Custom delimiter character set used to\n *      distinguish words in the string value. Each character represents a\n *      single delimiter. When provided, default whitespace delimiter is\n *      overridden and must be explicitly included if needed.\n * @return {string} String value in TitleCase form.\n */\ngoog.string.toTitleCase = function(str, opt_delimiters) {\n  'use strict';\n  let delimiters = (typeof opt_delimiters === 'string') ?\n      goog.string.regExpEscape(opt_delimiters) :\n      '\\\\s';\n\n  // For IE8, we need to prevent using an empty character set. Otherwise,\n  // incorrect matching will occur.\n  delimiters = delimiters ? '|[' + delimiters + ']+' : '';\n\n  const regexp = new RegExp('(^' + delimiters + ')([a-z])', 'g');\n  return str.replace(regexp, function(all, p1, p2) {\n    'use strict';\n    return p1 + p2.toUpperCase();\n  });\n};\n\n\n/**\n * Capitalizes a string, i.e. converts the first letter to uppercase\n * and all other letters to lowercase, e.g.:\n *\n * goog.string.capitalize('one')     => 'One'\n * goog.string.capitalize('ONE')     => 'One'\n * goog.string.capitalize('one two') => 'One two'\n *\n * Note that this function does not trim initial whitespace.\n *\n * @param {string} str String value to capitalize.\n * @return {string} String value with first letter in uppercase.\n */\ngoog.string.capitalize = function(str) {\n  'use strict';\n  return String(str.charAt(0)).toUpperCase() +\n      String(str.slice(1)).toLowerCase();\n};\n\n\n/**\n * Parse a string in decimal or hexidecimal ('0xFFFF') form.\n *\n * To parse a particular radix, please use parseInt(string, radix) directly. See\n * https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\n *\n * This is a wrapper for the built-in parseInt function that will only parse\n * numbers as base 10 or base 16.  Some JS implementations assume strings\n * starting with \"0\" are intended to be octal. ES3 allowed but discouraged\n * this behavior. ES5 forbids it.  This function emulates the ES5 behavior.\n *\n * For more information, see Mozilla JS Reference: http://goo.gl/8RiFj\n *\n * @param {string|number|null|undefined} value The value to be parsed.\n * @return {number} The number, parsed. If the string failed to parse, this\n *     will be NaN.\n */\ngoog.string.parseInt = function(value) {\n  'use strict';\n  // Force finite numbers to strings.\n  if (isFinite(value)) {\n    value = String(value);\n  }\n\n  if (typeof value === 'string') {\n    // If the string starts with '0x' or '-0x', parse as hex.\n    return /^\\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);\n  }\n\n  return NaN;\n};\n\n\n/**\n * Splits a string on a separator a limited number of times.\n *\n * This implementation is more similar to Python or Java, where the limit\n * parameter specifies the maximum number of splits rather than truncating\n * the number of results.\n *\n * See http://docs.python.org/2/library/stdtypes.html#str.split\n * See JavaDoc: http://goo.gl/F2AsY\n * See Mozilla reference: http://goo.gl/dZdZs\n *\n * @param {string} str String to split.\n * @param {string} separator The separator.\n * @param {number} limit The limit to the number of splits. The resulting array\n *     will have a maximum length of limit+1.  Negative numbers are the same\n *     as zero.\n * @return {!Array<string>} The string, split.\n */\ngoog.string.splitLimit = function(str, separator, limit) {\n  'use strict';\n  const parts = str.split(separator);\n  const returnVal = [];\n\n  // Only continue doing this while we haven't hit the limit and we have\n  // parts left.\n  while (limit > 0 && parts.length) {\n    returnVal.push(parts.shift());\n    limit--;\n  }\n\n  // If there are remaining parts, append them to the end.\n  if (parts.length) {\n    returnVal.push(parts.join(separator));\n  }\n\n  return returnVal;\n};\n\n\n/**\n * Finds the characters to the right of the last instance of any separator\n *\n * This function is similar to goog.string.path.baseName, except it can take a\n * list of characters to split the string on. It will return the rightmost\n * grouping of characters to the right of any separator as a left-to-right\n * oriented string.\n *\n * @see goog.string.path.baseName\n * @param {string} str The string\n * @param {string|!Array<string>} separators A list of separator characters\n * @return {string} The last part of the string with respect to the separators\n */\ngoog.string.lastComponent = function(str, separators) {\n  'use strict';\n  if (!separators) {\n    return str;\n  } else if (typeof separators == 'string') {\n    separators = [separators];\n  }\n\n  let lastSeparatorIndex = -1;\n  for (let i = 0; i < separators.length; i++) {\n    if (separators[i] == '') {\n      continue;\n    }\n    const currentSeparatorIndex = str.lastIndexOf(separators[i]);\n    if (currentSeparatorIndex > lastSeparatorIndex) {\n      lastSeparatorIndex = currentSeparatorIndex;\n    }\n  }\n  if (lastSeparatorIndex == -1) {\n    return str;\n  }\n  return str.slice(lastSeparatorIndex + 1);\n};\n\n\n/**\n * Computes the Levenshtein edit distance between two strings.\n * @param {string} a\n * @param {string} b\n * @return {number} The edit distance between the two strings.\n */\ngoog.string.editDistance = function(a, b) {\n  'use strict';\n  const v0 = [];\n  const v1 = [];\n\n  if (a == b) {\n    return 0;\n  }\n\n  if (!a.length || !b.length) {\n    return Math.max(a.length, b.length);\n  }\n\n  for (let i = 0; i < b.length + 1; i++) {\n    v0[i] = i;\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    v1[0] = i + 1;\n\n    for (let j = 0; j < b.length; j++) {\n      const cost = Number(a[i] != b[j]);\n      // Cost for the substring is the minimum of adding one character, removing\n      // one character, or a swap.\n      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);\n    }\n\n    for (let j = 0; j < v0.length; j++) {\n      v0[j] = v1[j];\n    }\n  }\n\n  return v1[b.length];\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Functions and objects for date representation and manipulation.\n * @suppress {checkPrototypalTypes}\n */\n\ngoog.provide('goog.date');\ngoog.provide('goog.date.Date');\ngoog.provide('goog.date.DateLike');\ngoog.provide('goog.date.DateTime');\ngoog.provide('goog.date.Interval');\ngoog.provide('goog.date.month');\ngoog.provide('goog.date.weekDay');\n\ngoog.require('goog.asserts');\ngoog.require('goog.i18n.DateTimeSymbols');\ngoog.require('goog.string');\n\n\n/**\n * Constants for weekdays.\n * @enum {number}\n */\ngoog.date.weekDay = {\n  MON: 0,\n  TUE: 1,\n  WED: 2,\n  THU: 3,\n  FRI: 4,\n  SAT: 5,\n  SUN: 6\n};\n\n\n/**\n * Constants for months.\n * @enum {number}\n */\ngoog.date.month = {\n  JAN: 0,\n  FEB: 1,\n  MAR: 2,\n  APR: 3,\n  MAY: 4,\n  JUN: 5,\n  JUL: 6,\n  AUG: 7,\n  SEP: 8,\n  OCT: 9,\n  NOV: 10,\n  DEC: 11\n};\n\n\n/**\n * Regular expression for splitting date parts from ISO 8601 styled string.\n * Examples: '20060210' or '2005-02-22' or '20050222' or '2005-08'\n * or '2005-W22' or '2005W22' or '2005-W22-4', etc.\n * For explanation and more examples, see:\n * {@link http://en.wikipedia.org/wiki/ISO_8601}\n *\n * @type {RegExp}\n * @private\n */\ngoog.date.splitDateStringRegex_ = new RegExp(\n    '^((?:[-+]\\\\d*)?\\\\d{4})(?:(?:-?(\\\\d{2})(?:-?(\\\\d{2}))?)|' +\n    '(?:-?(\\\\d{3}))|(?:-?W(\\\\d{2})(?:-?([1-7]))?))?$');\n\n\n/**\n * Regular expression for splitting time parts from ISO 8601 styled string.\n * Examples: '18:46:39.994' or '184639.994'\n *\n * @type {RegExp}\n * @private\n */\ngoog.date.splitTimeStringRegex_ =\n    /^(\\d{2})(?::?(\\d{2})(?::?(\\d{2})(\\.\\d+)?)?)?$/;\n\n\n/**\n * Regular expression for splitting timezone parts from ISO 8601 styled string.\n * Example: The part after the '+' in '18:46:39+07:00'.  Or '09:30Z' (UTC).\n *\n * @type {RegExp}\n * @private\n */\ngoog.date.splitTimezoneStringRegex_ = /Z|(?:([-+])(\\d{2})(?::?(\\d{2}))?)$/;\n\n\n/**\n * Regular expression for splitting duration parts from ISO 8601 styled string.\n * Example: '-P1Y2M3DT4H5M6.7S'\n *\n * @type {RegExp}\n * @private\n */\ngoog.date.splitDurationRegex_ = new RegExp(\n    '^(-)?P(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)D)?' +\n    '(T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?$');\n\n\n/**\n * Number of milliseconds in a day.\n * @type {number}\n */\ngoog.date.MS_PER_DAY = 24 * 60 * 60 * 1000;\n\n/**\n * Number of milliseconds in an ordinary 400-year Gregorian calendar cycle.\n * It can be derived by running\n * `new Date(800, 0, 0).getTime() - new Date(400, 0, 0).getTime()`.\n * Since this number includes leap seconds, it is not evenly dividable by\n * the number of years (importantly, 146097 = 365.2425 * 400).\n * It should be used only for computing dates in the years 0-99 in UTC.\n * @type {number}\n * @private\n */\ngoog.date.MS_PER_GREGORIAN_CYCLE_ = 146097 * 24 * 60 * 60 * 1000;\n\n/**\n * Returns whether the given year is a leap year.\n *\n * @param {number} year Year part of date.\n * @return {boolean} Whether the given year is a leap year.\n */\ngoog.date.isLeapYear = function(year) {\n  'use strict';\n  // Leap year logic; the 4-100-400 rule\n  return year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);\n};\n\n\n/**\n * Returns whether the given year is a long ISO year.\n * See {@link http://www.phys.uu.nl/~vgent/calendar/isocalendar_text3.htm}.\n *\n * @param {number} year Full year part of date.\n * @return {boolean} Whether the given year is a long ISO year.\n */\ngoog.date.isLongIsoYear = function(year) {\n  'use strict';\n  var n = 5 * year + 12 - 4 * (Math.floor(year / 100) - Math.floor(year / 400));\n  n += Math.floor((year - 100) / 400) - Math.floor((year - 102) / 400);\n  n += Math.floor((year - 200) / 400) - Math.floor((year - 199) / 400);\n\n  return n % 28 < 5;\n};\n\n\n/**\n * Returns the number of days for a given month.\n *\n * @param {number} year Year part of date.\n * @param {number} month Month part of date.\n * @return {number} The number of days for the given month.\n */\ngoog.date.getNumberOfDaysInMonth = function(year, month) {\n  'use strict';\n  switch (month) {\n    case goog.date.month.FEB:\n      return goog.date.isLeapYear(year) ? 29 : 28;\n    case goog.date.month.JUN:\n    case goog.date.month.SEP:\n    case goog.date.month.NOV:\n    case goog.date.month.APR:\n      return 30;\n  }\n  return 31;\n};\n\n\n/**\n * Returns true if the 2 dates are in the same day.\n * @param {goog.date.DateLike} date The time to check.\n * @param {goog.date.DateLike=} opt_now The current time.\n * @return {boolean} Whether the dates are on the same day.\n */\ngoog.date.isSameDay = function(date, opt_now) {\n  'use strict';\n  var now = opt_now || new Date(goog.now());\n  return date.getDate() == now.getDate() && goog.date.isSameMonth(date, now);\n};\n\n\n/**\n * Returns true if the 2 dates are in the same month.\n * @param {goog.date.DateLike} date The time to check.\n * @param {goog.date.DateLike=} opt_now The current time.\n * @return {boolean} Whether the dates are in the same calendar month.\n */\ngoog.date.isSameMonth = function(date, opt_now) {\n  'use strict';\n  var now = opt_now || new Date(goog.now());\n  return date.getMonth() == now.getMonth() && goog.date.isSameYear(date, now);\n};\n\n\n/**\n * Returns true if the 2 dates are in the same year.\n * @param {goog.date.DateLike} date The time to check.\n * @param {goog.date.DateLike=} opt_now The current time.\n * @return {boolean} Whether the dates are in the same calendar year.\n */\ngoog.date.isSameYear = function(date, opt_now) {\n  'use strict';\n  var now = opt_now || new Date(goog.now());\n  return date.getFullYear() == now.getFullYear();\n};\n\n\n/**\n * Static function for the day of the same week that determines the week number\n * and year of week.\n *\n * @param {number} year Year part of date.\n * @param {number} month Month part of date (0-11).\n * @param {number} date Day part of date (1-31).\n * @param {number=} opt_weekDay Cut off weekday, defaults to Thursday.\n * @param {number=} opt_firstDayOfWeek First day of the week, defaults to\n *     Monday.\n *     Monday=0, Sunday=6.\n * @return {number} the cutoff day of the same week in millis since epoch.\n * @private\n */\ngoog.date.getCutOffSameWeek_ = function(\n    year, month, date, opt_weekDay, opt_firstDayOfWeek) {\n  'use strict';\n  var d = new Date(year, month, date);\n\n  // Default to Thursday for cut off as per ISO 8601.\n  var cutoff =\n      (opt_weekDay !== undefined) ? opt_weekDay : goog.date.weekDay.THU;\n\n  // Default to Monday for first day of the week as per ISO 8601.\n  var firstday = opt_firstDayOfWeek || goog.date.weekDay.MON;\n\n  // The d.getDay() has to be converted first to ISO weekday (Monday=0).\n  var isoday = (d.getDay() + 6) % 7;\n\n  // Position of given day in the picker grid w.r.t. first day of week\n  var daypos = (isoday - firstday + 7) % 7;\n\n  // Position of cut off day in the picker grid w.r.t. first day of week\n  var cutoffpos = (cutoff - firstday + 7) % 7;\n\n  // Unix timestamp of the midnight of the cutoff day in the week of 'd'.\n  // There might be +-1 hour shift in the result due to the daylight saving,\n  // but it doesn't affect the year.\n  return d.valueOf() + (cutoffpos - daypos) * goog.date.MS_PER_DAY;\n};\n\n\n/**\n * Static function for week number calculation. ISO 8601 implementation.\n *\n * @param {number} year Year part of date.\n * @param {number} month Month part of date (0-11).\n * @param {number} date Day part of date (1-31).\n * @param {number=} opt_weekDay Cut off weekday, defaults to Thursday.\n * @param {number=} opt_firstDayOfWeek First day of the week, defaults to\n *     Monday.\n *     Monday=0, Sunday=6.\n * @return {number} The week number (1-53).\n */\ngoog.date.getWeekNumber = function(\n    year, month, date, opt_weekDay, opt_firstDayOfWeek) {\n  'use strict';\n  var cutoffSameWeek = goog.date.getCutOffSameWeek_(\n      year, month, date, opt_weekDay, opt_firstDayOfWeek);\n\n  // Unix timestamp of January 1 in the year of the week.\n  var jan1 = new Date(new Date(cutoffSameWeek).getFullYear(), 0, 1).valueOf();\n\n  // Number of week. The round() eliminates the effect of daylight saving.\n  return Math.floor(\n             Math.round((cutoffSameWeek - jan1) / goog.date.MS_PER_DAY) / 7) +\n      1;\n};\n\n\n/**\n * Static function for year of the week. ISO 8601 implementation.\n *\n * @param {number} year Year part of date.\n * @param {number} month Month part of date (0-11).\n * @param {number} date Day part of date (1-31).\n * @param {number=} opt_weekDay Cut off weekday, defaults to Thursday.\n * @param {number=} opt_firstDayOfWeek First day of the week, defaults to\n *     Monday.\n *     Monday=0, Sunday=6.\n * @return {number} The four digit year of date.\n */\ngoog.date.getYearOfWeek = function(\n    year, month, date, opt_weekDay, opt_firstDayOfWeek) {\n  'use strict';\n  var cutoffSameWeek = goog.date.getCutOffSameWeek_(\n      year, month, date, opt_weekDay, opt_firstDayOfWeek);\n\n  return new Date(cutoffSameWeek).getFullYear();\n};\n\n\n/**\n * @param {T} date1 A datelike object.\n * @param {S} date2 Another datelike object.\n * @return {T|S} The earlier of them in time.\n * @template T,S\n */\ngoog.date.min = function(date1, date2) {\n  'use strict';\n  return date1 < date2 ? date1 : date2;\n};\n\n\n/**\n * @param {T} date1 A datelike object.\n * @param {S} date2 Another datelike object.\n * @return {T|S} The later of them in time.\n * @template T,S\n */\ngoog.date.max = function(date1, date2) {\n  'use strict';\n  return date1 > date2 ? date1 : date2;\n};\n\n\n/**\n * Parses a datetime string expressed in ISO 8601 format. Overwrites the date\n * and optionally the time part of the given object with the parsed values.\n *\n * @param {!goog.date.DateTime} dateTime Object whose fields will be set.\n * @param {string} formatted A date or datetime expressed in ISO 8601 format.\n * @return {boolean} Whether the parsing succeeded.\n */\ngoog.date.setIso8601DateTime = function(dateTime, formatted) {\n  'use strict';\n  formatted = goog.string.trim(formatted);\n  var delim = formatted.indexOf('T') == -1 ? ' ' : 'T';\n  var parts = formatted.split(delim);\n  return goog.date.setIso8601DateOnly_(dateTime, parts[0]) &&\n      (parts.length < 2 || goog.date.setIso8601TimeOnly_(dateTime, parts[1]));\n};\n\n\n/**\n * Sets date fields based on an ISO 8601 format string.\n *\n * @param {!goog.date.Date} d Object whose fields will be set.\n * @param {string} formatted A date expressed in ISO 8601 format.\n * @return {boolean} Whether the parsing succeeded.\n * @private\n */\ngoog.date.setIso8601DateOnly_ = function(d, formatted) {\n  'use strict';\n  // split the formatted ISO date string into its date fields\n  var parts = formatted.match(goog.date.splitDateStringRegex_);\n  if (!parts) {\n    return false;\n  }\n\n  var year = Number(parts[1]);\n  var month = Number(parts[2]);\n  var date = Number(parts[3]);\n  var dayOfYear = Number(parts[4]);\n  var week = Number(parts[5]);\n  // ISO weekdays start with 1, native getDay() values start with 0\n  var dayOfWeek = Number(parts[6]) || 1;\n\n  d.setFullYear(year);\n\n  if (dayOfYear) {\n    d.setDate(1);\n    d.setMonth(0);\n    var offset = dayOfYear - 1;  // offset, so 1-indexed, i.e., skip day 1\n    d.add(new goog.date.Interval(goog.date.Interval.DAYS, offset));\n  } else if (week) {\n    goog.date.setDateFromIso8601Week_(d, week, dayOfWeek);\n  } else {\n    if (month) {\n      d.setDate(1);\n      d.setMonth(month - 1);\n    }\n    if (date) {\n      d.setDate(date);\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Sets date fields based on an ISO 8601 week string.\n * See {@link http://en.wikipedia.org/wiki/ISO_week_date}, \"Relation with the\n * Gregorian Calendar\".  The first week of a new ISO year is the week with the\n * majority of its days in the new Gregorian year.  I.e., ISO Week 1's Thursday\n * is in that year.  ISO weeks always start on Monday. So ISO Week 1 can\n * contain a few days from the previous Gregorian year.  And ISO weeks always\n * end on Sunday, so the last ISO week (Week 52 or 53) can have a few days from\n * the following Gregorian year.\n * Example: '1997-W01' lasts from 1996-12-30 to 1997-01-05.  January 1, 1997 is\n * a Wednesday. So W01's Monday is Dec.30, 1996, and Sunday is January 5, 1997.\n *\n * @param {!goog.date.Date} d Object whose fields will be set.\n * @param {number} week ISO week number.\n * @param {number} dayOfWeek ISO day of week.\n * @private\n */\ngoog.date.setDateFromIso8601Week_ = function(d, week, dayOfWeek) {\n  'use strict';\n  // calculate offset for first week\n  d.setMonth(0);\n  d.setDate(1);\n  var jsDay = d.getDay();\n  // switch Sunday (0) to index 7; ISO days are 1-indexed\n  var jan1WeekDay = jsDay || 7;\n\n  var THURSDAY = 4;\n  if (jan1WeekDay <= THURSDAY) {\n    // was extended back to Monday\n    var startDelta = 1 - jan1WeekDay;  // e.g., Thu(4) ==> -3\n  } else {\n    // was extended forward to Monday\n    startDelta = 8 - jan1WeekDay;  // e.g., Fri(5) ==> +3\n  }\n\n  // find the absolute number of days to offset from the start of year\n  // to arrive close to the Gregorian equivalent (pending adjustments above)\n  // Note: decrement week multiplier by one because 1st week is\n  // represented by dayOfWeek value\n  var absoluteDays = Number(dayOfWeek) + (7 * (Number(week) - 1));\n\n  // convert from ISO weekday format to Gregorian calendar date\n  // note: subtract 1 because 1-indexed; offset should not include 1st of month\n  var delta = startDelta + absoluteDays - 1;\n  var interval = new goog.date.Interval(goog.date.Interval.DAYS, delta);\n  d.add(interval);\n};\n\n\n/**\n * Sets time fields based on an ISO 8601 format string.\n * Note: only time fields, not date fields.\n *\n * @param {!goog.date.DateTime} d Object whose fields will be set.\n * @param {string} formatted A time expressed in ISO 8601 format.\n * @return {boolean} Whether the parsing succeeded.\n * @private\n */\ngoog.date.setIso8601TimeOnly_ = function(d, formatted) {\n  'use strict';\n  // first strip timezone info from the end\n  var timezoneParts = formatted.match(goog.date.splitTimezoneStringRegex_);\n\n  var offsetMinutes;  // Offset from UTC if not local time\n  var formattedTime;  // The time components of the input string; no timezone.\n\n  if (timezoneParts) {\n    // Trim off the timezone characters.\n    formattedTime =\n        formatted.substring(0, formatted.length - timezoneParts[0].length);\n\n    // 'Z' indicates a UTC timestring.\n    if (timezoneParts[0] === 'Z') {\n      offsetMinutes = 0;\n    } else {\n      offsetMinutes = Number(timezoneParts[2]) * 60 + Number(timezoneParts[3]);\n      offsetMinutes *= (timezoneParts[1] == '-') ? 1 : -1;\n    }\n  } else {\n    formattedTime = formatted;\n  }\n\n  var timeParts = formattedTime.match(goog.date.splitTimeStringRegex_);\n  if (!timeParts) {\n    return false;\n  }\n\n  // We have to branch on local vs non-local times because we can't always\n  // calculate the correct UTC offset for the specified time. Specifically, the\n  // offset for daylight-savings time depends on the date being set. Therefore,\n  // when an offset is specified, we apply it verbatim.\n  if (timezoneParts) {\n    goog.asserts.assertNumber(offsetMinutes);\n\n    // Convert the date part into UTC. This is important because the local date\n    // can differ from the UTC date, and the date part of an ISO 8601 string is\n    // always set in terms of the local date.\n    var year = d.getYear();\n    var month = d.getMonth();\n    var day = d.getDate();\n    var hour = Number(timeParts[1]);\n    var minute = Number(timeParts[2]) || 0;\n    var second = Number(timeParts[3]) || 0;\n    var millisecond = timeParts[4] ? Number(timeParts[4]) * 1000 : 0;\n\n    // Date.UTC treats one- and two-digit years as if they were four-digit years\n    // beginning in 1900 (for example, a year specified as 84 becomes 1984).\n    // Since we use it in this code path, we need to account for this by\n    // incrementing the input year by 400 (in order to bypass the two-digit year\n    // behavior), and then compensate by deducting the number of milliseconds in\n    // the 400-year Gregorian calendar cycle.\n    const twoDigitYear = year >= 0 && year < 100;\n    if (twoDigitYear) {\n      year += 400;\n    }\n    let utc = Date.UTC(year, month, day, hour, minute, second, millisecond);\n    if (twoDigitYear) {\n      utc -= goog.date.MS_PER_GREGORIAN_CYCLE_;\n    }\n    d.setTime(utc + offsetMinutes * 60000);\n  } else {\n    d.setHours(Number(timeParts[1]));\n    d.setMinutes(Number(timeParts[2]) || 0);\n    d.setSeconds(Number(timeParts[3]) || 0);\n    d.setMilliseconds(timeParts[4] ? Number(timeParts[4]) * 1000 : 0);\n  }\n\n  return true;\n};\n\n\n/**\n * Pads the year to 4 unsigned digits, or 6 digits with a sign.\n * @param {number} year\n * @return {string}\n */\ngoog.date.padYear_ = function(year) {\n  const sign = year < 0 ? '-' : year >= 10000 ? '+' : '';\n  return sign + goog.string.padNumber(Math.abs(year), sign ? 6 : 4);\n};\n\n\n/**\n * Class representing a date/time interval. Used for date calculations.\n * <pre>\n * new goog.date.Interval(0, 1) // One month\n * new goog.date.Interval(0, 0, 3, 1) // Three days and one hour\n * new goog.date.Interval(goog.date.Interval.DAYS, 1) // One day\n * </pre>\n *\n * @param {number|string=} opt_years Years or string representing date part.\n * @param {number=} opt_months Months or number of whatever date part specified\n *     by first parameter.\n * @param {number=} opt_days Days.\n * @param {number=} opt_hours Hours.\n * @param {number=} opt_minutes Minutes.\n * @param {number=} opt_seconds Seconds.\n * @constructor\n * @struct\n * @final\n */\ngoog.date.Interval = function(\n    opt_years, opt_months, opt_days, opt_hours, opt_minutes, opt_seconds) {\n  'use strict';\n  if (typeof opt_years === 'string') {\n    var type = opt_years;\n    var interval = /** @type {number} */ (opt_months);\n    /** @type {number} */\n    this.years = type == goog.date.Interval.YEARS ? interval : 0;\n    /** @type {number} */\n    this.months = type == goog.date.Interval.MONTHS ? interval : 0;\n    /** @type {number} */\n    this.days = type == goog.date.Interval.DAYS ? interval : 0;\n    /** @type {number} */\n    this.hours = type == goog.date.Interval.HOURS ? interval : 0;\n    /** @type {number} */\n    this.minutes = type == goog.date.Interval.MINUTES ? interval : 0;\n    /** @type {number} */\n    this.seconds = type == goog.date.Interval.SECONDS ? interval : 0;\n  } else {\n    this.years = /** @type {number} */ (opt_years) || 0;\n    this.months = opt_months || 0;\n    this.days = opt_days || 0;\n    this.hours = opt_hours || 0;\n    this.minutes = opt_minutes || 0;\n    this.seconds = opt_seconds || 0;\n  }\n};\n\n\n/**\n * Parses an XML Schema duration (ISO 8601 extended).\n * @see http://www.w3.org/TR/xmlschema-2/#duration\n *\n * @param  {string} duration An XML schema duration in textual format.\n *     Recurring durations and weeks are not supported.\n * @return {goog.date.Interval} The duration as a goog.date.Interval or null\n *     if the parse fails.\n */\ngoog.date.Interval.fromIsoString = function(duration) {\n  'use strict';\n  var parts = duration.match(goog.date.splitDurationRegex_);\n  if (!parts) {\n    return null;\n  }\n\n  var timeEmpty = !(parts[6] || parts[7] || parts[8]);\n  var dateTimeEmpty = timeEmpty && !(parts[2] || parts[3] || parts[4]);\n  if (dateTimeEmpty || timeEmpty && parts[5]) {\n    return null;\n  }\n\n  var negative = parts[1];\n  var years = parseInt(parts[2], 10) || 0;\n  var months = parseInt(parts[3], 10) || 0;\n  var days = parseInt(parts[4], 10) || 0;\n  var hours = parseInt(parts[6], 10) || 0;\n  var minutes = parseInt(parts[7], 10) || 0;\n  var seconds = parseFloat(parts[8]) || 0;\n  return negative ?\n      new goog.date.Interval(\n          -years, -months, -days, -hours, -minutes, -seconds) :\n      new goog.date.Interval(years, months, days, hours, minutes, seconds);\n};\n\n\n/**\n * Serializes goog.date.Interval into XML Schema duration (ISO 8601 extended).\n * @see http://www.w3.org/TR/xmlschema-2/#duration\n *\n * @param {boolean=} opt_verbose Include zero fields in the duration string.\n * @return {?string} An XML schema duration in ISO 8601 extended format,\n *     or null if the interval contains both positive and negative fields.\n */\ngoog.date.Interval.prototype.toIsoString = function(opt_verbose) {\n  'use strict';\n  var minField = Math.min(\n      this.years, this.months, this.days, this.hours, this.minutes,\n      this.seconds);\n  var maxField = Math.max(\n      this.years, this.months, this.days, this.hours, this.minutes,\n      this.seconds);\n  if (minField < 0 && maxField > 0) {\n    return null;\n  }\n\n  // Return 0 seconds if all fields are zero.\n  if (!opt_verbose && minField == 0 && maxField == 0) {\n    return 'PT0S';\n  }\n\n  var res = [];\n\n  // Add sign and 'P' prefix.\n  if (minField < 0) {\n    res.push('-');\n  }\n  res.push('P');\n\n  // Add date.\n  if (this.years || opt_verbose) {\n    res.push(Math.abs(this.years) + 'Y');\n  }\n  if (this.months || opt_verbose) {\n    res.push(Math.abs(this.months) + 'M');\n  }\n  if (this.days || opt_verbose) {\n    res.push(Math.abs(this.days) + 'D');\n  }\n\n  // Add time.\n  if (this.hours || this.minutes || this.seconds || opt_verbose) {\n    res.push('T');\n    if (this.hours || opt_verbose) {\n      res.push(Math.abs(this.hours) + 'H');\n    }\n    if (this.minutes || opt_verbose) {\n      res.push(Math.abs(this.minutes) + 'M');\n    }\n    if (this.seconds || opt_verbose) {\n      res.push(Math.abs(this.seconds) + 'S');\n    }\n  }\n\n  return res.join('');\n};\n\n\n/**\n * Tests whether the given interval is equal to this interval.\n * Note, this is a simple field-by-field comparison, it doesn't\n * account for comparisons like \"12 months == 1 year\".\n *\n * @param {goog.date.Interval} other The interval to test.\n * @return {boolean} Whether the intervals are equal.\n */\ngoog.date.Interval.prototype.equals = function(other) {\n  'use strict';\n  return other.years == this.years && other.months == this.months &&\n      other.days == this.days && other.hours == this.hours &&\n      other.minutes == this.minutes && other.seconds == this.seconds;\n};\n\n\n/**\n * @return {!goog.date.Interval} A clone of the interval object.\n */\ngoog.date.Interval.prototype.clone = function() {\n  'use strict';\n  return new goog.date.Interval(\n      this.years, this.months, this.days, this.hours, this.minutes,\n      this.seconds);\n};\n\n\n/**\n * Years constant for the date parts.\n * @type {string}\n */\ngoog.date.Interval.YEARS = 'y';\n\n\n/**\n * Months constant for the date parts.\n * @type {string}\n */\ngoog.date.Interval.MONTHS = 'm';\n\n\n/**\n * Days constant for the date parts.\n * @type {string}\n */\ngoog.date.Interval.DAYS = 'd';\n\n\n/**\n * Hours constant for the date parts.\n * @type {string}\n */\ngoog.date.Interval.HOURS = 'h';\n\n\n/**\n * Minutes constant for the date parts.\n * @type {string}\n */\ngoog.date.Interval.MINUTES = 'n';\n\n\n/**\n * Seconds constant for the date parts.\n * @type {string}\n */\ngoog.date.Interval.SECONDS = 's';\n\n\n/**\n * @return {boolean} Whether all fields of the interval are zero.\n */\ngoog.date.Interval.prototype.isZero = function() {\n  'use strict';\n  return this.years == 0 && this.months == 0 && this.days == 0 &&\n      this.hours == 0 && this.minutes == 0 && this.seconds == 0;\n};\n\n\n/**\n * @return {!goog.date.Interval} Negative of this interval.\n */\ngoog.date.Interval.prototype.getInverse = function() {\n  'use strict';\n  return this.times(-1);\n};\n\n\n/**\n * Calculates n * (this interval) by memberwise multiplication.\n * @param {number} n An integer.\n * @return {!goog.date.Interval} n * this.\n */\ngoog.date.Interval.prototype.times = function(n) {\n  'use strict';\n  return new goog.date.Interval(\n      this.years * n, this.months * n, this.days * n, this.hours * n,\n      this.minutes * n, this.seconds * n);\n};\n\n\n/**\n * Gets the total number of seconds in the time interval. Assumes that months\n * and years are empty.\n * @return {number} Total number of seconds in the interval.\n */\ngoog.date.Interval.prototype.getTotalSeconds = function() {\n  'use strict';\n  goog.asserts.assert(this.years == 0 && this.months == 0);\n  return ((this.days * 24 + this.hours) * 60 + this.minutes) * 60 +\n      this.seconds;\n};\n\n\n/**\n * Adds the Interval in the argument to this Interval field by field.\n *\n * @param {goog.date.Interval} interval The Interval to add.\n */\ngoog.date.Interval.prototype.add = function(interval) {\n  'use strict';\n  this.years += interval.years;\n  this.months += interval.months;\n  this.days += interval.days;\n  this.hours += interval.hours;\n  this.minutes += interval.minutes;\n  this.seconds += interval.seconds;\n};\n\n\n/**\n * @typedef {(?Date|?goog.date.Date)}\n */\ngoog.date.DateLike;\n\n\n/**\n * Class representing a date. Defaults to current date if none is specified.\n *\n * Implements most methods of the native js Date object (except the time related\n * ones, {@see goog.date.DateTime}) and can be used interchangeably with it just\n * as if goog.date.Date was a synonym of Date. To make this more transparent,\n * Closure APIs should accept goog.date.DateLike instead of the real Date\n * object.\n *\n * @param {number|goog.date.DateLike=} opt_year Four digit year or a date-like\n *     object. If not set, the created object will contain the date\n *     determined by goog.now().\n * @param {number=} opt_month Month, 0 = Jan, 11 = Dec.\n * @param {number=} opt_date Date of month, 1 - 31.\n * @constructor\n * @struct\n * @see goog.date.DateTime\n */\ngoog.date.Date = function(opt_year, opt_month, opt_date) {\n  'use strict';\n  /** @protected {!Date} The wrapped date or datetime. */\n  this.date;\n  // goog.date.DateTime assumes that only this.date is added in this ctor.\n  if (typeof opt_year === 'number') {\n    this.date = this.buildDate_(opt_year, opt_month || 0, opt_date || 1);\n    this.maybeFixDst_(opt_date || 1);\n  } else if (goog.isObject(opt_year)) {\n    this.date = this.buildDate_(\n        opt_year.getFullYear(), opt_year.getMonth(), opt_year.getDate());\n    this.maybeFixDst_(opt_year.getDate());\n  } else {\n    this.date = new Date(goog.now());\n    var expectedDate = this.date.getDate();\n    this.date.setHours(0);\n    this.date.setMinutes(0);\n    this.date.setSeconds(0);\n    this.date.setMilliseconds(0);\n    // In some time zones there is no \"0\" hour on certain days during DST.\n    // Adjust here, if necessary. See:\n    // https://github.com/google/closure-library/issues/34.\n    this.maybeFixDst_(expectedDate);\n  }\n};\n\n\n/**\n * new Date(y, m, d) treats years in the interval [0, 100) as two digit years,\n * adding 1900 to them. This method ensures that calling the date constructor\n * as a copy constructor returns a value that is equal to the passed in\n * date value by explicitly setting the full year.\n * @private\n * @param {number} fullYear The full year (including century).\n * @param {number} month The month, from 0-11.\n * @param {number} date The day of the month.\n * @return {!Date} The constructed Date object.\n */\ngoog.date.Date.prototype.buildDate_ = function(fullYear, month, date) {\n  'use strict';\n  var d = new Date(fullYear, month, date);\n  if (fullYear >= 0 && fullYear < 100) {\n    // Can't just setFullYear as new Date() can flip over for e.g. month = 13.\n    d.setFullYear(d.getFullYear() - 1900);\n  }\n  return d;\n};\n\n\n/**\n * First day of week. 0 = Mon, 6 = Sun.\n * @type {number}\n * @private\n */\ngoog.date.Date.prototype.firstDayOfWeek_ =\n    goog.i18n.DateTimeSymbols.FIRSTDAYOFWEEK;\n\n\n/**\n * The cut off weekday used for week number calculations. 0 = Mon, 6 = Sun.\n * @type {number}\n * @private\n */\ngoog.date.Date.prototype.firstWeekCutOffDay_ =\n    goog.i18n.DateTimeSymbols.FIRSTWEEKCUTOFFDAY;\n\n\n/**\n * @return {!goog.date.Date} A clone of the date object.\n */\ngoog.date.Date.prototype.clone = function() {\n  'use strict';\n  var date = new goog.date.Date(this.date);\n  date.firstDayOfWeek_ = this.firstDayOfWeek_;\n  date.firstWeekCutOffDay_ = this.firstWeekCutOffDay_;\n\n  return date;\n};\n\n\n/**\n * @return {number} The four digit year of date.\n */\ngoog.date.Date.prototype.getFullYear = function() {\n  'use strict';\n  return this.date.getFullYear();\n};\n\n\n/**\n * Alias for getFullYear.\n *\n * @return {number} The four digit year of date.\n * @see #getFullYear\n */\ngoog.date.Date.prototype.getYear = function() {\n  'use strict';\n  return this.getFullYear();\n};\n\n\n/**\n * @return {goog.date.month} The month of date, 0 = Jan, 11 = Dec.\n */\ngoog.date.Date.prototype.getMonth = function() {\n  'use strict';\n  return /** @type {goog.date.month} */ (this.date.getMonth());\n};\n\n\n/**\n * @return {number} The date of month.\n */\ngoog.date.Date.prototype.getDate = function() {\n  'use strict';\n  return this.date.getDate();\n};\n\n\n/**\n * Returns the number of milliseconds since 1 January 1970 00:00:00.\n *\n * @return {number} The number of milliseconds since 1 January 1970 00:00:00.\n */\ngoog.date.Date.prototype.getTime = function() {\n  'use strict';\n  return this.date.getTime();\n};\n\n\n/**\n * @return {number} The day of week, US style. 0 = Sun, 6 = Sat.\n */\ngoog.date.Date.prototype.getDay = function() {\n  'use strict';\n  return this.date.getDay();\n};\n\n\n/**\n * @return {goog.date.weekDay} The day of week, ISO style. 0 = Mon, 6 = Sun.\n */\ngoog.date.Date.prototype.getIsoWeekday = function() {\n  'use strict';\n  return /** @type {goog.date.weekDay} */ ((this.getDay() + 6) % 7);\n};\n\n\n/**\n * @return {number} The day of week according to firstDayOfWeek setting.\n */\ngoog.date.Date.prototype.getWeekday = function() {\n  'use strict';\n  return (this.getIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;\n};\n\n\n/**\n * @return {number} The four digit year of date according to universal time.\n */\ngoog.date.Date.prototype.getUTCFullYear = function() {\n  'use strict';\n  return this.date.getUTCFullYear();\n};\n\n\n/**\n * @return {goog.date.month} The month of date according to universal time,\n *     0 = Jan, 11 = Dec.\n */\ngoog.date.Date.prototype.getUTCMonth = function() {\n  'use strict';\n  return /** @type {goog.date.month} */ (this.date.getUTCMonth());\n};\n\n\n/**\n * @return {number} The date of month according to universal time.\n */\ngoog.date.Date.prototype.getUTCDate = function() {\n  'use strict';\n  return this.date.getUTCDate();\n};\n\n\n/**\n * @return {number} The day of week according to universal time, US style.\n *     0 = Sun, 1 = Mon, 6 = Sat.\n */\ngoog.date.Date.prototype.getUTCDay = function() {\n  'use strict';\n  return this.date.getDay();\n};\n\n\n/**\n * @return {number} The hours value according to universal time.\n */\ngoog.date.Date.prototype.getUTCHours = function() {\n  'use strict';\n  return this.date.getUTCHours();\n};\n\n\n/**\n * @return {number} The minutes value according to universal time.\n */\ngoog.date.Date.prototype.getUTCMinutes = function() {\n  'use strict';\n  return this.date.getUTCMinutes();\n};\n\n\n/**\n * @return {goog.date.weekDay} The day of week according to universal time, ISO\n *     style. 0 = Mon, 6 = Sun.\n */\ngoog.date.Date.prototype.getUTCIsoWeekday = function() {\n  'use strict';\n  return /** @type {goog.date.weekDay} */ ((this.date.getUTCDay() + 6) % 7);\n};\n\n\n/**\n * @return {number} The day of week according to universal time and\n *     firstDayOfWeek setting.\n */\ngoog.date.Date.prototype.getUTCWeekday = function() {\n  'use strict';\n  return (this.getUTCIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;\n};\n\n\n/**\n * @return {number} The first day of the week. 0 = Mon, 6 = Sun.\n */\ngoog.date.Date.prototype.getFirstDayOfWeek = function() {\n  'use strict';\n  return this.firstDayOfWeek_;\n};\n\n\n/**\n * @return {number} The cut off weekday used for week number calculations.\n *     0 = Mon, 6 = Sun.\n */\ngoog.date.Date.prototype.getFirstWeekCutOffDay = function() {\n  'use strict';\n  return this.firstWeekCutOffDay_;\n};\n\n\n/**\n * @return {number} The number of days for the selected month.\n */\ngoog.date.Date.prototype.getNumberOfDaysInMonth = function() {\n  'use strict';\n  return goog.date.getNumberOfDaysInMonth(this.getFullYear(), this.getMonth());\n};\n\n\n/**\n * @return {number} The week number.\n */\ngoog.date.Date.prototype.getWeekNumber = function() {\n  'use strict';\n  return goog.date.getWeekNumber(\n      this.getFullYear(), this.getMonth(), this.getDate(),\n      this.firstWeekCutOffDay_, this.firstDayOfWeek_);\n};\n\n\n/**\n * Returns year in \u201cWeek of Year\u201d based calendars in which the year transition\n * occurs on a week boundary.\n * @return {number} The four digit year in \"Week of Year\"\n */\ngoog.date.Date.prototype.getYearOfWeek = function() {\n  'use strict';\n  return goog.date.getYearOfWeek(\n      this.getFullYear(), this.getMonth(), this.getDate(),\n      this.firstWeekCutOffDay_, this.firstDayOfWeek_);\n};\n\n\n/**\n * @return {number} The day of year.\n */\ngoog.date.Date.prototype.getDayOfYear = function() {\n  'use strict';\n  var dayOfYear = this.getDate();\n  var year = this.getFullYear();\n  for (var m = this.getMonth() - 1; m >= 0; m--) {\n    dayOfYear += goog.date.getNumberOfDaysInMonth(year, m);\n  }\n\n  return dayOfYear;\n};\n\n\n/**\n * Returns timezone offset. The timezone offset is the delta in minutes between\n * UTC and your local time. E.g., UTC+10 returns -600. Daylight savings time\n * prevents this value from being constant.\n *\n * @return {number} The timezone offset.\n */\ngoog.date.Date.prototype.getTimezoneOffset = function() {\n  'use strict';\n  return this.date.getTimezoneOffset();\n};\n\n\n/**\n * Returns timezone offset as a string. Returns offset in [+-]HH:mm format or Z\n * for UTC.\n *\n * @return {string} The timezone offset as a string.\n */\ngoog.date.Date.prototype.getTimezoneOffsetString = function() {\n  'use strict';\n  var tz;\n  var offset = this.getTimezoneOffset();\n\n  if (offset == 0) {\n    tz = 'Z';\n  } else {\n    var n = Math.abs(offset) / 60;\n    var h = Math.floor(n);\n    var m = (n - h) * 60;\n    tz = (offset > 0 ? '-' : '+') + goog.string.padNumber(h, 2) + ':' +\n        goog.string.padNumber(m, 2);\n  }\n\n  return tz;\n};\n\n\n/**\n * Sets the date.\n *\n * @param {goog.date.Date} date Date object to set date from.\n */\ngoog.date.Date.prototype.set = function(date) {\n  'use strict';\n  this.date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n};\n\n\n/**\n * Sets the year part of the date.\n *\n * @param {number} year Four digit year.\n */\ngoog.date.Date.prototype.setFullYear = function(year) {\n  'use strict';\n  this.date.setFullYear(year);\n};\n\n\n/**\n * Alias for setFullYear.\n *\n * @param {number} year Four digit year.\n * @see #setFullYear\n */\ngoog.date.Date.prototype.setYear = function(year) {\n  'use strict';\n  this.setFullYear(year);\n};\n\n\n/**\n * Sets the month part of the date.\n *\n * TODO(nnaze): Update type to goog.date.month.\n *\n * @param {number} month The month, where 0 = Jan, 11 = Dec.\n */\ngoog.date.Date.prototype.setMonth = function(month) {\n  'use strict';\n  this.date.setMonth(month);\n};\n\n\n/**\n * Sets the day part of the date.\n *\n * @param {number} date The day part.\n */\ngoog.date.Date.prototype.setDate = function(date) {\n  'use strict';\n  this.date.setDate(date);\n};\n\n\n/**\n * Sets the value of the date object as expressed in the number of milliseconds\n * since 1 January 1970 00:00:00.\n *\n * @param {number} ms Number of milliseconds since 1 Jan 1970.\n */\ngoog.date.Date.prototype.setTime = function(ms) {\n  'use strict';\n  this.date.setTime(ms);\n};\n\n\n/**\n * Sets the year part of the date according to universal time.\n *\n * @param {number} year Four digit year.\n */\ngoog.date.Date.prototype.setUTCFullYear = function(year) {\n  'use strict';\n  this.date.setUTCFullYear(year);\n};\n\n\n/**\n * Sets the month part of the date according to universal time.\n *\n * @param {number} month The month, where 0 = Jan, 11 = Dec.\n */\ngoog.date.Date.prototype.setUTCMonth = function(month) {\n  'use strict';\n  this.date.setUTCMonth(month);\n};\n\n\n/**\n * Sets the day part of the date according to universal time.\n *\n * @param {number} date The UTC date.\n */\ngoog.date.Date.prototype.setUTCDate = function(date) {\n  'use strict';\n  this.date.setUTCDate(date);\n};\n\n\n/**\n * Sets the first day of week.\n *\n * @param {number} day 0 = Mon, 6 = Sun.\n */\ngoog.date.Date.prototype.setFirstDayOfWeek = function(day) {\n  'use strict';\n  this.firstDayOfWeek_ = day;\n};\n\n\n/**\n * Sets cut off weekday used for week number calculations. 0 = Mon, 6 = Sun.\n *\n * @param {number} day The cut off weekday.\n */\ngoog.date.Date.prototype.setFirstWeekCutOffDay = function(day) {\n  'use strict';\n  this.firstWeekCutOffDay_ = day;\n};\n\n\n/**\n * Performs date calculation by adding the supplied interval to the date.\n *\n * @param {goog.date.Interval} interval Date interval to add.\n */\ngoog.date.Date.prototype.add = function(interval) {\n  'use strict';\n  if (interval.years || interval.months) {\n    // As months have different number of days adding a month to Jan 31 by just\n    // setting the month would result in a date in early March rather than Feb\n    // 28 or 29. Doing it this way overcomes that problem.\n\n    // adjust year and month, accounting for both directions\n    var month = this.getMonth() + interval.months + interval.years * 12;\n    var year = this.getYear() + Math.floor(month / 12);\n    month %= 12;\n    if (month < 0) {\n      month += 12;\n    }\n\n    var daysInTargetMonth = goog.date.getNumberOfDaysInMonth(year, month);\n    var date = Math.min(daysInTargetMonth, this.getDate());\n\n    // avoid inadvertently causing rollovers to adjacent months\n    this.setDate(1);\n\n    this.setFullYear(year);\n    this.setMonth(month);\n    this.setDate(date);\n  }\n\n  if (interval.days) {\n    // Because Javascript Date objects are being used and the 'year' argument\n    // to the constructor has special behavior for values 0-99 (inclusive),\n    // enable correcting for those special values being interpreted as relative\n    // to the year 1900 (rather than absolute year numbers as with all other\n    // integer values for that argument).\n    //\n    // Since only the constructor taking a separate field for the 'year' of\n    // a date behaves this way, the adjustment value depends only on the initial\n    // date. This is because the interval-adjusted date value uses a Date\n    // constructor that avoids the problematic, special behavior for years 0-99.\n    const initialYear = this.getYear();\n    const yearAdjustment = initialYear >= 0 && initialYear <= 99 ? -1900 : 0;\n\n    // Convert the days to milliseconds and add it to the UNIX timestamp.\n    // Taking noon helps to avoid 1 day error due to the daylight saving.\n    const noon = new Date(initialYear, this.getMonth(), this.getDate(), 12);\n    const result = new Date(noon.getTime() + interval.days * 86400000);\n\n    // Set date to 1 to prevent rollover caused by setting the year or month.\n    this.setDate(1);\n    this.setFullYear(result.getFullYear() + yearAdjustment);\n    this.setMonth(result.getMonth());\n    this.setDate(result.getDate());\n\n    this.maybeFixDst_(result.getDate());\n  }\n};\n\n\n/**\n * Returns ISO 8601 string representation of date. Consistent with the\n * standard built-in Date#toISOString method, the year is either four digits\n * (YYYY) or six with a sign prefix (\u00b1YYYYYY), since ISO 8601 requires the\n * number of digits in the year to be agreed upon in advance.\n *\n * @param {boolean=} opt_verbose Whether the verbose format should be used\n *     instead of the default compact one.\n * @param {boolean=} opt_tz Whether the timezone offset should be included\n *     in the string.\n * @return {string} ISO 8601 string representation of date.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\n */\ngoog.date.Date.prototype.toIsoString = function(opt_verbose, opt_tz) {\n  'use strict';\n  var str = [\n    goog.date.padYear_(this.getFullYear()),\n    goog.string.padNumber(this.getMonth() + 1, 2),\n    goog.string.padNumber(this.getDate(), 2)\n  ];\n\n  return str.join((opt_verbose) ? '-' : '') +\n      (opt_tz ? this.getTimezoneOffsetString() : '');\n};\n\n\n/**\n * Returns ISO 8601 string representation of date according to universal time.\n *\n * @param {boolean=} opt_verbose Whether the verbose format should be used\n *     instead of the default compact one.\n * @param {boolean=} opt_tz Whether the timezone offset should be included in\n *     the string.\n * @return {string} ISO 8601 string representation of date according to\n *     universal time.\n */\ngoog.date.Date.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {\n  'use strict';\n  var str = [\n    goog.date.padYear_(this.getUTCFullYear()),\n    goog.string.padNumber(this.getUTCMonth() + 1, 2),\n    goog.string.padNumber(this.getUTCDate(), 2)\n  ];\n\n  return str.join((opt_verbose) ? '-' : '') + (opt_tz ? 'Z' : '');\n};\n\n\n/**\n * Tests whether given date is equal to this Date.\n * Note: This ignores units more precise than days (hours and below)\n * and also ignores timezone considerations.\n *\n * @param {goog.date.Date} other The date to compare.\n * @return {boolean} Whether the given date is equal to this one.\n */\ngoog.date.Date.prototype.equals = function(other) {\n  'use strict';\n  return !!(\n      other && this.getYear() == other.getYear() &&\n      this.getMonth() == other.getMonth() && this.getDate() == other.getDate());\n};\n\n\n/**\n * Overloaded toString method for object.\n * @return {string} ISO 8601 string representation of date.\n * @override\n */\ngoog.date.Date.prototype.toString = function() {\n  'use strict';\n  return this.toIsoString();\n};\n\n\n/**\n * Fixes date to account for daylight savings time in browsers that fail to do\n * so automatically.\n * @param {number} expected Expected date.\n * @private\n */\ngoog.date.Date.prototype.maybeFixDst_ = function(expected) {\n  'use strict';\n  if (this.getDate() != expected) {\n    var dir = this.getDate() < expected ? 1 : -1;\n    this.date.setUTCHours(this.date.getUTCHours() + dir);\n  }\n};\n\n\n/**\n * @return {number} Value of wrapped date.\n * @override\n */\ngoog.date.Date.prototype.valueOf = function() {\n  'use strict';\n  return this.date.valueOf();\n};\n\n\n/**\n * Compares two dates.  May be used as a sorting function.\n * @see goog.array.sort\n * @param {!goog.date.DateLike} date1 Date to compare.\n * @param {!goog.date.DateLike} date2 Date to compare.\n * @return {number} Comparison result. 0 if dates are the same, less than 0 if\n *     date1 is earlier than date2, greater than 0 if date1 is later than date2.\n */\ngoog.date.Date.compare = function(date1, date2) {\n  'use strict';\n  return date1.getTime() - date2.getTime();\n};\n\n\n/**\n * Parses an ISO 8601 string as a `goog.date.Date`.\n * @param {string} formatted ISO 8601 string to parse.\n * @return {?goog.date.Date} Parsed date or null if parse fails.\n */\ngoog.date.Date.fromIsoString = function(formatted) {\n  'use strict';\n  var ret = new goog.date.Date(2000);\n  return goog.date.setIso8601DateOnly_(ret, formatted) ? ret : null;\n};\n\n\n\n/**\n * Class representing a date and time. Defaults to current date and time if none\n * is specified.\n *\n * Implements most methods of the native js Date object and can be used\n * interchangeably with it just as if goog.date.DateTime was a subclass of Date.\n *\n * @param {(number|{getTime:?}|null)=} opt_year Four digit year or a date-like\n *     object. If not set, the created object will contain the date determined\n *     by goog.now().\n * @param {number=} opt_month Month, 0 = Jan, 11 = Dec.\n * @param {number=} opt_date Date of month, 1 - 31.\n * @param {number=} opt_hours Hours, 0 - 23.\n * @param {number=} opt_minutes Minutes, 0 - 59.\n * @param {number=} opt_seconds Seconds, 0 - 61.\n * @param {number=} opt_milliseconds Milliseconds, 0 - 999.\n * @constructor\n * @struct\n * @extends {goog.date.Date}\n */\ngoog.date.DateTime = function(\n    opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds,\n    opt_milliseconds) {\n  'use strict';\n  if (typeof opt_year === 'number') {\n    /** @override */\n    this.date = new Date(\n        opt_year, opt_month || 0, opt_date || 1, opt_hours || 0,\n        opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0);\n  } else {\n    this.date = new Date(\n        opt_year && opt_year.getTime ? opt_year.getTime() : goog.now());\n  }\n};\ngoog.inherits(goog.date.DateTime, goog.date.Date);\n\n\n/**\n * @param {number} timestamp Number of milliseconds since Epoch.\n * @return {!goog.date.DateTime}\n */\ngoog.date.DateTime.fromTimestamp = function(timestamp) {\n  'use strict';\n  var date = new goog.date.DateTime();\n  date.setTime(timestamp);\n  return date;\n};\n\n\n/**\n * Creates a DateTime from a datetime string expressed in RFC 822 format.\n *\n * @param {string} formatted A date or datetime expressed in RFC 822 format.\n * @return {goog.date.DateTime} Parsed date or null if parse fails.\n */\ngoog.date.DateTime.fromRfc822String = function(formatted) {\n  'use strict';\n  var date = new Date(formatted);\n  return !isNaN(date.getTime()) ? new goog.date.DateTime(date) : null;\n};\n\n\n/**\n * Returns the hours part of the datetime.\n *\n * @return {number} An integer between 0 and 23, representing the hour.\n */\ngoog.date.DateTime.prototype.getHours = function() {\n  'use strict';\n  return this.date.getHours();\n};\n\n\n/**\n * Returns the minutes part of the datetime.\n *\n * @return {number} An integer between 0 and 59, representing the minutes.\n */\ngoog.date.DateTime.prototype.getMinutes = function() {\n  'use strict';\n  return this.date.getMinutes();\n};\n\n\n/**\n * Returns the seconds part of the datetime.\n *\n * @return {number} An integer between 0 and 59, representing the seconds.\n */\ngoog.date.DateTime.prototype.getSeconds = function() {\n  'use strict';\n  return this.date.getSeconds();\n};\n\n\n/**\n * Returns the milliseconds part of the datetime.\n *\n * @return {number} An integer between 0 and 999, representing the milliseconds.\n */\ngoog.date.DateTime.prototype.getMilliseconds = function() {\n  'use strict';\n  return this.date.getMilliseconds();\n};\n\n\n/**\n * Returns the day of week according to universal time, US style.\n *\n * @return {goog.date.weekDay} Day of week, 0 = Sun, 1 = Mon, 6 = Sat.\n * @override\n */\ngoog.date.DateTime.prototype.getUTCDay = function() {\n  'use strict';\n  return /** @type {goog.date.weekDay} */ (this.date.getUTCDay());\n};\n\n\n/**\n * Returns the hours part of the datetime according to universal time.\n *\n * @return {number} An integer between 0 and 23, representing the hour.\n * @override\n */\ngoog.date.DateTime.prototype.getUTCHours = function() {\n  'use strict';\n  return this.date.getUTCHours();\n};\n\n\n/**\n * Returns the minutes part of the datetime according to universal time.\n *\n * @return {number} An integer between 0 and 59, representing the minutes.\n * @override\n */\ngoog.date.DateTime.prototype.getUTCMinutes = function() {\n  'use strict';\n  return this.date.getUTCMinutes();\n};\n\n\n/**\n * Returns the seconds part of the datetime according to universal time.\n *\n * @return {number} An integer between 0 and 59, representing the seconds.\n */\ngoog.date.DateTime.prototype.getUTCSeconds = function() {\n  'use strict';\n  return this.date.getUTCSeconds();\n};\n\n\n/**\n * Returns the milliseconds part of the datetime according to universal time.\n *\n * @return {number} An integer between 0 and 999, representing the milliseconds.\n */\ngoog.date.DateTime.prototype.getUTCMilliseconds = function() {\n  'use strict';\n  return this.date.getUTCMilliseconds();\n};\n\n\n/**\n * Sets the hours part of the datetime.\n *\n * @param {number} hours An integer between 0 and 23, representing the hour.\n */\ngoog.date.DateTime.prototype.setHours = function(hours) {\n  'use strict';\n  this.date.setHours(hours);\n};\n\n\n/**\n * Sets the minutes part of the datetime.\n *\n * @param {number} minutes Integer between 0 and 59, representing the minutes.\n */\ngoog.date.DateTime.prototype.setMinutes = function(minutes) {\n  'use strict';\n  this.date.setMinutes(minutes);\n};\n\n\n/**\n * Sets the seconds part of the datetime.\n *\n * @param {number} seconds Integer between 0 and 59, representing the seconds.\n */\ngoog.date.DateTime.prototype.setSeconds = function(seconds) {\n  'use strict';\n  this.date.setSeconds(seconds);\n};\n\n\n/**\n * Sets the milliseconds part of the datetime.\n *\n * @param {number} ms Integer between 0 and 999, representing the milliseconds.\n */\ngoog.date.DateTime.prototype.setMilliseconds = function(ms) {\n  'use strict';\n  this.date.setMilliseconds(ms);\n};\n\n\n/**\n * Sets the hours part of the datetime according to universal time.\n *\n * @param {number} hours An integer between 0 and 23, representing the hour.\n */\ngoog.date.DateTime.prototype.setUTCHours = function(hours) {\n  'use strict';\n  this.date.setUTCHours(hours);\n};\n\n\n/**\n * Sets the minutes part of the datetime according to universal time.\n *\n * @param {number} minutes Integer between 0 and 59, representing the minutes.\n */\ngoog.date.DateTime.prototype.setUTCMinutes = function(minutes) {\n  'use strict';\n  this.date.setUTCMinutes(minutes);\n};\n\n\n/**\n * Sets the seconds part of the datetime according to universal time.\n *\n * @param {number} seconds Integer between 0 and 59, representing the seconds.\n */\ngoog.date.DateTime.prototype.setUTCSeconds = function(seconds) {\n  'use strict';\n  this.date.setUTCSeconds(seconds);\n};\n\n\n/**\n * Sets the seconds part of the datetime according to universal time.\n *\n * @param {number} ms Integer between 0 and 999, representing the milliseconds.\n */\ngoog.date.DateTime.prototype.setUTCMilliseconds = function(ms) {\n  'use strict';\n  this.date.setUTCMilliseconds(ms);\n};\n\n\n/**\n * @return {boolean} Whether the datetime is aligned to midnight.\n */\ngoog.date.DateTime.prototype.isMidnight = function() {\n  'use strict';\n  return this.getHours() == 0 && this.getMinutes() == 0 &&\n      this.getSeconds() == 0 && this.getMilliseconds() == 0;\n};\n\n\n/**\n * Performs date calculation by adding the supplied interval to the date.\n *\n * @param {goog.date.Interval} interval Date interval to add.\n * @override\n */\ngoog.date.DateTime.prototype.add = function(interval) {\n  'use strict';\n  goog.date.Date.prototype.add.call(this, interval);\n\n  if (interval.hours) {\n    this.setUTCHours(this.date.getUTCHours() + interval.hours);\n  }\n  if (interval.minutes) {\n    this.setUTCMinutes(this.date.getUTCMinutes() + interval.minutes);\n  }\n  if (interval.seconds) {\n    this.setUTCSeconds(this.date.getUTCSeconds() + interval.seconds);\n  }\n};\n\n\n/**\n * Returns ISO 8601 string representation of date/time. Consistent with the\n * standard built-in Date#toISOString method, the year is either four digits\n * (YYYY) or six with a sign prefix (\u00b1YYYYYY), since ISO 8601 requires the\n * number of digits in the year to be agreed upon in advance.\n *\n * @param {boolean=} opt_verbose Whether the verbose format should be used\n *     instead of the default compact one.\n * @param {boolean=} opt_tz Whether the timezone offset should be included\n *     in the string.\n * @return {string} ISO 8601 string representation of date/time.\n * @override\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\n */\ngoog.date.DateTime.prototype.toIsoString = function(opt_verbose, opt_tz) {\n  'use strict';\n  var dateString = goog.date.Date.prototype.toIsoString.call(this, opt_verbose);\n\n  if (opt_verbose) {\n    return dateString + 'T' + goog.string.padNumber(this.getHours(), 2) + ':' +\n        goog.string.padNumber(this.getMinutes(), 2) + ':' +\n        goog.string.padNumber(this.getSeconds(), 2) +\n        (opt_tz ? this.getTimezoneOffsetString() : '');\n  }\n\n  return dateString + 'T' + goog.string.padNumber(this.getHours(), 2) +\n      goog.string.padNumber(this.getMinutes(), 2) +\n      goog.string.padNumber(this.getSeconds(), 2) +\n      (opt_tz ? this.getTimezoneOffsetString() : '');\n};\n\n\n/**\n * Returns XML Schema 2 string representation of date/time.\n * The return value is also ISO 8601 compliant.\n *\n * @param {boolean=} opt_timezone Should the timezone offset be included in the\n *     string?.\n * @return {string} XML Schema 2 string representation of date/time.\n */\ngoog.date.DateTime.prototype.toXmlDateTime = function(opt_timezone) {\n  'use strict';\n  return goog.date.Date.prototype.toIsoString.call(this, true) + 'T' +\n      goog.string.padNumber(this.getHours(), 2) + ':' +\n      goog.string.padNumber(this.getMinutes(), 2) + ':' +\n      goog.string.padNumber(this.getSeconds(), 2) +\n      (opt_timezone ? this.getTimezoneOffsetString() : '');\n};\n\n\n/**\n * Returns ISO 8601 string representation of date/time according to universal\n * time.\n *\n * @param {boolean=} opt_verbose Whether the opt_verbose format should be\n *     returned instead of the default compact one.\n * @param {boolean=} opt_tz Whether the timezone offset should be included in\n *     the string.\n * @return {string} ISO 8601 string representation of date/time according to\n *     universal time.\n * @override\n */\ngoog.date.DateTime.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {\n  'use strict';\n  var dateStr = goog.date.Date.prototype.toUTCIsoString.call(this, opt_verbose);\n\n  if (opt_verbose) {\n    return dateStr + 'T' + goog.string.padNumber(this.getUTCHours(), 2) + ':' +\n        goog.string.padNumber(this.getUTCMinutes(), 2) + ':' +\n        goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? 'Z' : '');\n  }\n\n  return dateStr + 'T' + goog.string.padNumber(this.getUTCHours(), 2) +\n      goog.string.padNumber(this.getUTCMinutes(), 2) +\n      goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? 'Z' : '');\n};\n\n\n/**\n * Returns RFC 3339 string representation of datetime in UTC.\n *\n * @return {string} A UTC datetime expressed in RFC 3339 format.\n */\ngoog.date.DateTime.prototype.toUTCRfc3339String = function() {\n  'use strict';\n  var date = this.toUTCIsoString(true);\n  var millis = this.getUTCMilliseconds();\n  return (millis ? date + '.' + goog.string.padNumber(millis, 3) : date) + 'Z';\n};\n\n\n/**\n * Tests whether given datetime is exactly equal to this DateTime.\n *\n * @param {goog.date.Date} other The datetime to compare.\n * @return {boolean} Whether the given datetime is exactly equal to this one.\n * @override\n */\ngoog.date.DateTime.prototype.equals = function(other) {\n  'use strict';\n  return this.getTime() == other.getTime();\n};\n\n\n/**\n * Overloaded toString method for object.\n * @return {string} ISO 8601 string representation of date/time.\n * @override\n */\ngoog.date.DateTime.prototype.toString = function() {\n  'use strict';\n  return this.toIsoString();\n};\n\n\n/**\n * Generates time label for the datetime, e.g., '5:30 AM'.\n * By default this does not pad hours (e.g., to '05:30') and it does add\n * an am/pm suffix.\n * TODO(timman): i18n -- hardcoding time format like this is bad.  E.g., in CJK\n *               locales, need Chinese characters for hour and minute units.\n * @param {boolean=} opt_padHours Whether to pad hours, e.g., '05:30' vs '5:30'.\n * @param {boolean=} opt_showAmPm Whether to show the 'am' and 'pm' suffix.\n * @param {boolean=} opt_omitZeroMinutes E.g., '5:00pm' becomes '5pm',\n *                                      but '5:01pm' remains '5:01pm'.\n * @return {string} The time label.\n * @deprecated Use goog.i18n.DateTimeFormat with\n *     goog.i18n.DateTimeFormat.Format.FULL_TIME or\n *     goog.i18n.DateTimeFormat.Format.LONG_TIME or\n *     goog.i18n.DateTimeFormat.Format.MEDIUM_TIME or\n *     goog.i18n.DateTimeFormat.Format.SHORT_TIME.\n */\ngoog.date.DateTime.prototype.toUsTimeString = function(\n    opt_padHours, opt_showAmPm, opt_omitZeroMinutes) {\n  'use strict';\n  var hours = this.getHours();\n\n  // show am/pm marker by default\n  if (opt_showAmPm === undefined) {\n    opt_showAmPm = true;\n  }\n\n  // 12pm\n  var isPM = hours == 12;\n\n  // change from 1-24 to 1-12 basis\n  if (hours > 12) {\n    hours -= 12;\n    isPM = true;\n  }\n\n  // midnight is expressed as \"12am\", but if am/pm marker omitted, keep as '0'\n  if (hours == 0 && opt_showAmPm) {\n    hours = 12;\n  }\n\n  var label = opt_padHours ? goog.string.padNumber(hours, 2) : String(hours);\n  var minutes = this.getMinutes();\n  if (!opt_omitZeroMinutes || minutes > 0) {\n    label += ':' + goog.string.padNumber(minutes, 2);\n  }\n\n  // by default, show am/pm suffix\n  if (opt_showAmPm) {\n    label += isPM ? ' PM' : ' AM';\n  }\n  return label;\n};\n\n\n/**\n * Generates time label for the datetime in standard ISO 24-hour time format.\n * E.g., '06:00:00' or '23:30:15'.\n * @param {boolean=} opt_showSeconds Whether to shows seconds. Defaults to TRUE.\n * @return {string} The time label.\n */\ngoog.date.DateTime.prototype.toIsoTimeString = function(opt_showSeconds) {\n  'use strict';\n  var hours = this.getHours();\n  var label = goog.string.padNumber(hours, 2) + ':' +\n      goog.string.padNumber(this.getMinutes(), 2);\n  if (opt_showSeconds === undefined || opt_showSeconds) {\n    label += ':' + goog.string.padNumber(this.getSeconds(), 2);\n  }\n  return label;\n};\n\n\n/**\n * @return {!goog.date.DateTime} A clone of the datetime object.\n * @override\n */\ngoog.date.DateTime.prototype.clone = function() {\n  'use strict';\n  var date = new goog.date.DateTime(this.date);\n  date.setFirstDayOfWeek(this.getFirstDayOfWeek());\n  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());\n  return date;\n};\n\n\n/**\n * Parses an ISO 8601 string as a `goog.date.DateTime`.\n * @param {string} formatted ISO 8601 string to parse.\n * @return {?goog.date.DateTime} Parsed date or null if parse fails.\n * @override\n */\ngoog.date.DateTime.fromIsoString = function(formatted) {\n  'use strict';\n  var ret = new goog.date.DateTime(2000);\n  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null;\n};\n","import {\n  readData,\n  writeData,\n} from 'google3/cultural/integrations/chromeextensions/shared/storage/storage';\nimport {Date as GoogDate} from 'google3/third_party/javascript/closure/date/date';\nimport {clone} from 'google3/third_party/javascript/closure/object/object';\n\n/** NewTab user settings IDs. */\nexport enum NewTabSetting {\n  TURNOVER_ALWAYS = 'turnoverAlways',\n  APPS_BUTTON_HIDDEN = 'appsButtonHidden',\n  DEFAULT_NEWTAB_BUTTON_HIDDEN = 'defaultNewTabButtonHidden',\n  TOP_SITES_BUTTON_HIDDEN = 'topSitesButtonHidden',\n}\n\n/** NewTab user settings object. */\nexport declare interface UserSettings {\n  [NewTabSetting.TURNOVER_ALWAYS]: boolean;\n  [NewTabSetting.APPS_BUTTON_HIDDEN]: boolean;\n  [NewTabSetting.DEFAULT_NEWTAB_BUTTON_HIDDEN]: boolean;\n  [NewTabSetting.TOP_SITES_BUTTON_HIDDEN]: boolean;\n}\n\nconst DEFAULT_USER_SETTINGS: UserSettings = {\n  [NewTabSetting.TURNOVER_ALWAYS]: false,\n  [NewTabSetting.APPS_BUTTON_HIDDEN]: false,\n  [NewTabSetting.DEFAULT_NEWTAB_BUTTON_HIDDEN]: false,\n  [NewTabSetting.TOP_SITES_BUTTON_HIDDEN]: false,\n};\n\n/** Inserts the default user settings values. */\nexport async function writeDefaultUserSettings(): Promise<void> {\n  Object.keys(DEFAULT_USER_SETTINGS).forEach(async (key) => {\n    await writeData(\n      key,\n      JSON.stringify(DEFAULT_USER_SETTINGS[key as NewTabSetting]),\n    );\n  });\n}\n\n/** Returns an object containing the user settings values. */\nexport async function getUserSettings(): Promise<UserSettings> {\n  const userSettings: UserSettings = clone(\n    DEFAULT_USER_SETTINGS,\n  ) as UserSettings;\n\n  for (const key of Object.keys(userSettings)) {\n    const storedValueStr = await readData(key as NewTabSetting);\n    if (storedValueStr) {\n      userSettings[key as NewTabSetting] = JSON.parse(\n        storedValueStr,\n      ) as boolean;\n    }\n  }\n\n  return userSettings;\n}\n\n/** Write a user setting to storage. */\nexport async function writeUserSetting(\n  key: NewTabSetting,\n  value: boolean,\n): Promise<void> {\n  await writeData(key as string, JSON.stringify(value));\n}\n\nconst localStorage = true;\n\nconst verbose = false;\nconst includeTz = false;\n\n/** Returns the current date in ISO format string. */\nexport function getDateStr(): string {\n  const now = new GoogDate();\n  return now.toIsoString(verbose, includeTz);\n}\n\n/** Converts a date string to a number. */\nexport function dateStrToNumber(dateStr: string): number {\n  let dateNum = Number(dateStr);\n  if (isNaN(dateNum)) {\n    dateNum = 0;\n  }\n  return Math.floor(dateNum);\n}\n\nenum CurrentAssetIndex {\n  KEY = 'currentAssetIndex',\n  DATE_KEY = 'indexWriteDate',\n}\n\n/** Save the current asset index to local storage. */\nexport async function writeCurrentAssetIndex(\n  indexToSave: number,\n): Promise<void> {\n  await writeData(CurrentAssetIndex.DATE_KEY, getDateStr(), localStorage);\n  await writeData(\n    CurrentAssetIndex.KEY,\n    JSON.stringify(indexToSave),\n    localStorage,\n  );\n}\n\n/** Returns the date the asset index was stored. */\nexport async function getIndexWriteDate(): Promise<number> {\n  const storedValueStr = await readData(\n    CurrentAssetIndex.DATE_KEY,\n    localStorage,\n  );\n  if (!storedValueStr) {\n    return dateStrToNumber(getDateStr());\n  }\n  const dateStr = JSON.parse(storedValueStr) as string;\n  return dateStrToNumber(dateStr);\n}\n\n/** Returns the current asset index from local storage. */\nexport async function getCurrentAssetIndex(): Promise<number> {\n  const storedValueStr = await readData(CurrentAssetIndex.KEY, localStorage);\n  if (!storedValueStr) {\n    return 0;\n  }\n  return JSON.parse(storedValueStr) as number;\n}\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities for manipulating objects/maps/hashes.\n */\ngoog.module('goog.object');\ngoog.module.declareLegacyNamespace();\n\n/**\n * Calls a function for each element in an object/map/hash.\n * @param {?Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,?Object<K,V>):?} f The function to call for every\n *     element. This function takes 3 arguments (the value, the key and the\n *     object) and the return value is ignored.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {void}\n * @template T,K,V\n */\nfunction forEach(obj, f, opt_obj) {\n  for (const key in obj) {\n    f.call(/** @type {?} */ (opt_obj), obj[key], key, obj);\n  }\n}\n\n/**\n * Calls a function for each element in an object/map/hash. If that call returns\n * true, adds the element to a new object.\n * @param {?Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,?Object<K,V>):boolean} f The function to call for\n *     every element. This function takes 3 arguments (the value, the key and\n *     the object) and should return a boolean. If the return value is true the\n *     element is added to the result object. If it is false the element is not\n *     included.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {!Object<K,V>} a new object in which only elements that passed the\n *     test are present.\n * @template T,K,V\n */\nfunction filter(obj, f, opt_obj) {\n  const res = {};\n  for (const key in obj) {\n    if (f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      res[key] = obj[key];\n    }\n  }\n  return res;\n}\n\n/**\n * For every element in an object/map/hash calls a function and inserts the\n * result into a new object.\n * @param {?Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,?Object<K,V>):R} f The function to call for every\n *     element. This function takes 3 arguments (the value, the key and the\n *     object) and should return something. The result will be inserted into a\n *     new object.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {!Object<K,R>} a new object with the results from f.\n * @template T,K,V,R\n */\nfunction map(obj, f, opt_obj) {\n  const res = {};\n  for (const key in obj) {\n    res[key] = f.call(/** @type {?} */ (opt_obj), obj[key], key, obj);\n  }\n  return res;\n}\n\n/**\n * Calls a function for each element in an object/map/hash. If any\n * call returns true, returns true (without checking the rest). If\n * all calls return false, returns false.\n * @param {?Object<K,V>} obj The object to check.\n * @param {function(this:T,V,?,?Object<K,V>):boolean} f The function to call for\n *     every element. This function takes 3 arguments (the value, the key and\n *     the object) and should return a boolean.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {boolean} true if any element passes the test.\n * @template T,K,V\n */\nfunction some(obj, f, opt_obj) {\n  for (const key in obj) {\n    if (f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Calls a function for each element in an object/map/hash. If\n * all calls return true, returns true. If any call returns false, returns\n * false at this point and does not continue to check the remaining elements.\n * @param {?Object<K,V>} obj The object to check.\n * @param {?function(this:T,V,?,?Object<K,V>):boolean} f The function to call\n *     for every element. This function takes 3 arguments (the value, the key\n *     and the object) and should return a boolean.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {boolean} false if any element fails the test.\n * @template T,K,V\n */\nfunction every(obj, f, opt_obj) {\n  for (const key in obj) {\n    if (!f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Returns the number of key-value pairs in the object map.\n * @param {?Object} obj The object for which to get the number of key-value\n *     pairs.\n * @return {number} The number of key-value pairs in the object map.\n */\nfunction getCount(obj) {\n  let rv = 0;\n  for (const key in obj) {\n    rv++;\n  }\n  return rv;\n}\n\n/**\n * Returns one key from the object map, if any exists.\n * For map literals the returned key will be the first one in most of the\n * browsers (a know exception is Konqueror).\n * @param {?Object} obj The object to pick a key from.\n * @return {string|undefined} The key or undefined if the object is empty.\n */\nfunction getAnyKey(obj) {\n  for (const key in obj) {\n    return key;\n  }\n}\n\n/**\n * Returns one value from the object map, if any exists.\n * For map literals the returned value will be the first one in most of the\n * browsers (a know exception is Konqueror).\n * @param {?Object<K,V>} obj The object to pick a value from.\n * @return {V|undefined} The value or undefined if the object is empty.\n * @template K,V\n */\nfunction getAnyValue(obj) {\n  for (const key in obj) {\n    return obj[key];\n  }\n}\n\n/**\n * Whether the object/hash/map contains the given object as a value.\n * An alias for containsValue(obj, val).\n * @param {?Object<K,V>} obj The object in which to look for val.\n * @param {V} val The object for which to check.\n * @return {boolean} true if val is present.\n * @template K,V\n */\nfunction contains(obj, val) {\n  return containsValue(obj, val);\n}\n\n/**\n * Returns the values of the object/map/hash.\n * @param {?Object<K,V>} obj The object from which to get the values.\n * @return {!Array<V>} The values in the object/map/hash.\n * @template K,V\n */\nfunction getValues(obj) {\n  const res = [];\n  let i = 0;\n  for (const key in obj) {\n    res[i++] = obj[key];\n  }\n  return res;\n}\n\n/**\n * Returns the keys of the object/map/hash.\n * @param {?Object} obj The object from which to get the keys.\n * @return {!Array<string>} Array of property keys.\n */\nfunction getKeys(obj) {\n  const res = [];\n  let i = 0;\n  for (const key in obj) {\n    res[i++] = key;\n  }\n  return res;\n}\n\n/**\n * Get a value from an object multiple levels deep.  This is useful for\n * pulling values from deeply nested objects, such as JSON responses.\n * Example usage: getValueByKeys(jsonObj, 'foo', 'entries', 3)\n * @param {?Object} obj An object to get the value from. Can be array-like.\n * @param {...(string|number|!IArrayLike<number|string>)} var_args A number of\n *     keys (as strings, or numbers, for array-like objects). Can also be\n *     specified as a single array of keys.\n * @return {*} The resulting value. If, at any point, the value for a key in the\n *     current object is null or undefined, returns undefined.\n */\nfunction getValueByKeys(obj, var_args) {\n  const isArrayLike = goog.isArrayLike(var_args);\n  const keys = isArrayLike ?\n      /** @type {!IArrayLike<number|string>} */ (var_args) :\n      arguments;\n\n  // Start with the 2nd parameter for the variable parameters syntax.\n  for (let i = isArrayLike ? 0 : 1; i < keys.length; i++) {\n    if (obj == null) return undefined;\n    obj = obj[keys[i]];\n  }\n\n  return obj;\n}\n\n/**\n * Whether the object/map/hash contains the given key.\n * @param {?Object} obj The object in which to look for key.\n * @param {?} key The key for which to check.\n * @return {boolean} true If the map contains the key.\n */\nfunction containsKey(obj, key) {\n  return obj !== null && key in obj;\n}\n\n/**\n * Whether the object/map/hash contains the given value. This is O(n).\n * @param {?Object<K,V>} obj The object in which to look for val.\n * @param {V} val The value for which to check.\n * @return {boolean} true If the map contains the value.\n * @template K,V\n */\nfunction containsValue(obj, val) {\n  for (const key in obj) {\n    if (obj[key] == val) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Searches an object for an element that satisfies the given condition and\n * returns its key.\n * @param {?Object<K,V>} obj The object to search in.\n * @param {function(this:T,V,string,?Object<K,V>):boolean} f The function to\n *     call for every element. Takes 3 arguments (the value, the key and the\n *     object) and should return a boolean.\n * @param {T=} thisObj An optional \"this\" context for the function.\n * @return {string|undefined} The key of an element for which the function\n *     returns true or undefined if no such element is found.\n * @template T,K,V\n */\nfunction findKey(obj, f, thisObj = undefined) {\n  for (const key in obj) {\n    if (f.call(/** @type {?} */ (thisObj), obj[key], key, obj)) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Searches an object for an element that satisfies the given condition and\n * returns its value.\n * @param {?Object<K,V>} obj The object to search in.\n * @param {function(this:T,V,string,?Object<K,V>):boolean} f The function to\n *     call for every element. Takes 3 arguments (the value, the key and the\n *     object) and should return a boolean.\n * @param {T=} thisObj An optional \"this\" context for the function.\n * @return {V} The value of an element for which the function returns true or\n *     undefined if no such element is found.\n * @template T,K,V\n */\nfunction findValue(obj, f, thisObj = undefined) {\n  const key = findKey(obj, f, thisObj);\n  return key && obj[key];\n}\n\n/**\n * Whether the object/map/hash is empty.\n * @param {?Object} obj The object to test.\n * @return {boolean} true if obj is empty.\n */\nfunction isEmpty(obj) {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Removes all key value pairs from the object/map/hash.\n * @param {?Object} obj The object to clear.\n * @return {void}\n */\nfunction clear(obj) {\n  for (const i in obj) {\n    delete obj[i];\n  }\n}\n\n/**\n * Removes a key-value pair based on the key.\n * @param {?Object} obj The object from which to remove the key.\n * @param {?} key The key to remove.\n * @return {boolean} Whether an element was removed.\n */\nfunction remove(obj, key) {\n  let rv;\n  if (rv = key in /** @type {!Object} */ (obj)) {\n    delete obj[key];\n  }\n  return rv;\n}\n\n/**\n * Adds a key-value pair to the object. Throws an exception if the key is\n * already in use. Use set if you want to change an existing pair.\n * @param {?Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} val The value to add.\n * @return {void}\n * @template K,V\n */\nfunction add(obj, key, val) {\n  if (obj !== null && key in obj) {\n    throw new Error(`The object already contains the key \"${key}\"`);\n  }\n  set(obj, key, val);\n}\n\n/**\n * Returns the value for the given key.\n * @param {?Object<K,V>} obj The object from which to get the value.\n * @param {string} key The key for which to get the value.\n * @param {R=} val The value to return if no item is found for the given key\n *     (default is undefined).\n * @return {V|R|undefined} The value for the given key.\n * @template K,V,R\n */\nfunction get(obj, key, val = undefined) {\n  if (obj !== null && key in obj) {\n    return obj[key];\n  }\n  return val;\n}\n\n/**\n * Adds a key-value pair to the object/map/hash.\n * @param {?Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} value The value to add.\n * @template K,V\n * @return {void}\n */\nfunction set(obj, key, value) {\n  obj[key] = value;\n}\n\n/**\n * Adds a key-value pair to the object/map/hash if it doesn't exist yet.\n * @param {?Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} value The value to add if the key wasn't present.\n * @return {V} The value of the entry at the end of the function.\n * @template K,V\n */\nfunction setIfUndefined(obj, key, value) {\n  return key in /** @type {!Object} */ (obj) ? obj[key] : (obj[key] = value);\n}\n\n/**\n * Sets a key and value to an object if the key is not set. The value will be\n * the return value of the given function. If the key already exists, the\n * object will not be changed and the function will not be called (the function\n * will be lazily evaluated -- only called if necessary).\n * This function is particularly useful when used with an `Object` which is\n * acting as a cache.\n * @param {?Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {function():V} f The value to add if the key wasn't present.\n * @return {V} The value of the entry at the end of the function.\n * @template K,V\n */\nfunction setWithReturnValueIfNotSet(obj, key, f) {\n  if (key in obj) {\n    return obj[key];\n  }\n\n  const val = f();\n  obj[key] = val;\n  return val;\n}\n\n/**\n * Compares two objects for equality using === on the values.\n * @param {!Object<K,V>} a\n * @param {!Object<K,V>} b\n * @return {boolean}\n * @template K,V\n */\nfunction equals(a, b) {\n  for (const k in a) {\n    if (!(k in b) || a[k] !== b[k]) {\n      return false;\n    }\n  }\n  for (const k in b) {\n    if (!(k in a)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Returns a shallow clone of the object.\n * @param {?Object<K,V>} obj Object to clone.\n * @return {!Object<K,V>} Clone of the input object.\n * @template K,V\n */\nfunction clone(obj) {\n  const res = {};\n  for (const key in obj) {\n    res[key] = obj[key];\n  }\n  return res;\n}\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n * WARNINGS:\n * <code>unsafeClone</code> does not detect reference loops. Objects\n * that refer to themselves will cause infinite recursion.\n * <code>unsafeClone</code> is unaware of unique identifiers, and\n * copies UIDs created by <code>getUid</code> into cloned results.\n * @param {T} obj The value to clone.\n * @return {T} A clone of the input value.\n * @template T\n */\nfunction unsafeClone(obj) {\n  if (!obj || typeof obj !== 'object') return obj;\n  if (typeof obj.clone === 'function') return obj.clone();\n  if (typeof Map !== 'undefined' && obj instanceof Map) {\n    return new Map(obj);\n  } else if (typeof Set !== 'undefined' && obj instanceof Set) {\n    return new Set(obj);\n  } else if (obj instanceof Date) {\n    return new Date(obj.getTime());\n  }\n  const clone = Array.isArray(obj) ? [] :\n      typeof ArrayBuffer === 'function' &&\n          typeof ArrayBuffer.isView === 'function' && ArrayBuffer.isView(obj) &&\n          !(obj instanceof DataView) ?\n                                     new obj.constructor(obj.length) :\n                                     {};\n  for (const key in obj) {\n    clone[key] = unsafeClone(obj[key]);\n  }\n  return clone;\n}\n\n/**\n * Returns a new object in which all the keys and values are interchanged\n * (keys become values and values become keys). If multiple keys map to the\n * same value, the chosen transposed value is implementation-dependent.\n * @param {?Object} obj The object to transpose.\n * @return {!Object} The transposed object.\n */\nfunction transpose(obj) {\n  const transposed = {};\n  for (const key in obj) {\n    transposed[obj[key]] = key;\n  }\n  return transposed;\n}\n\n/**\n * The names of the fields that are defined on Object.prototype.\n * @type {!Array<string>}\n */\nconst PROTOTYPE_FIELDS = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf',\n];\n\n/**\n * Extends an object with another object.\n * This operates 'in-place'; it does not create a new Object.\n * Example:\n * var o = {};\n * extend(o, {a: 0, b: 1});\n * o; // {a: 0, b: 1}\n * extend(o, {b: 2, c: 3});\n * o; // {a: 0, b: 2, c: 3}\n * @param {?Object} target The object to modify. Existing properties will be\n *     overwritten if they are also present in one of the objects in `var_args`.\n * @param {...(?Object|undefined)} var_args The objects from which values\n *     will be copied.\n * @return {void}\n * @deprecated Prefer Object.assign\n */\nfunction extend(target, var_args) {\n  let key;\n  let source;\n  for (let i = 1; i < arguments.length; i++) {\n    source = arguments[i];\n    for (key in source) {\n      target[key] = source[key];\n    }\n\n    // For IE the for-in-loop does not contain any properties that are not\n    // enumerable on the prototype object (for example isPrototypeOf from\n    // Object.prototype) and it will also not include 'replace' on objects that\n    // extend String and change 'replace' (not that it is common for anyone to\n    // extend anything except Object).\n\n    for (let j = 0; j < PROTOTYPE_FIELDS.length; j++) {\n      key = PROTOTYPE_FIELDS[j];\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n}\n\n/**\n * Creates a new object built from the key-value pairs provided as arguments.\n * @param {...*} var_args If only one argument is provided and it is an array\n *     then this is used as the arguments, otherwise even arguments are used as\n *     the property names and odd arguments are used as the property values.\n * @return {!Object} The new object.\n * @throws {!Error} If there are uneven number of arguments or there is only one\n *     non array argument.\n */\nfunction create(var_args) {\n  const argLength = arguments.length;\n  if (argLength == 1 && Array.isArray(arguments[0])) {\n    return create.apply(null, arguments[0]);\n  }\n\n  if (argLength % 2) {\n    throw new Error('Uneven number of arguments');\n  }\n\n  const rv = {};\n  for (let i = 0; i < argLength; i += 2) {\n    rv[arguments[i]] = arguments[i + 1];\n  }\n  return rv;\n}\n\n/**\n * Creates a new object where the property names come from the arguments but\n * the value is always set to true\n * @param {...*} var_args If only one argument is provided and it is an array\n *     then this is used as the arguments, otherwise the arguments are used as\n *     the property names.\n * @return {!Object} The new object.\n */\nfunction createSet(var_args) {\n  const argLength = arguments.length;\n  if (argLength == 1 && Array.isArray(arguments[0])) {\n    return createSet.apply(null, arguments[0]);\n  }\n\n  const rv = {};\n  for (let i = 0; i < argLength; i++) {\n    rv[arguments[i]] = true;\n  }\n  return rv;\n}\n\n/**\n * Creates an immutable view of the underlying object, if the browser\n * supports immutable objects.\n * In default mode, writes to this view will fail silently. In strict mode,\n * they will throw an error.\n * @param {!Object<K,V>} obj An object.\n * @return {!Object<K,V>} An immutable view of that object, or the original\n *     object if this browser does not support immutables.\n * @template K,V\n */\nfunction createImmutableView(obj) {\n  let result = obj;\n  if (Object.isFrozen && !Object.isFrozen(obj)) {\n    result = Object.create(obj);\n    Object.freeze(result);\n  }\n  return result;\n}\n\n/**\n * @param {!Object} obj An object.\n * @return {boolean} Whether this is an immutable view of the object.\n */\nfunction isImmutableView(obj) {\n  return !!Object.isFrozen && Object.isFrozen(obj);\n}\n\n/**\n * Get all properties names on a given Object regardless of enumerability.\n * <p> If the browser does not support `Object.getOwnPropertyNames` nor\n * `Object.getPrototypeOf` then this is equivalent to using\n * `getKeys`\n * @param {?Object} obj The object to get the properties of.\n * @param {boolean=} includeObjectPrototype Whether properties defined on\n *     `Object.prototype` should be included in the result.\n * @param {boolean=} includeFunctionPrototype Whether properties defined on\n *     `Function.prototype` should be included in the result.\n * @return {!Array<string>}\n * @public\n */\nfunction getAllPropertyNames(\n    obj, includeObjectPrototype = undefined,\n    includeFunctionPrototype = undefined) {\n  if (!obj) {\n    return [];\n  }\n\n  // Naively use a for..in loop to get the property names if the browser doesn't\n  // support any other APIs for getting it.\n  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {\n    return getKeys(obj);\n  }\n\n  const visitedSet = {};\n\n  // Traverse the prototype chain and add all properties to the visited set.\n  let proto = obj;\n  while (proto && (proto !== Object.prototype || !!includeObjectPrototype) &&\n         (proto !== Function.prototype || !!includeFunctionPrototype)) {\n    const names = Object.getOwnPropertyNames(proto);\n    for (let i = 0; i < names.length; i++) {\n      visitedSet[names[i]] = true;\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return getKeys(visitedSet);\n}\n\n/**\n * Given a ES5 or ES6 class reference, return its super class / super\n * constructor.\n * This should be used in rare cases where you need to walk up the inheritance\n * tree (this is generally a bad idea). But this work with ES5 and ES6 classes,\n * unlike relying on the superClass_ property.\n * Note: To start walking up the hierarchy from an instance call this with its\n * `constructor` property; e.g. `getSuperClass(instance.constructor)`.\n * @param {function(new: ?)} constructor\n * @return {?Object}\n */\nfunction getSuperClass(constructor) {\n  const proto = Object.getPrototypeOf(constructor.prototype);\n  return proto && proto.constructor;\n}\n\nexports = {\n  add,\n  clear,\n  clone,\n  contains,\n  containsKey,\n  containsValue,\n  create,\n  createImmutableView,\n  createSet,\n  equals,\n  every,\n  extend,\n  filter,\n  findKey,\n  findValue,\n  forEach,\n  get,\n  getAllPropertyNames,\n  getAnyKey,\n  getAnyValue,\n  getCount,\n  getKeys,\n  getSuperClass,\n  getValueByKeys,\n  getValues,\n  isEmpty,\n  isImmutableView,\n  map,\n  remove,\n  set,\n  setIfUndefined,\n  setWithReturnValueIfNotSet,\n  some,\n  transpose,\n  unsafeClone,\n};\n\n// MOE:begin_strip\n// Ensure ES2021 inputs. go/transpile-js\nnull?.(6_6);\n// MOE:end_strip\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * lit-html patch to support browsers without native web components.\n *\n * This module should be used in addition to loading the web components\n * polyfills via @webcomponents/webcomponentjs. When using those polyfills\n * support for polyfilled Shadow DOM is automatic via the ShadyDOM polyfill.\n * Scoping classes are added to DOM nodes to facilitate CSS scoping that\n * simulates the style scoping Shadow DOM provides. ShadyDOM does this scoping\n * to all elements added to the DOM. This module provides an important\n * optimization for this process by pre-scoping lit-html template\n * DOM. This means ShadyDOM does not have to scope each instance of the\n * template DOM. Instead, each template is scoped only once.\n *\n * Creating scoped CSS is not covered by this module. It is, however, integrated\n * into the lit-element and @lit/reactive-element packages. See the ShadyCSS docs\n * for how to apply scoping to CSS:\n * https://github.com/webcomponents/polyfills/tree/master/packages/shadycss#usage.\n *\n * (COPYBARA: packageDocumentation)\n */\n\nexport {};\n\ninterface RenderOptions {\n  readonly renderBefore?: ChildNode | null;\n  scope?: string;\n  readonly renderContainer?: Element;\n}\n\ninterface ShadyTemplateResult {\n  strings: TemplateStringsArray;\n  // This property needs to remain unminified.\n  ['_$litType$']?: string;\n}\n\n// Note, this is a dummy type as the full type here is big.\ninterface Directive {\n  __directive?: Directive;\n}\n\ninterface DirectiveParent {\n  _$parent?: DirectiveParent;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\ninterface PatchableChildPartConstructor {\n  // tslint:disable-next-line:no-any, @typescript-eslint/no-misused-new\n  new (...args: any[]): PatchableChildPart;\n}\n\ninterface PatchableChildPart {\n  __directive?: Directive;\n  _$committedValue: unknown;\n  _$startNode: ChildNode;\n  _$endNode: ChildNode | null;\n  options: RenderOptions;\n  _$setValue(value: unknown, directiveParent: DirectiveParent): void;\n  _$getTemplate(result: ShadyTemplateResult): HTMLTemplateElement;\n}\n\ninterface PatchableTemplate {\n  el: HTMLTemplateElement;\n}\n\ninterface PatchableTemplateConstructor {\n  // tslint:disable-next-line:no-any, @typescript-eslint/no-misused-new\n  new (...args: any[]): PatchableTemplate;\n  createElement(html: string, options?: RenderOptions): HTMLTemplateElement;\n}\n\ninterface PatchableTemplateInstance {\n  _$template: PatchableTemplate;\n}\n\n// Scopes that have had styling prepared. Note, must only be done once per\n// scope.\nconst styledScopes = new Set<string>();\n// Map of css per scope. This is collected during first scope render, used when\n// styling is prepared, and then discarded.\nconst scopeCssStore = new Map<string, string[]>();\n\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\n// Note, explicitly use `var` here so that this can be re-defined when\n// bundled.\n// eslint-disable-next-line no-var\nimport {DEV_MODE} from '@lit/reactive-element/dev-mode'; // COPYBARA: var\n\n/**\n * lit-html patches. These properties cannot be renamed.\n * * ChildPart.prototype._$getTemplate\n * * ChildPart.prototype._$setValue\n */\nconst polyfillSupport: NonNullable<typeof litHtmlPolyfillSupport> = (\n  Template: PatchableTemplateConstructor,\n  ChildPart: PatchableChildPartConstructor\n) => {\n  // polyfill-support is only needed if ShadyCSS or the ApplyShim is in use\n  // We test at the point of patching, which makes it safe to load\n  // webcomponentsjs and polyfill-support in either order\n  if (\n    window.ShadyCSS === undefined ||\n    (window.ShadyCSS.nativeShadow && !window.ShadyCSS.ApplyShim)\n  ) {\n    return;\n  }\n\n  // console.log(\n  //   '%c Making lit-html compatible with ShadyDOM/CSS.',\n  //   'color: lightgreen; font-style: italic'\n  // );\n\n  const wrap =\n    ENABLE_SHADYDOM_NOPATCH &&\n    window.ShadyDOM?.inUse &&\n    window.ShadyDOM?.noPatch === true\n      ? window.ShadyDOM!.wrap\n      : (node: Node) => node;\n\n  const needsPrepareStyles = (name: string | undefined) =>\n    name !== undefined && !styledScopes.has(name);\n\n  const cssForScope = (name: string) => {\n    let scopeCss = scopeCssStore.get(name);\n    if (scopeCss === undefined) {\n      scopeCssStore.set(name, (scopeCss = []));\n    }\n    return scopeCss;\n  };\n\n  const prepareStyles = (name: string, template: HTMLTemplateElement) => {\n    // Get styles\n    const scopeCss = cssForScope(name);\n    const hasScopeCss = scopeCss.length !== 0;\n    if (hasScopeCss) {\n      const style = document.createElement('style');\n      style.textContent = scopeCss.join('\\n');\n      // Note, it's important to add the style to the *end* of the template so\n      // it doesn't mess up part indices.\n      template.content.appendChild(style);\n    }\n    // Mark this scope as styled.\n    styledScopes.add(name);\n    // Remove stored data since it's no longer needed.\n    scopeCssStore.delete(name);\n    // ShadyCSS removes scopes and removes the style under ShadyDOM and leaves\n    // it under native Shadow DOM\n    window.ShadyCSS!.prepareTemplateStyles(template, name);\n    // Note, under native Shadow DOM, the style is added to the beginning of the\n    // template. It must be moved to the *end* of the template so it doesn't\n    // mess up part indices.\n    if (hasScopeCss && window.ShadyCSS!.nativeShadow) {\n      // If there were styles but the CSS text was empty, ShadyCSS will\n      // eliminate the style altogether, so the style here could be null\n      const style = template.content.querySelector('style');\n      if (style !== null) {\n        template.content.appendChild(style);\n      }\n    }\n  };\n\n  const scopedTemplateCache = new Map<\n    string | undefined,\n    Map<TemplateStringsArray, PatchableTemplate>\n  >();\n\n  /**\n   * Override to extract style elements from the template\n   * and store all style.textContent in the shady scope data.\n   * Note, it's ok to patch Template since it's only used via ChildPart.\n   */\n  const originalCreateElement = Template.createElement;\n  Template.createElement = function (html: string, options?: RenderOptions) {\n    const element = originalCreateElement.call(Template, html, options);\n    const scope = options?.scope;\n    if (scope !== undefined) {\n      if (!window.ShadyCSS!.nativeShadow) {\n        window.ShadyCSS!.prepareTemplateDom(element, scope);\n      }\n      // Process styles only if this scope is being prepared. Otherwise,\n      // leave styles as is for back compat with Lit1.\n      if (needsPrepareStyles(scope)) {\n        const scopeCss = cssForScope(scope);\n        // Remove styles and store textContent.\n        const styles = element.content.querySelectorAll(\n          'style'\n        ) as NodeListOf<HTMLStyleElement>;\n        // Store the css in this template in the scope css and remove the <style>\n        // from the template _before_ the node-walk captures part indices\n        scopeCss.push(\n          ...Array.from(styles).map((style) => {\n            style.parentNode?.removeChild(style);\n            return style.textContent!;\n          })\n        );\n      }\n    }\n    return element;\n  };\n\n  const renderContainer = document.createDocumentFragment();\n  const renderContainerMarker = document.createComment('');\n\n  const childPartProto = ChildPart.prototype;\n  /**\n   * Patch to apply gathered css via ShadyCSS. This is done only once per scope.\n   */\n  const setValue = childPartProto._$setValue;\n  childPartProto._$setValue = function (\n    this: PatchableChildPart,\n    value: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    const container = wrap(this._$startNode).parentNode!;\n    const scope = this.options?.scope;\n    if ((container instanceof ShadowRoot ||\n         // TODO(sorvell): Remove when Lit2 migration is complete in favor of\n         // cl/386884682.\n         container === this.options?.renderContainer) &&\n        needsPrepareStyles(scope)) {\n      // Note, @apply requires outer => inner scope rendering on initial\n      // scope renders to apply property values correctly. Style preparation\n      // is tied to rendering into `shadowRoot`'s and this is typically done by\n      // custom elements. If this is done in `connectedCallback`, as is typical,\n      // the code below ensures the right order since content is rendered\n      // into a fragment first so the hosting element can prepare styles first.\n      // If rendering is done in the constructor, this won't work, but that's\n      // not supported in ShadyDOM anyway.\n      const startNode = this._$startNode;\n      const endNode = this._$endNode;\n\n      // Temporarily move this part into the renderContainer.\n      renderContainer.appendChild(renderContainerMarker);\n      this._$startNode = renderContainerMarker;\n      this._$endNode = null;\n\n      // Note, any nested template results render here and their styles will\n      // be extracted and collected.\n      setValue.call(this, value, directiveParent);\n\n      // Get the template for this result or create a dummy one if a result\n      // is not being rendered.\n      // This property needs to remain unminified.\n      const template = (value as ShadyTemplateResult)?.['_$litType$']\n        ? (this._$committedValue as PatchableTemplateInstance)._$template.el\n        : document.createElement('template');\n      prepareStyles(scope!, template);\n\n      // Note, this is the temporary startNode.\n      renderContainer.removeChild(renderContainerMarker);\n      // When using native Shadow DOM, include prepared style in shadowRoot.\n      if (window.ShadyCSS?.nativeShadow) {\n        const style = template.content.querySelector('style');\n        if (style !== null) {\n          renderContainer.appendChild(style.cloneNode(true));\n        }\n      }\n      container.insertBefore(renderContainer, endNode);\n      // Move part back to original container.\n      this._$startNode = startNode;\n      this._$endNode = endNode;\n    } else {\n      setValue.call(this, value, directiveParent);\n    }\n  };\n\n  /**\n   * Patch ChildPart._$getTemplate to look up templates in a cache bucketed\n   * by element name.\n   */\n  childPartProto._$getTemplate = function (\n    this: PatchableChildPart,\n    result: ShadyTemplateResult\n  ) {\n    const scope = this.options?.scope;\n    let templateCache = scopedTemplateCache.get(scope);\n    if (templateCache === undefined) {\n      scopedTemplateCache.set(scope, (templateCache = new Map()));\n    }\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(\n        result.strings,\n        (template = new Template(result, this.options))\n      );\n    }\n    return template;\n  };\n};\n\nif (ENABLE_SHADYDOM_NOPATCH) {\n  polyfillSupport.noPatchSupported = ENABLE_SHADYDOM_NOPATCH;\n}\n\nif (DEV_MODE) {\n  (/* COPYBARA: globalThis */ window).litHtmlPolyfillSupportDevMode ??= polyfillSupport;\n} else if (goog.FEATURESET_YEAR < 2020) {  (/* COPYBARA: globalThis */ window).litHtmlPolyfillSupport ??= polyfillSupport;\n}\n\nlet symbolKey = '';\nif (goog.FEATURESET_YEAR < 2019 && window.Symbol as any) {\n  const s = Symbol();\n  if (typeof s !== 'symbol') {\n    // This key can sometimes be renamed so we just look at the first key and\n    // assume there's just one.\n    symbolKey = Object.keys(s)[0];\n  }\n}\n\nconst needsSymbolSupport = symbolKey !== '';\n\n/**\n * Checks if a value is specifically a closure polyfilled symbol. We expose\n * this directly since it's not possible to polyfill `typeof v === 'symbol'`.\n */\nexport const isPolyfilledSymbol = (() => {\n  if (needsSymbolSupport) {\n    return (value: unknown) => value != null &&\n        (\n                                   // tslint:disable-next-line:no-any\n                                   (value as any)[symbolKey] !== undefined);\n  } else {\n    return (value: unknown) => false;\n  }\n})();\n\n// tslint:disable-next-line:no-any\nif (needsSymbolSupport) {\n  // TODO(sorvell): Remove when/if b/187749613 is addressed.\n  if (!window.Symbol.for) {\n    const map = new Map<string, symbol>();\n    window.Symbol.for = (key) => {\n      if (!map.has(key)) {\n        map.set(key, Symbol(key));\n      }\n      return map.get(key)!;\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * ReactiveElement patch to support browsers without native web components.\n *\n * This module should be used in addition to loading the web components\n * polyfills via @webcomponents/webcomponentjs. When using those polyfills\n * support for polyfilled Shadow DOM is automatic via the ShadyDOM polyfill, but\n * support for Shadow DOM like css scoping is opt-in. This module uses ShadyCSS\n * to scope styles defined via the `static styles` property.\n *\n * (COPYBARA: packageDocumentation)\n */\n\nexport {};\n\ninterface RenderOptions {\n  readonly renderBefore?: ChildNode | null;\n  scope?: string;\n}\n\nconst SCOPED = '__scoped';\n\ntype CSSResults = Array<{cssText: string} | CSSStyleSheet>;\n\ninterface PatchableReactiveElementConstructor {\n  [SCOPED]: boolean;\n  elementStyles: CSSResults;\n  shadowRootOptions: ShadowRootInit;\n  _$handlesPrepareStyles?: boolean;\n}\n\ninterface PatchableReactiveElement extends HTMLElement {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-misused-new\n  new (...args: any[]): PatchableReactiveElement;\n  constructor: PatchableReactiveElementConstructor;\n  connectedCallback(): void;\n  hasUpdated: boolean;\n  _$didUpdate(changedProperties: unknown): void;\n  createRenderRoot(): Element | ShadowRoot;\n  renderOptions: RenderOptions;\n}\n\n// Note, explicitly use `var` here so that this can be re-defined when\n// bundled.\n// eslint-disable-next-line no-var\nimport {DEV_MODE} from '@lit/reactive-element/dev-mode'; // COPYBARA: var\n\nconst polyfillSupport = ({\n  ReactiveElement,\n}: {\n  ReactiveElement: PatchableReactiveElement;\n}) => {\n  // polyfill-support is only needed if ShadyCSS or the ApplyShim is in use\n  // We test at the point of patching, which makes it safe to load\n  // webcomponentsjs and polyfill-support in either order\n  if (\n    window.ShadyCSS === undefined ||\n    (window.ShadyCSS.nativeShadow && !window.ShadyCSS.ApplyShim)\n  ) {\n    return;\n  }\n\n  // console.log(\n  //   '%c Making ReactiveElement compatible with ShadyDOM/CSS.',\n  //   'color: lightgreen; font-style: italic'\n  // );\n\n  const elementProto = ReactiveElement.prototype;\n\n  // In noPatch mode, patch the ReactiveElement prototype so that no\n  // ReactiveElements must be wrapped.\n  if (\n    window.ShadyDOM &&\n    window.ShadyDOM.inUse &&\n    window.ShadyDOM.noPatch === true\n  ) {\n    window.ShadyDOM.patchElementProto(elementProto);\n  }\n\n  /**\n   * Patch to apply adoptedStyleSheets via ShadyCSS\n   */\n  const createRenderRoot = elementProto.createRenderRoot;\n  elementProto.createRenderRoot = function (this: PatchableReactiveElement) {\n    // Pass the scope to render options so that it gets to lit-html for proper\n    // scoping via ShadyCSS.\n    const name = this.localName;\n    // If using native Shadow DOM must adoptStyles normally,\n    // otherwise do nothing.\n    if (window.ShadyCSS!.nativeShadow) {\n      return createRenderRoot.call(this);\n    } else {\n      if (!this.constructor.hasOwnProperty(SCOPED)) {\n        (this.constructor as PatchableReactiveElementConstructor)[SCOPED] =\n          true;\n        // Use ShadyCSS's `prepareAdoptedCssText` to shim adoptedStyleSheets.\n        const css = (\n          this.constructor as PatchableReactiveElementConstructor\n        ).elementStyles.map((v) =>\n          v instanceof CSSStyleSheet\n            ? Array.from(v.cssRules).reduce(\n                (a: string, r: CSSRule) => (a += r.cssText),\n                ''\n              )\n            : v.cssText\n        );\n        window.ShadyCSS?.ScopingShim?.prepareAdoptedCssText(css, name);\n        if (this.constructor._$handlesPrepareStyles === undefined) {\n          window.ShadyCSS!.prepareTemplateStyles(\n            document.createElement('template'),\n            name\n          );\n        }\n      }\n      return (\n        this.shadowRoot ??\n        this.attachShadow(\n          (this.constructor as PatchableReactiveElementConstructor)\n            .shadowRootOptions\n        )\n      );\n    }\n  };\n\n  /**\n   * Patch connectedCallback to apply ShadyCSS custom properties shimming.\n   */\n  const connectedCallback = elementProto.connectedCallback;\n  elementProto.connectedCallback = function (this: PatchableReactiveElement) {\n    connectedCallback.call(this);\n    // Note, must do first update separately so that we're ensured\n    // that rendering has completed before calling this.\n    if (this.hasUpdated) {\n      window.ShadyCSS!.styleElement(this);\n    }\n  };\n\n  /**\n   * Patch update to apply ShadyCSS custom properties shimming for first\n   * update.\n   */\n  const didUpdate = elementProto._$didUpdate;\n  elementProto._$didUpdate = function (\n    this: PatchableReactiveElement,\n    changedProperties: unknown\n  ) {\n    // Note, must do first update here so rendering has completed before\n    // calling this and styles are correct by updated/firstUpdated.\n    if (!this.hasUpdated) {\n      window.ShadyCSS!.styleElement(this);\n    }\n    didUpdate.call(this, changedProperties);\n  };\n};\n\nif (DEV_MODE) {\n  (/* COPYBARA: globalThis */ window).reactiveElementPolyfillSupportDevMode ??= polyfillSupport;\n} else if (goog.FEATURESET_YEAR < 2020) {\n  (/* COPYBARA: globalThis */ window).reactiveElementPolyfillSupport ??= polyfillSupport;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * LitElement patch to support browsers without native web components.\n *\n * This module should be used in addition to loading the web components\n * polyfills via @webcomponents/webcomponentjs. When using those polyfills\n * support for polyfilled Shadow DOM is automatic via the ShadyDOM polyfill, but\n * support for Shadow DOM like css scoping is opt-in. This module uses ShadyCSS\n * to scope styles defined via the `static styles` property and styles included\n * in the render method. There are some limitations to be aware of:\n * * only styles that are included in the first render of a component are scoped.\n * * In addition, support for the deprecated `@apply` feature of ShadyCSS is\n * only provided for styles included in the template and not styles provided\n * via the static styles property.\n * * Lit parts cannot be used in styles included in the template.\n *\n * (COPYBARA: packageDocumentation)\n */\n\nimport '@lit/reactive-element/polyfill-support.js';\nimport 'lit-html/polyfill-support.js';\n\ninterface RenderOptions {\n  readonly renderBefore?: ChildNode | null;\n  scope?: string;\n}\n\ninterface PatchableLitElementConstructor {\n  _$handlesPrepareStyles?: boolean;\n}\n\ninterface PatchableLitElement extends HTMLElement {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-misused-new\n  new (...args: any[]): PatchableLitElement;\n  constructor: PatchableLitElementConstructor;\n  createRenderRoot(): Element | ShadowRoot;\n  renderOptions: RenderOptions;\n}\n\n// Note, explicitly use `var` here so that this can be re-defined when\n// bundled.\n// eslint-disable-next-line no-var\nimport {DEV_MODE} from '@lit/reactive-element/dev-mode'; // COPYBARA: var\n\nconst polyfillSupport = ({LitElement}: {LitElement: PatchableLitElement}) => {\n  // polyfill-support is only needed if ShadyCSS or the ApplyShim is in use\n  // We test at the point of patching, which makes it safe to load\n  // webcomponentsjs and polyfill-support in either order\n  if (\n    window.ShadyCSS === undefined ||\n    (window.ShadyCSS.nativeShadow && !window.ShadyCSS.ApplyShim)\n  ) {\n    return;\n  }\n\n  // console.log(\n  //   '%c Making LitElement compatible with ShadyDOM/CSS.',\n  //   'color: lightgreen; font-style: italic'\n  // );\n\n  (\n    LitElement as unknown as PatchableLitElementConstructor\n  )._$handlesPrepareStyles = true;\n\n  /**\n   * Patch to apply adoptedStyleSheets via ShadyCSS\n   */\n  const litElementProto = LitElement.prototype;\n  const createRenderRoot = litElementProto.createRenderRoot;\n  litElementProto.createRenderRoot = function (this: PatchableLitElement) {\n    // Pass the scope to render options so that it gets to lit-html for proper\n    // scoping via ShadyCSS. This is needed under Shady and also Shadow DOM,\n    // due to @apply.\n    this.renderOptions.scope = this.localName;\n    return createRenderRoot.call(this);\n  };\n};\n\nif (DEV_MODE) {\n  (/* COPYBARA: globalThis */ window).litElementPolyfillSupportDevMode ??= polyfillSupport;\n} else if (goog.FEATURESET_YEAR < 2020) {\n  (/* COPYBARA: globalThis */ window).litElementPolyfillSupport ??= polyfillSupport;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * This is internal-only because enabling sanitization by default would be a\n * breaking change, and we don't want to have a mandatory dep on safevalues.\n *\n * However we'd like to open source this as an optional way of using lit-html.\n */\n\nimport {EMPTY_HTML, isHtml, isResourceUrl, trustedResourceUrl, unwrapHtml, unwrapResourceUrl} from 'safevalues';\n\n/**\n * A system for validating the security properties of Lit attribute and property\n * bindings.\n *\n * Part of our trusted type support, while also providing many of the benefits\n * of enabling trusted types to Lit attribute and property bindings even in\n * browsers without trusted type support.\n */\nexport const sanitizerFactory =\n    goog.DEBUG ? debugSanitizerFactory : realSanitizerFactory;\n\nfunction realSanitizerFactory(\n    node: Node, rawName: string, type: 'property'|'attribute'): ValueSanitizer {\n  // We're only concerned with setting attributes or properties on elements.\n  if (node.nodeType !== 1 /* NodeType.ELEMENT */) {\n    return allowAnything;\n  }\n  const name = rawName.toLowerCase() as Lowercase<string>;\n  if (name === 'innerhtml' || name === 'innertext' || name === 'textcontent' ||\n      name === 'outerhtml') {\n    if (goog.DEBUG) {\n      if (name === 'innerhtml' || name === 'outerhtml') {\n        debugLog(\n            `When Lit is running in high security mode, it can't be used to set ${\n                rawName}. Use the SafeHTML directive instead.`);\n      } else {\n        debugLog(`When Lit is running in high security mode, it can't be used to set ${\n            rawName}. Instead you can bind a string directly as a child of the element.`);\n      }\n    }\n    return (unused: unknown) => fallbackHtml;\n  }\n  const contract =\n      securityContracts.get(`${(node as Element).tagName as TagName} ${name}`);\n  if (contract !== undefined) {\n    return contract;\n  }\n  /**\n   * We want to forbid built in onevent attributes, as the browser will\n   * eval the attribute value. Since every custom element extends HTMLElement,\n   * we only need to worry about those events that are on its prototype.\n   *\n   * Properties are fine, because they must be set to a function object, which\n   * we assume an attacker can't construct, as to do that they already\n   * have code execution ability in the page and so are inside the perimeter.\n   *\n   * Custom elements might also declare properties with the same names as\n   * these onevent attributes, like an onInput property. That's fine, as long\n   * as it's never set as an attribute.\n   */\n  if (/^on/.test(name) && type === 'attribute') {\n    const baseToCheck = !(node as Element).tagName.includes('-') ?\n        /**\n         * By default we look to see if there's a property on the node since\n         * that's consistently there for the dangerous onevent attributes.\n         *\n         * We want to look on the node because a small number of elements have\n         * non-bubbling events, so their onevent handlers are only on their\n         * specific class. See:\n         * https://lit.dev/playground/#gist=a53869560f84fd0f310681438ef1ad87 for\n         * a current list of these cases. If this wasn't the case we could just\n         * look on HTMLElement.prototype for all cases.\n         */\n        node :\n         /**\n          * However, for custom elements, we do want to check\n          * HTMLElement.prototype, because every custom element extends\n          * HTMLElement, but an individual custom element might have its own\n          * fields that start with \"on\" that are unrelated to the dangerous\n          * native onevent attributes.\n          *\n          * We can do a simple check for a hyphen in the tag name because none\n          * of the built in elements with nonbubbling events have a hyphen.\n          */\n         HTMLElement.prototype;\n    if (name in baseToCheck) {\n      return (value: unknown) => {\n        let message = 'invalid binding';\n        if (goog.DEBUG) {\n          message =\n              `The ${\n                  name} attribute looks like a string based event listener. ` +\n              `These are insecure, and not supported in Lit's high security ` +\n              `mode. Use an event binding instead, like this:\n@${name.slice(2)}=\\${(event) => {${value}}}`;\n        }\n        throw new Error(message);\n      };\n    }\n  }\n  // This binding has no known security constraints.\n  return allowAnything;\n}\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n */\ntype ValueSanitizer = (value: unknown) => unknown;\n\n/**\n * A pattern that blocks javascript: URLs. Matches\n * (a) Urls with no explicit scheme; or\n * (b) Urls with an explicit scheme that is not javascript and that only has\n *     alphanumeric or [.-+] characters.\n * This pattern is taken from the Soy URL sanitizer and is reviewed by the\n *   go/safehtml-team.\n */\nconst BLOCK_JAVASCRIPT_URL_PATTERN =\n    /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\\/?#]*(?:[\\/?#]|$))/i;\n\n/**\n * A safe and meaningless URL that we use instead of unsafe values.\n */\nconst fallbackTrustedUrl = {\n  valueOf() {\n    return unwrapResourceUrl(trustedResourceUrl`about:invalid#zClosurez`);\n  }\n}.valueOf();\n/**\n * A safe and meaningless empty HTML value that we use instead of unsafe values.\n */\nconst fallbackHtml = unwrapHtml(EMPTY_HTML);\n\n// Value sanitizers\n// One of these functions runs for every value that's bound into an attribute or\n// property in a lit-html template.\nconst allowAnything = (value: unknown) => value;\nconst onlyForbidJavascriptUrls = (url: unknown) => {\n  if (!BLOCK_JAVASCRIPT_URL_PATTERN.test(String(url))) {\n    if (goog.DEBUG) {\n      debugModeThrowValueSanitizerError({\n        message: `Blocked javascript: url. ` +\n            `These are not supported in Lit high security mode.`,\n        fallbackValue: fallbackTrustedUrl,\n        badValue: url,\n      });\n    }\n    return fallbackTrustedUrl;\n  }\n  return url;\n};\nconst forbidEverythingBecauseFieldIsUnsupported = (value: unknown) => {\n  if (goog.DEBUG) {\n    debugModeThrowValueSanitizerError({\n      message: `Unsupported field in Lit high security mode.`,\n      fallbackValue: fallbackTrustedUrl,\n      badValue: value\n    });\n  }\n  return fallbackTrustedUrl;\n};\nconst requireSafeHtml = (maybeSafeHtml: unknown) => {\n  if (!isHtml(maybeSafeHtml)) {\n    if (goog.DEBUG) {\n      debugModeThrowValueSanitizerError({\n        message: `This field requires SafeHtml.`,\n        fallbackValue: fallbackHtml,\n        badValue: maybeSafeHtml\n      });\n    }\n    return fallbackHtml;\n  }\n  return unwrapHtml(maybeSafeHtml);\n};\nconst requireTrustedResourceUrl = (maybeResourceUrl: unknown) => {\n  if (!isResourceUrl(maybeResourceUrl)) {\n    if (goog.DEBUG) {\n      debugModeThrowValueSanitizerError({\n        message: `This field requires TrustedResourceUrl.`,\n        fallbackValue: fallbackTrustedUrl,\n        badValue: maybeResourceUrl\n      });\n    }\n    return fallbackTrustedUrl;\n  }\n  return unwrapResourceUrl(maybeResourceUrl);\n};\n\ntype UpperLetter = 'A'|'B'|'C'|'D'|'E'|'F'|'G'|'H'|'I'|'J'|'K'|'L'|'M'|'N'|'O'|\n    'P'|'Q'|'R'|'S'|'T'|'U'|'V'|'W'|'X'|'Y'|'Z';\n// At least one letter, all upper case.\ntype TagName = `${UpperLetter}${Uppercase < string >}`;\n\n// We key security contracts by the uppercased tag name, followed by the type\n// of the binding, followed by the binding's name. The tag name and the type\n// can't include spaces, so we don't need to do any escaping.\ntype SecurityContractName = `${TagName} ${Lowercase < string >}`;\n\n// Up to date with go/controlled-web-apis as of August 3rd 2023.\nconst securityContracts = new Map<SecurityContractName, ValueSanitizer>([\n  // go/keep-sorted start\n  ['A href', onlyForbidJavascriptUrls],  //\n  ['AREA href', onlyForbidJavascriptUrls],\n  ['BASE href', forbidEverythingBecauseFieldIsUnsupported],\n  ['BUTTON formaction', onlyForbidJavascriptUrls],\n  ['EMBED src', forbidEverythingBecauseFieldIsUnsupported],\n  ['FORM action', onlyForbidJavascriptUrls],\n  ['FRAME src', forbidEverythingBecauseFieldIsUnsupported],\n  ['IFRAME src', requireTrustedResourceUrl],  //\n  ['IFRAME srcdoc', requireSafeHtml],\n  ['INPUT formaction', onlyForbidJavascriptUrls],\n  ['LINK href', requireTrustedResourceUrl],\n  ['OBJECT codebase', forbidEverythingBecauseFieldIsUnsupported],\n  ['OBJECT data', forbidEverythingBecauseFieldIsUnsupported],\n  // We don't know of an attack vector whereby the browser will execute a\n  // <script> element created with Lit, but since it's such a well known attack\n  // surface for arbitrary code execution, it seems better to err on the side\n  // of caution.\n  ['SCRIPT href', requireTrustedResourceUrl],  // for SVG scripts\n  ['SCRIPT src', requireTrustedResourceUrl],\n  ['SCRIPT text', forbidEverythingBecauseFieldIsUnsupported],\n  ['USE href', requireTrustedResourceUrl],\n  // go/keep-sorted end\n]);\n\n/**\n * This behaves the same as realSanitizerFactory, but when run in debug mode\n * it will debugLog with more information when a value is unsanitary.\n */\nfunction debugSanitizerFactory(\n    node: Node, name: string, type: 'property'|'attribute'): ValueSanitizer {\n  const result = realSanitizerFactory(node, name, type);\n  if (result === allowAnything) {\n    return result;\n  }\n  return (value: unknown) => {\n    try {\n      return result(value);\n    } catch (error: unknown) {\n      if (!isValueSanitizerErrorInfo(error)) {\n        throw error;\n      }\n      debugLog(\n          `Security error: \"${error.message}\" encountered when setting ${\n              type} named ${JSON.stringify(name)} on `,\n          node, ` to value: `, error.badValue);\n      return error.fallbackValue;\n    }\n  };\n}\n\n// Thrown by debugModeThrowValueSanitizerError so that debugSanitizerFactory\n// can log more info about an invalid value.\ninterface ValueSanitizerErrorInfo extends Error {\n  [brand]: true;\n  fallbackValue: unknown;\n  badValue: unknown;\n}\nconst brand = Symbol();\nfunction isValueSanitizerErrorInfo(error: unknown):\n    error is ValueSanitizerErrorInfo {\n  return (error as null | Partial<ValueSanitizerErrorInfo>)?.[brand] === true;\n}\n\nfunction debugModeThrowValueSanitizerError(\n    opts: {message: string, fallbackValue: unknown, badValue: unknown}) {\n  const error = new Error(opts.message) as ValueSanitizerErrorInfo;\n  error[brand] = true;\n  error.fallbackValue = opts.fallbackValue;\n  error.badValue = opts.badValue;\n  throw error;\n}\n\n/**\n * Like console.error, only it does nothing in prod, and it gets around\n * a GWS conformance check that's concerned about logging in prod:\n * go/gws-js-conformance#goog-console\n *\n * Using googLog.error is insufficient, as we want the ability to log a Node\n * and not just a string. This is useful in the browser debugger because you\n * can right click on it and see it in the elements panel, getting more context\n * on where the offending node is in your app.\n */\nfunction debugLog(...values: unknown[]) {\n  if (!goog.DEBUG) {\n    return;\n  }\n  const key = 'console';\n  const c = window[key];\n  c.error.apply(c, values);\n}\n","/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Internal implementations of TrustedResourceUrl.\n * DO NOT OPENSOURCE\n */\n\nimport {TrustedResourceUrl as ClosureTrustedResourceUrl} from 'google3/third_party/javascript/closure/html/trustedresourceurl';\nimport {createTrustedResourceUrl} from 'google3/third_party/javascript/closure/html/trustedresourceurl_internals_for_safevalues';\n\n/** Re-exports the Closure type to ensure both codebases are compatible. */\nexport type TrustedResourceUrl = ClosureTrustedResourceUrl;\n\n// tslint:disable:enforce-name-casing\n/**\n * Export the object separately to break the use of legacy static functions on\n * the re-export, but preserve instanceof checks.\n *\n * Please have a look at go/safehtml?polygot=ts to see what functions are\n * available in safevalues.\n */\nexport const TrustedResourceUrl = ClosureTrustedResourceUrl as unknown as {\n  new (_: never): TrustedResourceUrl;\n};\n\n/**\n * Builds a new `TrustedResourceUrl` from the given string, without\n * enforcing safety guarantees. It may cause side effects by creating a Trusted\n * Types policy. This shouldn't be exposed to application developers, and must\n * only be used as a step towards safe builders or safe constants.\n */\nexport function createResourceUrlInternal(url: string): TrustedResourceUrl {\n  return createTrustedResourceUrl(url);\n}\n\n/**\n * Checks if the given value is a `TrustedResourceUrl` instance.\n */\nexport function isResourceUrl(value: unknown): value is TrustedResourceUrl {\n  return value instanceof ClosureTrustedResourceUrl;\n}\n\n/**\n * Returns the value of the passed `TrustedResourceUrl` object while ensuring it\n * has the correct type.\n *\n * Returns a native `TrustedScriptURL` or a string if Trusted Types are\n * disabled.\n */\nexport function unwrapResourceUrl(\n  value: TrustedResourceUrl,\n): TrustedScriptURL | string {\n  return ClosureTrustedResourceUrl.unwrapTrustedScriptURL(value);\n}\n","/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {DEV_MODE} from '../environment/dev';\nimport {\n  createResourceUrlInternal,\n  TrustedResourceUrl,\n  unwrapResourceUrl,\n} from '../internals/resource_url_impl';\nimport {SafeScript, unwrapScript} from '../internals/script_impl';\nimport {assertIsTemplateObject} from '../internals/string_literal';\n\n/** Type that we know how to interpolate */\ntype Primitive = string | number | boolean;\n\n/**\n * Check whether the base url contains a valid origin,\n *\n * A string for an origin must contain only alphanumeric or any of the\n * following: `-.:`, and must not be an IP address. Remember that, as per the\n * documentation for TrustedResourceUrl, the origin must be trustworthy.\n *\n * @param base The base url that contains an origin.\n */\nfunction hasValidOrigin(base: string): boolean {\n  if (!(/^https:\\/\\//.test(base) || /^\\/\\//.test(base))) {\n    return false;\n  }\n\n  const originStart = base.indexOf('//') + 2;\n  const originEnd = base.indexOf('/', originStart);\n  // If the base url only contains the prefix (e.g. //), or the slash\n  // for the origin is right after the prefix (e.g. ///), the origin is\n  // missing.\n  if (originEnd <= originStart) {\n    throw new Error(\n      `Can't interpolate data in a url's origin, ` +\n        `Please make sure to fully specify the origin, terminated with '/'.`,\n    );\n  }\n\n  const origin = base.substring(originStart, originEnd);\n  if (!/^[0-9a-z.:-]+$/i.test(origin)) {\n    throw new Error('The origin contains unsupported characters.');\n  }\n  if (!/^[^:]*(:[0-9]+)?$/i.test(origin)) {\n    throw new Error('Invalid port number.');\n  }\n  if (!/(^|\\.)[a-z][^.]*$/i.test(origin)) {\n    throw new Error('The top-level domain must start with a letter.');\n  }\n  return true;\n}\n\n/**\n * Check whether the base url contains a valid about url at its beginning.\n *\n * An about url is either exactly 'about:blank' or 'about:blank#<str>' where\n * <str> can be an arbitrary string.\n *\n * @param base The base url.\n */\nfunction isValidAboutUrl(base: string): boolean {\n  if (!/^about:blank/.test(base)) {\n    return false;\n  }\n  if (base !== 'about:blank' && !/^about:blank#/.test(base)) {\n    throw new Error('The about url is invalid.');\n  }\n  return true;\n}\n\n/**\n * Check whether the base url contains a valid path start at its beginning.\n *\n * A valid path start is either a '/' or a '/' followed by at least one\n * character that is not '/' or '\\'.\n *\n * @param base The base url.\n */\nfunction isValidPathStart(base: string): boolean {\n  if (!/^\\//.test(base)) {\n    return false;\n  }\n  if (\n    base === '/' ||\n    (base.length > 1 && base[1] !== '/' && base[1] !== '\\\\')\n  ) {\n    return true;\n  }\n  throw new Error('The path start in the url is invalid.');\n}\n\n/**\n * Check whether the base url contains a valid relative path start at its\n * beginning.\n *\n * A valid relative path start is a non empty string that has no ':', '/' nor\n * '\\', and that is followed by a '/'.\n *\n * @param base The base url.\n */\nfunction isValidRelativePathStart(base: string): boolean {\n  // Using the RegExp syntax as the native JS RegExp syntax is not well handled\n  // by some downstream bundlers with this regex.\n  return new RegExp('^[^:\\\\s\\\\\\\\/]+/').test(base);\n}\n\n/**\n * Splits an url into segments using '?' and '#' delimiters.\n *\n * The URL can later be put back together by concatenating the returned segments\n * like: path + params + hash. Note that the delimiters '?' and '#' will\n * already be included in 'params' and 'hash' values respectively when these are\n * not empty.\n *\n * @param url The url to split.\n */\nfunction getUrlSegments(url: string): {\n  path: string;\n  params: string;\n  hash: string;\n} {\n  const segments = url.split(/\\?|#/);\n  const params = /\\?/.test(url) ? '?' + segments[1] : '';\n  const hash = /#/.test(url) ? '#' + (params ? segments[2] : segments[1]) : '';\n  return {path: segments[0], params, hash};\n}\n\n/**\n * Builds TrustedResourceUrl from a template literal.\n *\n * This factory is a template literal tag function. It should be called with\n * a template literal, with or without embedded expressions. For example,\n *               trustedResourceUrl`//example.com/${bar}`;\n * or\n *               trustedResourceUrl`//example.com`;\n *\n * When this function is called with a template literal without any embedded\n * expressions, the template string may contain anything as the whole URL is\n * a compile-time string constant.\n *\n * When this function is called with a template literal that contains embedded\n * expressions, the template must start with one of the following:\n * - `https://<origin>/`\n * - `//<origin>/`\n * - `/<pathStart>`\n * - `<relativePathStart>/`\n * - `about:blank`\n * - `data:`\n *\n * `<origin>` must contain only alphanumeric or any of the following: `-.:`.\n * Remember that, as per the documentation for TrustedResourceUrl, the origin\n * must be trustworthy. An origin of \"example.com\" could be set with this\n * method, but would tie the security of your site to the security of\n * example.com. Similarly, formats that potentially cover redirects hosted\n * on a trusted origin are problematic, since that could lead to untrusted\n * origins.\n *\n * `<pathStart>` is either an empty string, or a non empty string that does not\n * start with '/' or '\\'.\n * In other words, `/<pathStart>` is either a '/' or a\n * '/' followed by at least one character that is not '/' or '\\'.\n *\n * `<relativePathStart> is a non empty string that has no ':', '/' nor '\\'.\n *\n * `data:` (data URL) does not allow embedded expressions in the template\n * literal input.\n *\n * All embedded expressions are URL encoded when they are interpolated. Do not\n * embed expressions that are already URL encoded as they will be double encoded\n * by the builder.\n *\n * @param templateObj This contains the literal part of the template literal.\n * @param rest This represents the template's embedded expressions.\n */\nexport function trustedResourceUrl(\n  templateObj: TemplateStringsArray,\n  ...rest: Primitive[]\n): TrustedResourceUrl {\n  // Check if templateObj is actually from a template literal.\n  if (DEV_MODE) {\n    assertIsTemplateObject(templateObj, rest.length);\n  }\n\n  if (rest.length === 0) {\n    return createResourceUrlInternal(templateObj[0]);\n  }\n\n  const base = templateObj[0].toLowerCase();\n\n  if (DEV_MODE) {\n    if (/^data:/.test(base)) {\n      throw new Error(\n        'Data URLs cannot have expressions in the template literal input.',\n      );\n    }\n\n    if (\n      !hasValidOrigin(base) &&\n      !isValidPathStart(base) &&\n      !isValidRelativePathStart(base) &&\n      !isValidAboutUrl(base)\n    ) {\n      throw new Error(\n        'Trying to interpolate expressions in an unsupported url format.',\n      );\n    }\n  }\n\n  let url = templateObj[0];\n  for (let i = 0; i < rest.length; i++) {\n    url += encodeURIComponent(rest[i]) + templateObj[i + 1];\n  }\n  return createResourceUrlInternal(url);\n}\n\n/**\n * Creates a new TrustedResourceUrl with params added to the URL's search\n * parameters.\n *\n * @param params What to add to the URL. Parameters with value `null` or\n * `undefined` are skipped. Both keys and values will be encoded. Do not pass\n * pre-encoded values as this will result them being double encoded. If the\n * value is an array then the same parameter is added for every element in the\n * array.\n */\nexport function appendParams(\n  trustedUrl: TrustedResourceUrl,\n  // LINE-EXTERNAL params: Map<string, Primitive|null|Array<Primitive|null>>):\n  // BEGIN-INTERNAL\n  // Explicit type union for compatibility with the Closure compiler since it\n  // doesn't support covariance.\n  params:\n    | Map<string, Primitive | null | Array<Primitive | null>>\n    | Map<string, string>,\n): // END-INTERNAL\nTrustedResourceUrl {\n  const urlSegments = getUrlSegments(unwrapResourceUrl(trustedUrl).toString());\n\n  let urlParams = urlSegments.params;\n  let separator = urlParams.length ? '&' : '?';\n  // for-of has a big polyfill.\n  // tslint:disable-next-line:ban-iterable-foreach\n  params.forEach(\n    (value: Primitive | null | Array<Primitive | null>, key: string) => {\n      const values = value instanceof Array ? value : [value];\n      for (let i = 0; i < values.length; i++) {\n        const v = values[i];\n        if (v === null || v === undefined) {\n          continue;\n        }\n        urlParams +=\n          separator +\n          encodeURIComponent(key) +\n          '=' +\n          encodeURIComponent(String(v));\n        separator = '&';\n      }\n    },\n  );\n  return createResourceUrlInternal(\n    urlSegments.path + urlParams + urlSegments.hash,\n  );\n}\n\nconst BEFORE_FRAGMENT_REGEXP = /[^#]*/;\n\n/**\n * Creates a new TrustedResourceUrl based on an existing one but with the\n * addition of a fragment (the part after `#`). If the URL already has a\n * fragment, it is replaced with the new one.\n * @param fragment The fragment to add to the URL, verbatim, without the leading\n * `#`. No additional escaping is applied.\n */\nexport function replaceFragment(\n  trustedUrl: TrustedResourceUrl,\n  fragment: string,\n) {\n  const urlString = unwrapResourceUrl(trustedUrl).toString();\n  return createResourceUrlInternal(\n    BEFORE_FRAGMENT_REGEXP.exec(urlString)![0] + '#' + fragment,\n  );\n}\n\n/**\n * Creates a new TrustedResourceUrl based on an existing one with a single\n * subpath segment added to the end of the existing path and prior to any query\n * parameters and/or fragments that already exist in the URL.\n * @param pathSegment The singular sub path being added to the URL. Do not pass\n *     a pre-encoded value as this will result in it being double encoded.\n */\nexport function appendPathSegment(\n  trustedUrl: TrustedResourceUrl,\n  pathSegment: string,\n): TrustedResourceUrl {\n  const urlSegments = getUrlSegments(unwrapResourceUrl(trustedUrl).toString());\n\n  const separator = urlSegments.path.slice(-1) === '/' ? '' : '/';\n  const newPath =\n    urlSegments.path + separator + encodeURIComponent(pathSegment);\n\n  return createResourceUrlInternal(\n    newPath + urlSegments.params + urlSegments.hash,\n  );\n}\n\n/**\n * Creates a `TrustedResourceUrl` by generating a `Blob` from a\n * `SafeScript` and then calling `URL.createObjectURL` with that `Blob`.\n *\n * Caller must call `URL.revokeObjectURL()` on the stringified url to\n * release the underlying `Blob`.\n */\nexport function objectUrlFromScript(\n  safeScript: SafeScript,\n): TrustedResourceUrl {\n  const scriptContent = unwrapScript(safeScript).toString();\n  const blob = new Blob([scriptContent], {type: 'text/javascript'});\n  return createResourceUrlInternal(URL.createObjectURL(blob));\n}\n\n/**\n * A function to safely retrieve the base URI from the Window object and set it\n * at the beginning of a given path-relative (starts with \"/\") resource url.\n *\n * @param pathRelativeUrl The resource to which the origin shall be prepended.\n */\nexport function toAbsoluteResourceUrl(pathRelativeUrl: TrustedResourceUrl) {\n  const originalUrl = unwrapResourceUrl(pathRelativeUrl).toString();\n  const qualifiedUrl = new URL(originalUrl, window.document.baseURI);\n  return createResourceUrlInternal(qualifiedUrl.toString());\n}\n","/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Internal implementations of SafeHtml.\n * DO NOT OPENSOURCE\n */\n\nimport {SafeHtml as ClosureSafeHtml} from 'google3/third_party/javascript/closure/html/safehtml';\nimport {createSafeHtml} from 'google3/third_party/javascript/closure/html/safehtml_internals_for_safevalues';\n\n/** Re-exports the Closure type to ensure both codebases are compatible. */\nexport type SafeHtml = ClosureSafeHtml;\n\n// tslint:disable:enforce-name-casing\n/**\n * Export the object separately to break the use of legacy static functions on\n * the re-export, but preserve instanceof checks.\n *\n * Please have a look at go/safehtml?polygot=ts to see what functions are\n * available in safevalues.\n */\nexport const SafeHtml = ClosureSafeHtml as unknown as {\n  new (_: never): SafeHtml;\n};\n\n/**\n * Builds a new `SafeHtml` from the given string, without enforcing safety\n * guarantees. It may cause side effects by creating a Trusted Types policy.\n * This shouldn't be exposed to application developers, and must only be used as\n * a step towards safe builders or safe constants.\n */\nexport function createHtmlInternal(html: string): SafeHtml {\n  return createSafeHtml(html);\n}\n\n/**\n * An empty `SafeHtml` constant.\n * Unlike the function above, using this will not create a policy.\n */\nexport const EMPTY_HTML: SafeHtml = ClosureSafeHtml.EMPTY;\n\n/**\n * Checks if the given value is a `SafeHtml` instance.\n */\nexport function isHtml(value: unknown): value is SafeHtml {\n  return value instanceof ClosureSafeHtml;\n}\n\n/**\n * Returns the value of the passed `SafeHtml` object while ensuring it\n * has the correct type.\n *\n * Returns a native `TrustedHTML` or a string if Trusted Types are disabled.\n */\nexport function unwrapHtml(value: SafeHtml): TrustedHTML | string {\n  return ClosureSafeHtml.unwrapTrustedHTML(value);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {isPolyfilledSymbol} from './polyfill-support';\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nimport {sanitizerFactory as google3SanitizerFactory} from './internal-security.js';\nimport {disableSanitizationCapability} from './disable_sanitization_capability.js';\n\nimport {DEV_MODE} from '@lit/reactive-element/dev-mode'; // COPYBARA: const\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to (/* COPYBARA: globalThis */ window)\nconst global = goog.global;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  (global.ShadyDOM?.noPatch === true ||\n                        global.ShadyDOM?.noPatch === 'on-demand')\n    ? (global.ShadyDOM!.wrap as <T extends Node>(node: T) => T)\n    : <T extends Node>(node: T) => node;\n\nconst trustedTypes = (global as unknown as Window).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = {valueOf: () => trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined}.valueOf();\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst templateStringContentsToTemplates = new Map<string, Template>();\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive => value === null ||\n    (typeof value != 'object' && typeof value != 'function') ||\n    isPolyfilledSymbol(value);\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // tslint:disable-next-line:no-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /--\u003e/g;\n/**\n * Comments not started with \u003c!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg} when it hasn't been compiled by @lit-labs/compiler.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type UncompiledTemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\n/**\n * This is a template result that may be either uncompiled or compiled.\n *\n * In the future, TemplateResult will be this type. If you want to explicitly\n * note that a template result is potentially compiled, you can reference this\n * type and it will continue to behave the same through the next major version\n * of Lit. This can be useful for code that wants to prepare for the next\n * major version of Lit.\n */\nexport type MaybeCompiledTemplateResult<T extends ResultType = ResultType> =\n  | UncompiledTemplateResult<T>\n  | CompiledTemplateResult;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n * In Lit 4, this type will be an alias of\n * MaybeCompiledTemplateResult, so that code will get type errors if it assumes\n * that Lit templates are not compiled. When deliberately working with only\n * one, use either {@linkcode CompiledTemplateResult} or\n * {@linkcode UncompiledTemplateResult} explicitly.\n */\nexport type TemplateResult<T extends ResultType = ResultType> =\n  MaybeCompiledTemplateResult<T>;\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\n/**\n * A TemplateResult that has been compiled by @lit-labs/compiler, skipping the\n * prepare step.\n */\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  // The type is a TemplateStringsArray to guarantee that the value came from\n  // source code, preventing a JSON injection attack.\n  h: TemplateStringsArray;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    if (DEV_MODE) {\n      // Import static-html.js results in a circular dependency which g3 doesn't\n      // handle. Instead we know that static values must have the field\n      // `_$litStatic$`.\n      if (\n        values.some((val) => (val as {_$litStatic$: unknown})?.['_$litStatic$'])\n      ) {\n        issueWarning(\n          '',\n          `Static values 'literal' or 'unsafeStatic' cannot be used as values to non-static templates.\\n` +\n            `Please use the static 'html' tag function. See https://lit.dev/docs/templates/expressions/#static-expressions`\n        );\n      }\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]):\n    TemplateResult<typeof HTML_RESULT> => {\n      return {\n        // This property needs to remain unminified.\n        ['_$litType$']: HTML_RESULT,\n        strings,\n        values,\n      };\n    };\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]):\n    TemplateResult<typeof SVG_RESULT> => {\n      return {\n        // This property needs to remain unminified.\n        ['_$litType$']: SVG_RESULT,\n        strings,\n        values,\n      };\n    };\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange: unique symbol = {valueOf: () => Symbol.for ? Symbol.for('lit-noChange') : Symbol('lit-noChange')}.valueOf() as any;\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing: unique symbol = {valueOf: () => Symbol.for ? Symbol.for('lit-nothing') : Symbol('lit-nothing')}.valueOf() as any;\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = {valueOf: () =>d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */\n)}.valueOf();\n\nlet sanitizerFactoryInternal: SanitizerFactory = google3SanitizerFactory;\n\n/**\n * Disables resin.\n *\n * This will be removed soon, see the docs on\n * //third_party/javascript/lit_html:disable_sanitization_capability\n */\nexport const deprecatedUnsafeDisableSecurity = (capability: object) => {\n  // Use the disableSanitizationCapability to visibility-restrict the\n  // ability to disable sanitization, so that we can eventually remove\n  // that capability entirely.\n  if (capability !== disableSanitizationCapability) {\n    throw new Error(\n        `To disable sanitization of lit-html expressions you must pass ` +\n        `in the disableSanitizationCapability object.`);\n  }\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\nfunction trustFromTemplateString(\n  tsa: TemplateStringsArray,\n  stringFromTSA: string\n): TrustedHTML {\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  return policy !== undefined\n    ? policy.createHTML(stringFromTSA)\n    : (stringFromTSA as unknown as TrustedHTML);\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s + marker + (attrNameEndIndex === -2 ? i : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // Returned as an array for terseness\n  return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\n\n/** @internal */\nexport /* COPYBARA: type */ {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: UncompiledTemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Re-parent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const svgElement = this.el.content.firstChild!;\n      svgElement.replaceWith(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          for (const name of (node as Element).getAttributeNames()) {\n            if (name.endsWith(boundAttributeSuffix)) {\n              const realName = attrNames[attrNameIndex++];\n              const value = (node as Element).getAttribute(name)!;\n              const statics = value.split(marker);\n              const m = /([.?@])?(.*)/.exec(realName)!;\n              parts.push({\n                type: ATTRIBUTE_PART,\n                index: nodeIndex,\n                name: m[2],\n                strings: statics,\n                ctor:\n                  m[1] === '.'\n                    ? PropertyPart\n                    : m[1] === '?'\n                    ? BooleanAttributePart\n                    : m[1] === '@'\n                    ? EventPart\n                    : AttributePart,\n              });\n              (node as Element).removeAttribute(name);\n            } else if (name.startsWith(marker)) {\n              parts.push({\n                type: ELEMENT_PART,\n                index: nodeIndex,\n              });\n              (node as Element).removeAttribute(name);\n            }\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'template prep',\n        template: this,\n        clonableTemplate: this.el,\n        parts: this.parts,\n        strings,\n      });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\nexport /* COPYBARA: type */ {TemplateInstance};\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  _$template: Template;\n  _$parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'set part',\n            part,\n            value: values[i],\n            valueIndex: i,\n            values,\n            templateInstance: this,\n          });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  readonly ctor: typeof AttributePart;\n  readonly strings: ReadonlyArray<string>;\n};\ntype ChildTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | ChildTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport /* COPYBARA: type */ {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent &&\n            debugLogEvent({\n              kind: 'commit nothing to child',\n              start: this._$startNode,\n              end: this._$endNode,\n              parent: this._$parent,\n              options: this.options,\n            });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(\n      node,\n      this._$endNode\n    );\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit node',\n          start: this._$startNode,\n          parent: this._$parent,\n          value: value,\n          options: this.options,\n        });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit text',\n          node,\n          value,\n          options: this.options,\n        });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: textNode,\n            value,\n            options: this.options,\n          });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: wrap(this._$startNode).nextSibling as Text,\n            value,\n            options: this.options,\n          });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as UncompiledTemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(\n              trustFromTemplateString(type.h, type.h[0]),\n              this.options\n            )),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template updating',\n          template,\n          instance: this._$committedValue as TemplateInstance,\n          parts: (this._$committedValue as TemplateInstance)._$parts,\n          options: this.options,\n          values,\n        });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      instance._update(values);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated and updated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: UncompiledTemplateResult) {\n    const strings = result.strings;\n    let template = templateCache.get(strings);\n    if (template === undefined) {\n      if (goog.DEBUG) {\n        const key = strings.join('\\0');\n        template = templateStringContentsToTemplates.get(key);\n        if (template === undefined) {\n          template = new Template(result);\n          templateStringContentsToTemplates.set(key, template);\n        }\n        templateCache.set(strings, template);\n      } else {\n        templateCache.set(result.strings, (template = new Template(result)));\n      }\n    }\n\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was previously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport /* COPYBARA: type */ {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit attribute',\n          element: this.element,\n          name: this.name,\n          value,\n          options: this.options,\n        });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport /* COPYBARA: type */ {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit property',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n    // tslint:disable-next-line:no-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\nexport /* COPYBARA: type */ {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit boolean attribute',\n        element: this.element,\n        name: this.name,\n        value: !!(value && value !== nothing),\n        options: this.options,\n      });\n    (wrap(this.element) as Element).toggleAttribute(\n      this.name,\n      !!value && value !== nothing\n    );\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport /* COPYBARA: type */ {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit event listener',\n        element: this.element,\n        name: this.name,\n        value: newListener,\n        options: this.options,\n        removeListener: shouldRemoveListener,\n        addListener: shouldAddListener,\n        oldListener,\n      });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport /* COPYBARA: type */ {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit to element binding',\n        element: this.element,\n        value,\n        options: this.options,\n      });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\nif (goog.FEATURESET_YEAR < 2020) {\n  // Apply polyfills if available\n  const polyfillSupport = DEV_MODE ? window.litHtmlPolyfillSupportDevMode :\n                                     window.litHtmlPolyfillSupport;\n  polyfillSupport?.(Template, ChildPart);\n}\n\nconst markVersions = () => {\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('3.1.0');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n};\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container: container as HTMLElement|DocumentFragment, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = {valueOf() {\nmarkVersions();\nconst render = (\n  value: unknown,\n  container: Element | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // tslint:disable-next-line:no-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'begin render',\n      id: renderId,\n      value,\n      container: container as HTMLElement|DocumentFragment,\n      options,\n      part,\n    });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // tslint:disable-next-line:no-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'end render',\n      id: renderId,\n      value,\n      container: container as HTMLElement|DocumentFragment,\n      options,\n      part,\n    });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\nreturn render;\n}}.valueOf();\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to (/* COPYBARA: globalThis */ window)\nconst global = goog.global;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets: boolean =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  private debugOnlyCachedStyleSheet: CSSStyleSheet|undefined = undefined;\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    if (goog.DEBUG) {\n      // In prod mode, a CSSResult is immutable, and we never change a\n      // CSSStyleSheet's text\n      // In debug mode though, a hot module reload might update our cssText\n      // so we don't want to share a CSSStyleSheet across different CSSResults\n      if (supportsAdoptingStyleSheets &&\n          this.debugOnlyCachedStyleSheet === undefined) {\n        this.debugOnlyCachedStyleSheet = new CSSStyleSheet();\n        this.debugOnlyCachedStyleSheet.replaceSync(this.cssText);\n      }\n      return this.debugOnlyCachedStyleSheet;\n    }\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n\n  /**\n   * Used in the generated output of lit_css_module to implement\n   * hot module reloading for css modules.\n   *\n   * Does nothing in production, and doesn't replace existing references\n   * unless the current browser supports adopting stylesheets (at time of\n   * writing that Chrome only).\n   */\n  notifyOnHotReplace(newVal: CSSResult) {\n    if (goog.DEBUG) {\n      const sheet = this.styleSheet;\n      // Only works with constructable stylesheets\n      if (!sheet) {\n        return;\n      }\n      (this as any).cssText = newVal.cssText;\n      sheet.replaceSync(newVal.cssText);\n    }\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nconst unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  return {valueOf() {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  )}}.valueOf();\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    for (const s of styles) {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    }\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n","/**\n * @license\n * Copyright 2016 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Patches the built-in HTMLElement constructor to work around a compiler bug.\n *\n * For more info, see http://go/es5-custom-elements\n */\n\ngoog.module('webcomponentsjs.custom_elements.es5_shim_implementation');\nconst detectTranspilation = goog.require('google3.javascript.polymer.detect_transpilation.detect_transpilation');\n\n/**\n * If you use the fast shim, you can save a few bytes by setting this to true.\n *\n * Very few users use the fast shim (or should). If you're looking for faster\n * instantiation, we'd instead recommend serving ES2015+.\n *\n * @define {boolean}\n */\nconst DISABLE_AUTO_CE_ES5_SHIM = goog.define('DISABLE_AUTO_CE_ES5_SHIM', false);\n\n/** @type {boolean} */\nconst shimNotNeeded = DISABLE_AUTO_CE_ES5_SHIM ||\n    !detectTranspilation.wasTranspiledToEs5 ||\n    // An es5 shim is already loaded, don't load again.\n    HTMLElement['es5Shimmed'] ||\n    // No Reflect, no classes, no need for shim because native custom\n    // elements require ES2015 classes or Reflect.\n    goog.global.Reflect === undefined ||\n    goog.global.customElements === undefined ||\n    // The webcomponentsjs custom elements polyfill doesn't require\n    // ES2015-compatible construction (`super()` or `Reflect.construct`).\n    goog.global.customElements['polyfillWrapFlushCallback'] || false;\n\nlet useGlobalsForDev = false;\nexports.devOnlyForceGlobals = () => {\n  if (!goog.DEBUG) {\n    throw new Error('devOnlyForceGlobals can only be called in DEBUG builds');\n  }\n  if (useGlobalsForDev === true) {\n    return;\n  }\n  useGlobalsForDev = true;\n  exports.applyShim();\n};\n\n/**\n * @type {?}\n */\nlet patchedHTMLElement;\n\n/**\n * A ponyfill. You can reference this instead of the global HTMLElement in order\n * to get the shim's behavior without patching the global HTMLElement.\n */\nexports.getHTMLElement = () => {\n  const BuiltInHTMLElement = HTMLElement;\n  if (shimNotNeeded) {\n    return BuiltInHTMLElement;\n  }\n  if (useGlobalsForDev) {\n    // Might be patched, e.g. for go/hot-elements\n    return HTMLElement;\n  }\n\n  if (patchedHTMLElement !== undefined) {\n    return patchedHTMLElement;\n  }\n\n  // So that we can access the page's Reflect, rather than any polyfilled\n  // reflect. We know that the page has a Reflect implementation, because\n  // otherwise shimNotNeeded would be true and we wouldn't have reached\n  // this point.\n  // This is needed for compat with --isolate_polyfills.\n  // TODO(b/276312149): just reference Reflect directly.\n  const reflect = goog.global.Reflect;\n  /**\n   * With jscompiler's RECOMMENDED_FLAGS the function name will be optimized\n   * away. However, if we declare the function as a property on an object\n   * literal, and use quotes for the property name, then closure will leave that\n   * much intact, which is enough for the JS VM to correctly set\n   * Function.prototype.name.\n   */\n  const wrapperForTheName = {\n    'HTMLElement': /** @this {!Object} */ function HTMLElement() {\n      if (goog.DEBUG) {\n        try {\n          return reflect.construct(\n              BuiltInHTMLElement, [],\n              /** @type {!Function} */ (this.constructor));\n        } catch (e) {\n          if (/Illegal constructor/i.test(e.message)) {\n            const className = this.constructor.name || 'the class';\n            e.message += ` - Did you register ${\n                className} in the custom elements registry?`;\n          }\n          throw e;\n        }\n      }\n      return reflect.construct(\n          BuiltInHTMLElement, [], /** @type {!Function} */ (this.constructor));\n    }\n  };\n  const shim = wrapperForTheName['HTMLElement'];\n  shim.prototype = BuiltInHTMLElement.prototype;\n  shim.prototype.constructor = shim;\n  shim.es5Shimmed = true;\n  Object.setPrototypeOf(shim, BuiltInHTMLElement);\n  patchedHTMLElement = shim;\n  return patchedHTMLElement;\n};\n\n\nlet applied = false;\n\n/**\n * Applies the shim globally if needed, overwriting the global HTMLElement.\n */\nexports.applyShim = () => {\n  if (!useGlobalsForDev && shimNotNeeded) {\n    return;\n  }\n  if (applied) {\n    return;\n  }\n  applied = true;\n  goog.global['HTMLElement'] = exports.getHTMLElement();\n};\n","// goog.FEATURESET_YEAR is a common way to opt into compiling for modern\n// browsers. We assume here that if you target FEATURESET_YEAR >= 2019 then\n// you're also going to be transpiling to ES2015 or greater.\nconst isModernFeaturesetYear = goog.FEATURESET_YEAR >= 2019;\n\n// A runtime check that looks for ES2015 classes.\n//\n// Will be true if and only if basic class syntax is not transpiled to ES5.\n// Unlike isModernFeaturesetYear this can't be evaluated at compile time.\nconst servingRawClasses = /^\\s*class\\s*\\{\\s*\\}\\s*$/.test(class {}.toString());\n\n/**\n * This constant should be true if and only if some code in the current\n * runtime environment has been transpiled to ES5.\n *\n * This file is written in TypeScript because ts_development_sources will\n * (in some configurations) transpile TypeScript but not JavaScript.\n * I'm not aware of any cases of the reverse.\n *\n * When compiled with a --browser_featureset_year of 2019 or greater (the first\n * featureset_year above 2012), this will be a compile-time constant, suitable\n * for dead code elimination.\n */\nexport const wasTranspiledToEs5 =\n  isModernFeaturesetYear === true ? false : !servingRawClasses;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport './polyfill-support';\nimport {noAwait} from 'google3/javascript/typescript/contrib/async';\nimport {objectProperty} from 'google3/third_party/javascript/closure/reflect/reflect';\n\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * (COPYBARA: packageDocumentation)\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n// So that custom elements work after compilation to es5.\nimport {getHTMLElement, applyShim} from 'google3/third_party/javascript/custom_elements/src/native-shim-impl';\nif (goog.TRUSTED_SITE) {\n  applyShim();\n}\nconst HTMLElement = getHTMLElement() as unknown as typeof globalThis.HTMLElement;\ntype HTMLElement = globalThis.HTMLElement;\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\nexport * from './css-tag.js';\nexport /* COPYBARA: type */ {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n/**\n * Removes the `readonly` modifier from properties in the union K.\n *\n * This is a safer way to cast a value to a type with a mutable version of a\n * readonly field, than casting to an interface with the field re-declared\n * because it preserves the type of all the fields and warns on typos.\n */\ntype Mutable<T, K extends keyof T> = Omit<T, K> & {\n  -readonly [P in keyof Pick<T, K>]: P extends K ? T[P] : never;\n};\n\n// TODO (justinfagnani): Add `hasOwn` here when we ship ES2022\nconst {\n  is,\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getOwnPropertyNames,\n  getOwnPropertySymbols,\n  getPrototypeOf,\n} = Object;\n\nconst NODE_MODE = false;\n\n// Lets a minifier replace (/* COPYBARA: globalThis */ window) references with a minified name\nconst global = goog.global;\n\nif (NODE_MODE) {\n  global.customElements ??= customElements;\n}\n\nimport {DEV_MODE} from '@lit/reactive-element/dev-mode'; // COPYBARA: const\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (global as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? global.reactiveElementPolyfillSupportDevMode\n  : global.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> = (global.litIssuedWarnings ??=\n    new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n// COPYBARA: JSCompiler_renameProperty\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n\n  /**\n   * Whether this property is wrapping accessors. This is set by `@property`\n   * to control the initial value change and reflection logic.\n   *\n   * @internal\n   */\n  wrapped?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K] | undefined;\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean =>\n  !is(value, old);\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind =\n  | 'change-in-update'\n  | 'migration'\n  | 'async-perform-update';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n// Temporary, until google3 is on TypeScript 5.2\ndeclare global {\n  interface SymbolConstructor {\n    readonly metadata: unique symbol;\n  }\n}\n\n// Ensure metadata is enabled. TypeScript does not polyfill\n// symbolMetadata, so we must ensure that it exists.\nconst symbolMetadata: unique symbol =\n    ({\n      valueOf() {\n        if (Symbol.metadata == null) {\n          (Symbol as {metadata: symbol}).metadata = Symbol('metadata');\n        }\n        return Symbol.metadata;\n      }\n    }).valueOf() as any;\n\nexport const litPropertyMetadata =\n    new WeakMap<object, Map<PropertyKey, PropertyDeclaration>>();\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclasses to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  // In the Node build, this `extends` clause will be substituted with\n  // `((/* COPYBARA: globalThis */ window).HTMLElement ?? HTMLElement)`.\n  //\n  // This way, we will first prefer any global `HTMLElement` polyfill that the\n  // user has assigned, and then fall back to the `HTMLElement` shim which has\n  // been imported (see note at the top of this file about how this import is\n  // generated by Rollup). Note that the `HTMLElement` variable has been\n  // shadowed by this import, so it no longer refers to the global.\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this.__prepare();\n    (this._initializers ??= []).push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having been finalized, which includes creating properties\n   * from `static properties`, but does *not* include all properties created\n   * from decorators.\n   * @nocollapse\n   */\n  protected static finalized: true | undefined;\n\n  /**\n   * Memoized list of all element properties, including any superclass\n   * properties. Created lazily on user subclasses when finalizing the class.\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * `nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated `<style>` elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * \u003c/script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // Ensure we've created all properties\n    this.finalize();\n    // this.__attributeToPropertyMap is only undefined after finalize() in\n    // ReactiveElement itself. ReactiveElement.observedAttributes is only\n    // accessed with ReactiveElement as the receiver when a subclass or mixin\n    // calls super.observedAttributes\n    return (\n      this.__attributeToPropertyMap && [...this.__attributeToPropertyMap.keys()]\n    );\n  }\n\n  private __instanceProperties?: PropertyValues = undefined;\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // If this is a state property, force the attribute to false.\n    if (options.state) {\n      (options as Mutable<PropertyDeclaration, 'attribute'>).attribute = false;\n    }\n    this.__prepare();\n    this.elementProperties.set(name, options);\n    if (!options.noAccessor) {\n      const key = DEV_MODE\n        ? // Use Symbol.for in dev mode to make it easier to maintain state\n          // when doing HMR.\n          `${String(name)} (@property() cache)`\n        : Symbol();\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        defineProperty(this.prototype, name, descriptor);\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    const {get, set} = getOwnPropertyDescriptor(this.prototype, name) ?? {\n      get(this: ReactiveElement) {\n        return this[key as keyof typeof this];\n      },\n      set(this: ReactiveElement, v: unknown) {\n        (this as unknown as Record<string | symbol, unknown>)[key] = v;\n      },\n    };\n    if (DEV_MODE && get == null) {\n      if ('value' in (getOwnPropertyDescriptor(this.prototype, name) ?? {})) {\n        throw new Error(\n          `Field ${JSON.stringify(String(name))} on ` +\n            `${this.name} was declared as a reactive property ` +\n            `but it's actually declared as a value on the prototype. ` +\n            `Usually this is due to using @property or @state on a method.`\n        );\n      }\n      issueWarning(\n        'reactive-property-without-getter',\n        `Field ${JSON.stringify(String(name))} on ` +\n          `${this.name} was declared as a reactive property ` +\n          `but it does not have a getter. This will be an error in a ` +\n          `future version of Lit.`\n      );\n    }\n    return {\n      get(this: ReactiveElement) {\n        return get?.call(this);\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = get?.call(this);\n        set!.call(this, value);\n        this.requestUpdate(name, oldValue, options);\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) ?? defaultPropertyDeclaration;\n  }\n\n  // Temporary, until google3 is on TypeScript 5.2\n  declare static [symbolMetadata]: object & Record<PropertyKey, unknown>;\n\n  /**\n   * Initializes static own properties of the class used in bookkeeping\n   * for element properties, initializers, etc.\n   *\n   * Can be called multiple times by code that needs to ensure these\n   * properties exist before using them.\n   *\n   * This method ensures the superclass is finalized so that inherited\n   * property metadata can be copied down.\n   * @nocollapse\n   */\n  private static __prepare() {\n    if (\n      this.hasOwnProperty(objectProperty('elementProperties', this))\n    ) {\n      // Already prepared\n      return;\n    }\n    // Finalize any superclasses\n    const superCtor = getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n\n    // Create own set of initializers for this class if any exist on the\n    // superclass and copy them down. Note, for a small perf boost, avoid\n    // creating initializers unless needed.\n    if (superCtor._initializers !== undefined) {\n      this._initializers = [...superCtor._initializers];\n    }\n    // Initialize elementProperties from the superclass\n    this.elementProperties = new Map(superCtor.elementProperties);\n  }\n\n  /**\n   * Finishes setting up the class so that it's ready to be registered\n   * as a custom element and instantiated.\n   *\n   * This method is called by the ReactiveElement.observedAttributes getter.\n   * If you override the observedAttributes getter, you must either call\n   * super.observedAttributes to trigger finalization, or call finalize()\n   * yourself.\n   *\n   * @nocollapse\n   */\n  protected static finalize() {\n    oneTimeWork();\n    if (this.hasOwnProperty(objectProperty('finalized', this))) {\n      return;\n    }\n    this.finalized = true;\n    this.__prepare();\n\n    // Create properties from the static properties block:\n    if (this.hasOwnProperty(objectProperty('properties', this))) {\n      const props = this.properties;\n      const propKeys = [\n        ...getOwnPropertyNames(props),\n        ...getOwnPropertySymbols(props),\n      ] as Array<keyof typeof props>;\n      for (const p of propKeys) {\n        this.createProperty(p, props[p]);\n      }\n    }\n\n    // Create properties from standard decorator metadata:\n    const metadata = this[symbolMetadata];\n    if (metadata !== null) {\n      const properties = litPropertyMetadata.get(metadata);\n      if (properties !== undefined) {\n        for (const [p, options] of properties) {\n          this.elementProperties.set(p, options);\n        }\n      }\n    }\n\n    // Create the attribute-to-property map\n    this.__attributeToPropertyMap = new Map();\n    for (const [p, options] of this.elementProperties) {\n      const attr = this.__attributeNameForProperty(p, options);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n      }\n    }\n\n    this.elementStyles = this.finalizeStyles(this.styles);\n\n    if (DEV_MODE) {\n      if (this.hasOwnProperty('createProperty')) {\n        issueWarning(\n          'no-override-create-property',\n          'Overriding ReactiveElement.createProperty() is deprecated. ' +\n            'The override will not be called with standard decorators'\n        );\n      }\n      if (this.hasOwnProperty('getPropertyDescriptor')) {\n        issueWarning(\n          'no-override-get-property-descriptor',\n          'Overriding ReactiveElement.getPropertyDescriptor() is deprecated. ' +\n            'The override will not be called with standard decorators'\n        );\n      }\n    }\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | DocumentFragment;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Set<PropertyKey>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: Set<ReactiveController>;\n\n  protected squelchUpdateErrorsDuringLit2Migration?: boolean;\n\n  constructor() {\n    super();\n    this.__initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   */\n  private __initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    // This enqueues a microtask that ust run before the first update, so it\n    // must be called before requestUpdate()\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= new Set()).add(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    this.__controllers?.delete(controller);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    const instanceProperties = new Map<PropertyKey, unknown>();\n    const elementProperties = (this.constructor as typeof ReactiveElement)\n      .elementProperties;\n    for (const p of elementProperties.keys() as IterableIterator<keyof this>) {\n      if (this.hasOwnProperty(p)) {\n        instanceProperties.set(p, this[p]);\n        delete this[p];\n      }\n    }\n    if (instanceProperties.size > 0) {\n      this.__instanceProperties = instanceProperties;\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // Create renderRoot before controllers `hostConnected`\n    (this as Mutable<typeof this, 'renderRoot'>).renderRoot ??=\n      this.createRenderRoot();\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(name: PropertyKey, value: unknown) {\n    const elemProperties: PropertyDeclarationMap = (\n      this.constructor as typeof ReactiveElement\n    ).elementProperties;\n    const options = elemProperties.get(name)!;\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter =\n        (options.converter as ComplexAttributeConverter)?.toAttribute !==\n        undefined\n          ? (options.converter as ComplexAttributeConverter)\n          : defaultConverter;\n      const attrValue = converter.toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n          'migration'\n        ) &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter =\n        typeof options.converter === 'function'\n          ? {fromAttribute: options.converter}\n          : options.converter?.fromAttribute !== undefined\n          ? options.converter\n          : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      this[propName as keyof this] = converter.fromAttribute!(\n        value,\n        options.type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @param initial whether this call is for the initial value of the property.\n   *     Initial values do not reflect to an attribute.\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void;\n  /* @internal */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration,\n    initial = false,\n    initialValue?: unknown\n  ): void {\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options ??= (\n        this.constructor as typeof ReactiveElement\n      ).getPropertyOptions(name);\n      const hasChanged = options.hasChanged ?? notEqual;\n      const newValue = initial ? initialValue : this[name as keyof this];\n      if (hasChanged(newValue, oldValue)) {\n        this._$changeProperty(name, oldValue, options);\n      } else {\n        // Abort the request if the property should not be considered changed.\n        return;\n      }\n    }\n    if (this.isUpdatePending === false) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _$changeProperty(\n    name: PropertyKey,\n    oldValue: unknown,\n    options: PropertyDeclaration\n  ) {\n    // TODO (justinfagnani): Create a benchmark of Map.has() + Map.set(\n    // vs just Map.set()\n    if (!this._$changedProperties.has(name)) {\n      this._$changedProperties.set(name, oldValue);\n    }\n    // Add to reflecting properties set.\n    // Note, it's important that every change has a chance to add the\n    // property to `__reflectingProperties`. This ensures setting\n    // attribute + property reflects correctly.\n    if (options.reflect === true && this.__reflectingProperty !== name) {\n      (this.__reflectingProperties ??= new Set<PropertyKey>()).add(name);\n    }\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      if (!this.squelchUpdateErrorsDuringLit2Migration) {\n        noAwait(Promise.reject(e));\n      }\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    const result = this.performUpdate();\n    if (\n      DEV_MODE &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n        'async-perform-update'\n      ) &&\n      typeof (result as unknown as Promise<unknown> | undefined)?.then ===\n        'function'\n    ) {\n      issueWarning(\n        'async-perform-update',\n        `Element ${this.localName} returned a Promise from performUpdate(). ` +\n          `This behavior is deprecated and will be removed in a future ` +\n          `version of ReactiveElement.`\n      );\n    }\n    return result;\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent != null && debugLogEvent?.({kind: 'update'});\n    if (!this.hasUpdated) {\n      // Create renderRoot before first update. This occurs in `connectedCallback`\n      // but is done here to support out of tree calls to `enableUpdating`/`performUpdate`.\n      (this as Mutable<typeof this, 'renderRoot'>).renderRoot ??=\n        this.createRenderRoot();\n      if (DEV_MODE) {\n        // Produce warning if any reactive properties on the prototype are\n        // shadowed by class fields. Instance fields set before upgrade are\n        // deleted by this point, so any own property is caused by class field\n        // initialization in the constructor.\n        const ctor = this.constructor as typeof ReactiveElement;\n        const shadowedProperties = [...ctor.elementProperties.keys()].filter(\n          (p) => this.hasOwnProperty(p) && p in getPrototypeOf(this)\n        );\n        if (shadowedProperties.length &&\n            !(this as any).__allowInstanceProperties) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n      // Mixin instance properties once, if they exist.\n      if (this.__instanceProperties) {\n        // TODO (justinfagnani): should we use the stored value? Could a new value\n        // have been set since we stored the own property value?\n        for (const [p, value] of this.__instanceProperties) {\n          this[p as keyof this] = value as this[keyof this];\n        }\n        this.__instanceProperties = undefined;\n      }\n      // Trigger initial value reflection and populate the initial\n      // changedProperties map, but only for the case of experimental\n      // decorators on accessors, which will not have already populated the\n      // changedProperties map. We can't know if these accessors had\n      // initializers, so we just set them anyway - a difference from\n      // experimental decorators on fields and standard decorators on\n      // auto-accessors.\n      // For context why experimentalDecorators with auto accessors are handled\n      // specifically also see:\n      // https://github.com/lit/lit/pull/4183#issuecomment-1711959635\n      const elementProperties = (this.constructor as typeof ReactiveElement)\n        .elementProperties;\n      if (elementProperties.size > 0) {\n        for (const [p, options] of elementProperties) {\n          if (\n            options.wrapped === true &&\n            !this._$changedProperties.has(p) &&\n            this[p as keyof this] !== undefined\n          ) {\n            this._$changeProperty(p, this[p as keyof this], options);\n          }\n        }\n      }\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n        'change-in-update'\n      )\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    // The forEach() expression will only run when when __reflectingProperties is\n    // defined, and it returns undefined, setting __reflectingProperties to\n    // undefined\n    this.__reflectingProperties &&= this.__reflectingProperties.forEach((p) =>\n      this.__propertyToAttribute(p, this[p as keyof this])\n    ) as undefined;\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n// Assigned here to work around a jscompiler bug with static fields\n// when compiling to ES5.\n// https://github.com/google/closure-compiler/issues/3177\n(ReactiveElement as unknown as Record<string, unknown>)[\n  objectProperty('elementProperties', ReactiveElement)\n] = new Map();\n(ReactiveElement as unknown as Record<string, unknown>)[\n  objectProperty('finalized', ReactiveElement)\n] = new Map();\n\n// Apply polyfills if available\nif (goog.FEATURESET_YEAR < 2020) {\n  polyfillSupport?.({ReactiveElement});\n}\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = [\n    'change-in-update',\n    'async-perform-update',\n  ];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(objectProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (!this.enabledWarnings!.includes(warning)) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\nlet oneTimeWork = () => {\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('2.0.2');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\noneTimeWork = () => {};\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * (COPYBARA: packageDocumentation)\n */\n\nimport './polyfill-support';\nimport {objectProperty} from 'google3/third_party/javascript/closure/reflect/reflect';\nimport {adoptStyles, supportsAdoptingStyleSheets} from '@lit/reactive-element/css-tag.js';\nimport {shadowPiercingWalk} from 'google3/javascript/polymer/testing/shadow_piercer';\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n// COPYBARA: JSCompiler_renameProperty\n\nimport {DEV_MODE} from '@lit/reactive-element/dev-mode'; // COPYBARA: const\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    ((/* COPYBARA: globalThis */ window).litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n\n  /** @nocollapse */\n  static notifyOnHotReplace(tagname: string, classObj: typeof LitElement) {\n    if (goog.DEBUG) {\n      // There's lots of things that this doesn't handle, but probably the\n      // biggest is updates to the constructor. That means that changes to event\n      // handlers won't go through when they're defined as arrow function\n      // property initializers. We could potentially hack that together, via\n      // some really wild tricks, but I'm inclined not to. Periodically\n      // reloading the page while developing with HMR is a good habit for people\n      // to get into.\n      //\n      // One thing I'd like to support is live updating of CSS defined in a\n      // css file with lit_css_module.\n      const existingProps = new Set(Object.getOwnPropertyNames(this.prototype));\n      const newProps = new Set(Object.getOwnPropertyNames(classObj.prototype));\n      for (const prop of Object.getOwnPropertyNames(classObj.prototype)) {\n        Object.defineProperty(\n            this.prototype, prop,\n            Object.getOwnPropertyDescriptor(classObj.prototype, prop)!);\n      }\n      const nonconfigurablePropsToDelete = new Set<string>();\n      for (const existingProp of existingProps) {\n        if (!newProps.has(existingProp)) {\n          if (Object.getOwnPropertyDescriptor(this.prototype, existingProp)\n                  ?.configurable === false) {\n            nonconfigurablePropsToDelete.add(existingProp);\n            // No way to delete a non-configurable property off the prototype.\n            continue;\n          }\n          // tslint:disable-next-line:no-any Yep, this is hacky.\n          delete (this.prototype as any)[existingProp];\n        }\n      }\n\n      // This new class object has never been finalized before. Need to finalize\n      // so that instances can get any updated styles.\n      classObj.finalize();\n\n      for (const node of shadowPiercingWalk(document)) {\n        if (node instanceof HTMLElement &&\n            node.tagName.toLowerCase() === tagname.toLowerCase()) {\n          const myNode = node as LitElement;\n\n          for (const prop of nonconfigurablePropsToDelete) {\n            // So, prop is a non-configurable property on the prototype that\n            // we want to delete. We can't remove it on the prototype, but\n            // we can probably shadow it on the instance.\n            const directDescriptor =\n                Object.getOwnPropertyDescriptor(myNode, prop);\n            if (directDescriptor !== undefined) {\n              // The prototype field has been overwritten by a field on the\n              // instance, leave it alone.\n              continue;\n            }\n            // Patch myNode to behave as though it has no `prop` by defining an\n            // instance field named `prop` that is initially undefined, writable\n            // but not enumerable.\n            let val: unknown = undefined;\n            Object.defineProperty(myNode, prop, {\n              get() {\n                return val;\n              },\n              set(updated: unknown) {\n                val = updated;\n              },\n              enumerable: false,\n              configurable: true,\n            });\n          }\n          // Get updated styling. Need to test that this works in all the\n          // different browser configs, only tested on recent Chrome so far,\n          // where overriding adopted stylesheets seems to just work.\n          const styles = (myNode.constructor as typeof LitElement).elementStyles;\n          const renderRoot = myNode.renderRoot;\n          if (styles && renderRoot instanceof ShadowRoot) {\n            if (supportsAdoptingStyleSheets) {\n              adoptStyles(renderRoot, styles);\n            } else {\n              // Remove all existing shimmed styles from the node.\n              const nodes = Array.from(renderRoot.children);\n              for (const node of nodes) {\n                if (node.tagName.toLowerCase() === 'style') {\n                  renderRoot.removeChild(node);\n                }\n              }\n              // `myNode.renderOptions.renderBefore` needs to be updated\n              // because it refers to the first shimmed adopted style, which was\n              // just removed. So, keep track of the last child in `renderRoot`\n              // because the first new shimmed adopted style to be added by\n              // `adoptStyles` will be its next sibling once `adoptStyles` is\n              // finished.\n              const lastChild = renderRoot.lastChild;\n              adoptStyles(renderRoot, styles);\n              if (lastChild) {\n                myNode.renderOptions.renderBefore = lastChild.nextSibling;\n              } else {\n                delete myNode.renderOptions.renderBefore;\n              }\n            }\n            // Ask for a re-render.\n            myNode.requestUpdate();\n          }\n        }\n      }\n    }\n  }\n\n  /** @nocollapse */\n  static override finalize() {\n    oneTimeWork();\n    return super.finalize.call(this);\n  }\n}\n\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See @lit/reactive-element for more information.\n */\n(LitElement as unknown as Record<string, unknown>)[\n  objectProperty('finalized', LitElement)\n] = true;\n\n// Install hydration if available\n// commented out by copybara\n// (/* COPYBARA: globalThis */ window).litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nif (goog.FEATURESET_YEAR < 2020) {\n  const polyfillSupport = DEV_MODE ?\n      (/* COPYBARA: globalThis */ window).litElementPolyfillSupportDevMode :\n      (/* COPYBARA: globalThis */ window).litElementPolyfillSupport;\n  polyfillSupport?.({LitElement});\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\nlet oneTimeWork = () => {\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n((/* COPYBARA: globalThis */ window).litElementVersions ??= []).push('4.0.2');\nif (DEV_MODE && (/* COPYBARA: globalThis */ window).litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\noneTimeWork = () => {};\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Internal file that makes imports of the ts_library module_name work.\n */\n/**\n * @fileoverview added by tsickle\n * Generated from: third_party/javascript/lit/packages/reactive-element/src/index.ts\n * @suppress {checkTypes} added by tsickle\n * @suppress {extraRequire} added by tsickle\n * @suppress {missingRequire} added by tsickle\n * @suppress {uselessCode} added by tsickle\n * @suppress {suspiciousCode} added by tsickle\n * @suppress {missingReturn} added by tsickle\n * @suppress {unusedPrivateMembers} added by tsickle\n * @suppress {missingOverride} added by tsickle\n * @suppress {const} added by tsickle\n */\ngoog.module('google3.third_party.javascript.lit.packages.reactive$2delement.src.index');\nvar module = module || { id: 'third_party/javascript/lit/packages/reactive-element/src/index.closure.js' };\ngoog.require('google3.third_party.javascript.tslib.tslib');\nconst tsickle_reactive_element_1 = goog.requireType(\"google3.third_party.javascript.lit.packages.reactive$2delement.src.reactive$2delement\");\nconst reactive_element_1 = goog.require('google3.third_party.javascript.lit.packages.reactive$2delement.src.reactive$2delement');\nexports.defaultConverter = reactive_element_1.defaultConverter;\nexports.notEqual = reactive_element_1.notEqual;\nexports.litPropertyMetadata = reactive_element_1.litPropertyMetadata;\nexports.ReactiveElement = reactive_element_1.ReactiveElement;\nexports.supportsAdoptingStyleSheets = reactive_element_1.supportsAdoptingStyleSheets;\nexports.CSSResult = reactive_element_1.CSSResult;\nexports.css = reactive_element_1.css;\nexports.adoptStyles = reactive_element_1.adoptStyles;\nexports.getCompatibleStyle = reactive_element_1.getCompatibleStyle;\n/** @typedef {!tsickle_reactive_element_1.ReactiveController} */\nexports.ReactiveController; // re-export typedef\n/** @typedef {!tsickle_reactive_element_1.ReactiveControllerHost} */\nexports.ReactiveControllerHost; // re-export typedef\n/** @typedef {!tsickle_reactive_element_1.ComplexAttributeConverter} */\nexports.ComplexAttributeConverter; // re-export typedef\n/** @typedef {!tsickle_reactive_element_1.PropertyDeclaration} */\nexports.PropertyDeclaration; // re-export typedef\n/** @typedef {!tsickle_reactive_element_1.PropertyDeclarations} */\nexports.PropertyDeclarations; // re-export typedef\n/** @typedef {!tsickle_reactive_element_1.PropertyValues} */\nexports.PropertyValues; // re-export typedef\n/** @typedef {!tsickle_reactive_element_1.PropertyValueMap} */\nexports.PropertyValueMap; // re-export typedef\n/** @typedef {!tsickle_reactive_element_1.HasChanged} */\nexports.HasChanged; // re-export typedef\n/** @typedef {!tsickle_reactive_element_1.WarningKind} */\nexports.WarningKind; // re-export typedef\n/** @typedef {!tsickle_reactive_element_1.Initializer} */\nexports.Initializer; // re-export typedef\n/** @typedef {!tsickle_reactive_element_1.CSSResultOrNative} */\nexports.CSSResultOrNative; // re-export typedef\n/** @typedef {!tsickle_reactive_element_1.CSSResultArray} */\nexports.CSSResultArray; // re-export typedef\n/** @typedef {!tsickle_reactive_element_1.CSSResultGroup} */\nexports.CSSResultGroup; // re-export typedef\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi90aGlyZF9wYXJ0eS9qYXZhc2NyaXB0L2xpdC9wYWNrYWdlcy9yZWFjdGl2ZS1lbGVtZW50L3NyYy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBVUEsaUlBQW1DIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJTRC0zLUNsYXVzZVxuICovXG5cbi8qKlxuICogSW50ZXJuYWwgZmlsZSB0aGF0IG1ha2VzIGltcG9ydHMgb2YgdGhlIHRzX2xpYnJhcnkgbW9kdWxlX25hbWUgd29yay5cbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL3JlYWN0aXZlLWVsZW1lbnQnO1xuIl19","import {css, CSSResult} from 'lit';\n\n/** Styles from cultural/integrations/chromeextensions/arttab/options/options.css. */\n\n// Pretty print for debugging.\n// Function so that it is not included if not called in the final binary.\nfunction getPrettyStyles() {\n  return css([`@font-face{font-family:Google Sans;font-style:normal;font-weight:400;src:local(\"Google Sans\"),local(\"Google-Sans\"),url(chrome-extension://__MSG_@@extension_id__/fonts/GoogleSans-Regular.ttf) format(\"truetype\")}@font-face{font-family:Google Sans;font-style:normal;font-weight:700;src:local(\"Google Sans\"),local(\"Google-Sans\"),url(chrome-extension://__MSG_@@extension_id__/fonts/GoogleSans-Bold.ttf) format(\"truetype\")}body{-webkit-box-align:stretch;-webkit-align-items:stretch;-moz-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;background-color:#fff;border:0;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-flow:row nowrap;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-flow:row nowrap;flex-flow:row nowrap;font-family:Google Sans,Arial,Helvetica,sans-serif;font-size:16px;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;line-height:1.6;margin:0;padding:0}:host{-webkit-box-align:stretch;-webkit-align-items:stretch;-moz-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-align-self:stretch;-ms-flex-item-align:stretch;align-self:stretch;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-flow:row wrap;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;place-content:space-between space-between;width:100%}.options-container{margin:20px;min-width:500px}.option-title{font-size:18px;font-weight:700;margin-bottom:20px}.turnover{-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-flow:row nowrap;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-flow:row nowrap;flex-flow:row nowrap;margin-left:18px;place-content:space-between space-between}md-radio{margin-right:9px}.toption{min-width:240px}.optdiv{margin:30px 0}.button{-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-flow:row nowrap;-moz-box-orient:horizontal;-moz-box-direction:normal;-ms-flex-flow:row nowrap;flex-flow:row nowrap;place-content:flex-start flex-start}.buttondesc{-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-flow:column nowrap;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-flow:column nowrap;flex-flow:column nowrap;margin-top:11px;place-content:flex-start flex-start}\n/*# sourceMappingURL=options.css.map */`] as unknown as TemplateStringsArray);\n}\n\n\n// Minified for production.\n// Function so that it is not included if not called in the final binary.\nfunction getMinifiedStyles() {\n  return css([`@font-face{font-family:Google Sans;font-style:normal;font-weight:400;src:local(\"Google Sans\"),local(\"Google-Sans\"),url(chrome-extension://__MSG_@@extension_id__/fonts/GoogleSans-Regular.ttf) format(\"truetype\")}@font-face{font-family:Google Sans;font-style:normal;font-weight:700;src:local(\"Google Sans\"),local(\"Google-Sans\"),url(chrome-extension://__MSG_@@extension_id__/fonts/GoogleSans-Bold.ttf) format(\"truetype\")}body{-webkit-box-align:stretch;-moz-box-align:stretch;-ms-flex-align:stretch;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-moz-box-orient:horizontal;-moz-box-direction:normal;-webkit-box-pack:center;-moz-box-pack:center;-ms-flex-pack:center;-webkit-align-items:stretch;align-items:stretch;background-color:#fff;border:0;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-flex-flow:row nowrap;-ms-flex-flow:row nowrap;flex-flow:row nowrap;font-family:Google Sans,Arial,Helvetica,sans-serif;font-size:16px;-webkit-justify-content:center;justify-content:center;line-height:1.6;margin:0;padding:0}:host{-webkit-box-align:stretch;-moz-box-align:stretch;-ms-flex-align:stretch;-ms-flex-item-align:stretch;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-moz-box-orient:horizontal;-moz-box-direction:normal;-webkit-align-items:stretch;align-items:stretch;-webkit-align-self:stretch;align-self:stretch;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap;place-content:space-between space-between;width:100%}.options-container{margin:20px;min-width:500px}.option-title{font-size:18px;font-weight:700;margin-bottom:20px}.turnover{-webkit-box-align:center;-moz-box-align:center;-ms-flex-align:center;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-moz-box-orient:horizontal;-moz-box-direction:normal;-webkit-align-items:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-flex-flow:row nowrap;-ms-flex-flow:row nowrap;flex-flow:row nowrap;margin-left:18px;place-content:space-between space-between}md-radio{margin-right:9px}.toption{min-width:240px}.optdiv{margin:30px 0}.button{-webkit-box-orient:horizontal;-moz-box-orient:horizontal;-webkit-flex-flow:row nowrap;-ms-flex-flow:row nowrap;flex-flow:row nowrap}.button,.buttondesc{-webkit-box-align:start;-moz-box-align:start;-ms-flex-align:start;-webkit-box-direction:normal;-moz-box-direction:normal;-webkit-align-items:flex-start;align-items:flex-start;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;place-content:flex-start flex-start}.buttondesc{-webkit-box-orient:vertical;-moz-box-orient:vertical;-webkit-flex-flow:column nowrap;-ms-flex-flow:column nowrap;flex-flow:column nowrap;margin-top:11px}`] as unknown as TemplateStringsArray);\n}\n\n\nexport const styles: CSSResult = goog.DEBUG ? getPrettyStyles() : getMinifiedStyles();\nexport default styles;\n\n// Declare extern so this does not get property renamed.\ndeclare interface LitCssWindow {\n  __litStyleMap: undefined | Map<string, CSSResult>;\n}\n\nif (goog.DEBUG) {\n  const litCssWindow = window as unknown as LitCssWindow;\n  litCssWindow['__litStyleMap'] = litCssWindow['__litStyleMap'] || new Map<string, CSSResult>();\n  const map = litCssWindow['__litStyleMap'];\n  const key = `cultural/integrations/chromeextensions/arttab/options/options.css`;\n  const existing = map.get(key);\n  if (existing === undefined) {\n    map.set(key, styles);\n  } else {\n    existing.notifyOnHotReplace(styles);\n    (window as any).hotReplacementHandled = true;\n  }\n}\n","import {Date as GoogDate} from 'google3/third_party/javascript/closure/date/date';\n\n// TODO: b/287589633 - Move these IDs if they are not to be shared.\n/** Analytics API Secret. */\nexport const GA4_API_SECRET = '4Kqze13oQeysgtPTWX6YDA';\n/** Analytics Measurement ID. */\nexport const GA4_MEASUREMENT_ID = 'G-7822LS9WSS';\n\nconst GA_BASE_URL = 'https://www.google-analytics.com';\nconst GA_URL = `${GA_BASE_URL}/mp/collect`;\nconst GA_TEST_URL = `${GA_BASE_URL}/debug/mp/collect`;\n// GA4 wants this param for realtime reports so we provide the default value.\nconst DEFAULT_ENGAGEMENT_TIME_MSEC = 100;\n\n/** Base URL for the Google Arts & Culture website. */\nexport const GAC_SITE_URL = 'https://artsandculture.google.com';\n\nenum UtmParams {\n  SOURCE = 'utm_source',\n  MEDIUM = 'utm_medium',\n  CAMPAIGN = 'utm_campaign',\n}\n\n/** Provides analytics url params. */\nexport function getUtmParams(\n  sourceValue = 'chrome_extension',\n  mediumValue = 'default_link',\n  campaignValue = 'chrome_extension_3',\n): string {\n  return (\n    `${UtmParams.SOURCE}=${sourceValue}&` +\n    `${UtmParams.MEDIUM}=${mediumValue}&` +\n    `${UtmParams.CAMPAIGN}=${campaignValue}`\n  );\n}\n\nasync function getOrCreateClientId(): Promise<string> {\n  const result = await chrome.storage.local.get('clientId');\n  let clientId = result ? result['clientId'] : undefined;\n  if (!clientId) {\n    clientId = self.crypto.randomUUID();\n    await chrome.storage.local.set({'clientId': clientId});\n  }\n  return clientId;\n}\n\n/** The session ID is the current date in an ISO format string. */\nfunction getSessionId(): string {\n  const verbose = false;\n  const includeTz = false;\n  const now = new GoogDate();\n  return now.toIsoString(verbose, includeTz);\n}\n\n/** Test modes for GA4 development, set to PROD for release. */\n// TODO: b/287589633 - Set this value via a config?\nexport enum AnalyticsMode {\n  PROD = 'Production',\n  TEST = 'Debug',\n  VALIDATE = 'Validate',\n}\n\n// When true no HTTP requests are made in tests.\nlet noFetchMode = false;\n\n/** Sends events to GA4. */\n// eventName & params object keys must be 40 characters max, only alpha-numeric\n// or underscores, must start with alpha.\n// params obj values 100 characters max.\nexport async function sendGoogleAnalyticsEvent<T>(\n  eventName: string,\n  params: T,\n  mode = AnalyticsMode.PROD,\n): Promise<void> {\n  // TODO: b/287589633 - Consider if consent attributes need to be added see:\n  // https://developers.google.com/analytics/devguides/collection/protocol/ga4/reference?client_type=gtag#payload_consent\n  const body = {\n    'client_id': await getOrCreateClientId(),\n    'user_properties': {\n      'chrome_extension_version': {\n        'value': chrome.runtime.getManifest().version,\n      },\n      'preferred_user_languages': {\n        'value': (await chrome.i18n.getAcceptLanguages())\n          .join(', ')\n          .substring(0, 100),\n      },\n    },\n    'events': [\n      {\n        'name': eventName,\n        'params': {\n          'session_id': getSessionId(),\n          'engagement_time_msec': DEFAULT_ENGAGEMENT_TIME_MSEC,\n          ...params,\n          ...(mode !== AnalyticsMode.PROD ? {'debug_mode': true} : {}),\n        },\n      },\n    ],\n  };\n\n  const postUrl =\n    (mode === AnalyticsMode.VALIDATE ? GA_TEST_URL : GA_URL) +\n    `?measurement_id=${GA4_MEASUREMENT_ID}&api_secret=${GA4_API_SECRET}`;\n\n  const postData = {\n    method: 'POST',\n    headers: {'Accept': 'application/json'},\n    body: JSON.stringify(body),\n  };\n\n  if (mode !== AnalyticsMode.PROD) {\n    console.info(`POST GA4 event to ${postUrl}`, body);\n  }\n\n  if (noFetchMode) {\n    return;\n  }\n\n  const response = await fetch(postUrl, postData);\n\n  if (!response.ok) {\n    console.error(`GA4 response error ${response.status}`);\n  }\n\n  if (mode === AnalyticsMode.VALIDATE) {\n    const validationResult = await response.json();\n    console.info('GA4 validation result', validationResult);\n  }\n}\n\nexport const TEST_ONLY = {\n  activateNoFetchMode: () => {\n    noFetchMode = true;\n  },\n};\n","import '@material/web/checkbox/checkbox';\nimport '@material/web/divider/divider';\nimport '@material/web/radio/radio';\n\nimport {MdCheckbox} from '@material/web/checkbox/checkbox';\nimport {CSSResultGroup, html, LitElement} from 'lit';\nimport {customElement, property} from 'lit/decorators';\n\nimport {\n  getUserSettings,\n  NewTabSetting,\n  writeUserSetting,\n} from 'google3/cultural/integrations/chromeextensions/arttab/newtab/settings';\nimport {sendGoogleAnalyticsEvent} from 'google3/cultural/integrations/chromeextensions/shared/analytics/analytics';\n\nimport {styles} from './options.css';\n\nimport type {UserSettings} from 'google3/cultural/integrations/chromeextensions/arttab/newtab/settings';\n\n/** Google Arts & Culture ArtTab Chrome Extension options page element. */\n@customElement('gac-art-options')\nexport class ArtTabOptions extends LitElement {\n  static override styles: CSSResultGroup = [styles];\n\n  @property({type: Boolean}) isLoading = true;\n  @property({type: Boolean}) turnoverAlways = false;\n  @property({type: Boolean}) appsButtonShown = true;\n  @property({type: Boolean}) defaultNewTabButtonShown = true;\n  @property({type: Boolean}) topSitesButtonShown = true;\n\n  constructor() {\n    super();\n\n    this.initialLoadTasks();\n  }\n\n  override render() {\n    sendGoogleAnalyticsEvent('screen_view', {\n      'screen_class': 'Dialog',\n      'screen_title': 'UserOptions',\n    });\n    return this.buildElement();\n  }\n\n  private buildElement() {\n    return html`<div class=\"options-container\">\n      <div id=\"group-turnover\" class=\"option-title\">\n        ${chrome.i18n.getMessage('turnoverGroup')}\n      </div>\n      <div role=\"radiogroup\" aria-labelledby=\"group-turnover\" class=\"turnover\">\n        <div class=\"toption\">\n          <md-radio\n            id=\"turnoverModeDaily\"\n            name=\"turnover\"\n            @change=\"${(e: Event) => {\n              writeUserSetting(NewTabSetting.TURNOVER_ALWAYS, false);\n            }}\"\n            ?checked=\"${!this.turnoverAlways}\"\n            ?disabled=\"${this.isLoading}\"></md-radio>\n          <label for=\"turnoverModeDaily\">\n            ${chrome.i18n.getMessage('turnoverModeDaily')}\n          </label>\n        </div>\n        <div class=\"toption\">\n          <md-radio\n            id=\"turnoverModeAlways\"\n            name=\"turnover\"\n            @change=\"${(e: Event) => {\n              writeUserSetting(NewTabSetting.TURNOVER_ALWAYS, true);\n            }}\"\n            ?checked=\"${this.turnoverAlways}\"\n            ?disabled=\"${this.isLoading}\"></md-radio>\n          <label for=\"turnoverModeAlways\">\n            ${chrome.i18n.getMessage('turnoverModeAlways')}\n          </label>\n        </div>\n      </div>\n      <md-divider class=\"optdiv\"></md-divider>\n      <div class=\"option-title\">\n        ${chrome.i18n.getMessage('optionsInterface')}\n      </div>\n      <div class=\"buttonvisibility\">\n        <div class=\"apps button\">\n          <md-checkbox\n            id=\"optionsAppsBtn\"\n            touch-target=\"wrapper\"\n            @change=\"${(e: Event) => {\n              writeUserSetting(\n                NewTabSetting.APPS_BUTTON_HIDDEN,\n                !(e.target as MdCheckbox).checked,\n              );\n            }}\"\n            .checked=\"${this.appsButtonShown}\"\n            ?disabled=\"${this.isLoading}\"></md-checkbox>\n          <div class=\"buttondesc\">\n            <label for=\"optionsAppsBtn\">\n              ${chrome.i18n.getMessage('optionsAppsBtn')}\n            </label>\n            <div>${chrome.i18n.getMessage('optionsAppsBtnDesc')}</div>\n          </div>\n        </div>\n        <div class=\"dntp button\">\n          <md-checkbox\n            id=\"optionsNtpBtn\"\n            touch-target=\"wrapper\"\n            @change=\"${(e: Event) => {\n              writeUserSetting(\n                NewTabSetting.DEFAULT_NEWTAB_BUTTON_HIDDEN,\n                !(e.target as MdCheckbox).checked,\n              );\n            }}\"\n            .checked=\"${this.defaultNewTabButtonShown}\"\n            ?disabled=\"${this.isLoading}\"></md-checkbox>\n          <div class=\"buttondesc\">\n            <label for=\"optionsNtpBtn\">\n              ${chrome.i18n.getMessage('optionsNtpBtn')}\n            </label>\n            <div>${chrome.i18n.getMessage('optionsNtpBtnDesc')}</div>\n          </div>\n        </div>\n        <div class=\"tops button\">\n          <md-checkbox\n            id=\"optionsTopSitesBtn\"\n            touch-target=\"wrapper\"\n            @change=\"${(e: Event) => {\n              writeUserSetting(\n                NewTabSetting.TOP_SITES_BUTTON_HIDDEN,\n                !(e.target as MdCheckbox).checked,\n              );\n            }}\"\n            .checked=\"${this.topSitesButtonShown}\"\n            ?disabled=\"${this.isLoading}\"></md-checkbox>\n          <div class=\"buttondesc\">\n            <label for=\"optionsTopSitesBtn\">\n              ${chrome.i18n.getMessage('optionsTopSitesBtn')}\n            </label>\n            <div>${chrome.i18n.getMessage('optionsTopSitesBtnDesc')}</div>\n          </div>\n        </div>\n      </div>\n    </div>`;\n  }\n\n  private async initialLoadTasks(): Promise<void> {\n    await this.syncUserSettings();\n    this.isLoading = false;\n    this.requestUpdate();\n  }\n\n  private async syncUserSettings(): Promise<void> {\n    const storedSettings: UserSettings = await getUserSettings();\n\n    this.turnoverAlways = storedSettings[NewTabSetting.TURNOVER_ALWAYS];\n\n    this.appsButtonShown = !storedSettings[NewTabSetting.APPS_BUTTON_HIDDEN];\n    this.defaultNewTabButtonShown =\n      !storedSettings[NewTabSetting.DEFAULT_NEWTAB_BUTTON_HIDDEN];\n    this.topSitesButtonShown =\n      !storedSettings[NewTabSetting.TOP_SITES_BUTTON_HIDDEN];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'gac-art-options': ArtTabOptions;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport type {Constructor} from './base.js';\n\n/**\n * Allow for custom element classes with private constructors\n */\ntype CustomElementClass = Omit<typeof HTMLElement, 'new'>;\n\nexport type CustomElementDecorator = {\n  // legacy\n  (cls: CustomElementClass): void;\n\n  // standard\n  (\n    target: CustomElementClass,\n    context: ClassDecoratorContext<Constructor<HTMLElement>>\n  ): void;\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement =\n  (tagName: string): CustomElementDecorator =>\n  (\n    classOrTarget: CustomElementClass | Constructor<HTMLElement>,\n    context?: ClassDecoratorContext<Constructor<HTMLElement>>\n  ) => {\n    if (context !== undefined) {\n      context.addInitializer(() => {\n        customElements.define(\n          tagName,\n          classOrTarget as CustomElementConstructor\n        );\n      });\n    } else {\n      customElements.define(tagName, classOrTarget as CustomElementConstructor);\n    }\n  };\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {\n  type PropertyDeclaration,\n  type ReactiveElement,\n  defaultConverter,\n  litPropertyMetadata,\n  notEqual,\n} from '../reactive-element.js';\nimport type {Interface} from './base.js';\n\nimport {DEV_MODE} from '@lit/reactive-element/dev-mode'; // COPYBARA: const\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    ((/* COPYBARA: globalThis */ window).litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      // Work around a jsconformance rule that fails when we might be\n      // logging outside of DEV_MODE, but this log is kosher because it is\n      // only in DEV_MODE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const cons = (globalThis as any)['cons' + 'ole'] as {\n        warn(...args: unknown[]): void;\n      };\n      cons.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n// Overloads for property decorator so that TypeScript can infer the correct\n// return type when a decorator is used as an accessor decorator or a setter\n// decorator.\nexport type PropertyDecorator = {\n  // accessor decorator signature\n  <C extends Interface<ReactiveElement>, V>(\n    target: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n\n  // setter decorator signature\n  <C extends Interface<ReactiveElement>, V>(\n    target: (value: V) => void,\n    context: ClassSetterDecoratorContext<C, V>\n  ): (this: C, value: V) => void;\n\n  // legacy decorator signature\n  (\n    protoOrDescriptor: Object,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any;\n};\n\nconst legacyProperty = (\n  options: PropertyDeclaration | undefined,\n  proto: Object,\n  name: PropertyKey\n) => {\n  const hasOwnProperty = proto.hasOwnProperty(name);\n  (proto.constructor as typeof ReactiveElement).createProperty(\n    name,\n    hasOwnProperty ? {...options, wrapped: true} : options\n  );\n  // For accessors (which have a descriptor on the prototype) we need to\n  // return a descriptor, otherwise TypeScript overwrites the descriptor we\n  // define in createProperty() with the original descriptor. We don't do this\n  // for fields, which don't have a descriptor, because this could overwrite\n  // descriptor defined by other decorators.\n  return hasOwnProperty\n    ? Object.getOwnPropertyDescriptor(proto, name)\n    : undefined;\n};\n\n// This is duplicated from a similar variable in reactive-element.ts, but\n// actually makes sense to have this default defined with the decorator, so\n// that different decorators could have different defaults.\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n// Temporary type, until google3 is on TypeScript 5.2\ntype StandardPropertyContext<C, V> = (\n  | ClassAccessorDecoratorContext<C, V>\n  | ClassSetterDecoratorContext<C, V>\n) & {metadata: object};\n\n/**\n * Wraps a class accessor or setter so that `requestUpdate()` is called with the\n * property name and old value when the accessor is set.\n */\nexport const standardProperty = <C extends Interface<ReactiveElement>, V>(\n  options: PropertyDeclaration = defaultPropertyDeclaration,\n  target: ClassAccessorDecoratorTarget<C, V> | ((value: V) => void),\n  context: StandardPropertyContext<C, V>\n): ClassAccessorDecoratorResult<C, V> | ((this: C, value: V) => void) => {\n  const {kind, metadata} = context;\n\n  if (DEV_MODE && metadata == null) {\n    issueWarning(\n      'missing-class-metadata',\n      `The class ${target} is missing decorator metadata. This ` +\n        `could mean that you're using a compiler that supports decorators ` +\n        `but doesn't support decorator metadata, such as TypeScript 5.1. ` +\n        `Please update your compiler.`\n    );\n  }\n\n  // Store the property options\n  let properties = litPropertyMetadata.get(metadata);\n  if (properties === undefined) {\n    litPropertyMetadata.set(metadata, (properties = new Map()));\n  }\n  properties.set(context.name, options);\n\n  if (kind === 'accessor') {\n    // Standard decorators cannot dynamically modify the class, so we can't\n    // replace a field with accessors. The user must use the new `accessor`\n    // keyword instead.\n    const {name} = context;\n    return {\n      set(this: ReactiveElement, v: V) {\n        const oldValue = (\n          target as ClassAccessorDecoratorTarget<C, V>\n        ).get.call(this as unknown as C);\n        (target as ClassAccessorDecoratorTarget<C, V>).set.call(\n          this as unknown as C,\n          v\n        );\n        this.requestUpdate(name, oldValue, options);\n      },\n      init(this: ReactiveElement, v: V): V {\n        if (v !== undefined) {\n          this._$changeProperty(name, undefined, options);\n        }\n        return v;\n      },\n    } as unknown as ClassAccessorDecoratorResult<C, V>;\n  } else if (kind === 'setter') {\n    const {name} = context;\n    return function (this: ReactiveElement, value: V) {\n      const oldValue = this[name as keyof ReactiveElement];\n      (target as (value: V) => void).call(this, value);\n      this.requestUpdate(name, oldValue, options);\n    } as unknown as (this: C, value: V) => void;\n  }\n  throw new Error(`Unsupported decorator location: ${kind}`);\n};\n\n/**\n * A class field or accessor decorator which creates a reactive property that\n * reflects a corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration): PropertyDecorator {\n  return <C extends Interface<ReactiveElement>, V>(\n    protoOrTarget:\n      | object\n      | ClassAccessorDecoratorTarget<C, V>\n      | ((value: V) => void),\n    nameOrContext:\n      | PropertyKey\n      | ClassAccessorDecoratorContext<C, V>\n      | ClassSetterDecoratorContext<C, V>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any => {\n    return (\n      typeof nameOrContext === 'object'\n        ? standardProperty<C, V>(\n            options,\n            protoOrTarget as\n              | ClassAccessorDecoratorTarget<C, V>\n              | ((value: V) => void),\n            nameOrContext as StandardPropertyContext<C, V>\n          )\n        : legacyProperty(\n            options,\n            protoOrTarget as Object,\n            nameOrContext as PropertyKey\n          )\n    ) as PropertyDecorator;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Generates a public interface type that removes private and protected fields.\n * This allows accepting otherwise incompatible versions of the type (e.g. from\n * multiple copies of the same package in `node_modules`).\n */\nexport type Interface<T> = {\n  [K in keyof T]: T[K];\n};\n\nexport type Constructor<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any[]): T;\n};\n\n/**\n * Wraps up a few best practices when returning a property descriptor from a\n * decorator.\n *\n * Marks the defined property as configurable, and enumerable, and handles\n * the case where we have a busted Reflect.decorate zombiefill (e.g. in Angular\n * apps).\n *\n * @internal\n */\nexport const desc = (\n  obj: object,\n  name: PropertyKey | ClassAccessorDecoratorContext<unknown, unknown>,\n  descriptor: PropertyDescriptor\n) => {\n  // For backwards compatibility, we keep them configurable and enumerable.\n  descriptor.configurable = true;\n  descriptor.enumerable = true;\n  if (\n    // We check for Reflect.decorate each time, in case the zombiefill\n    // is applied via lazy loading some Angular code.\n    (Reflect as typeof Reflect & {decorate?: unknown}).decorate &&\n    typeof name !== 'object'\n  ) {\n    // If we're called as a legacy decorator, and Reflect.decorate is present\n    // then we have no guarantees that the returned descriptor will be\n    // defined on the class, so we must apply it directly ourselves.\n\n    Object.defineProperty(obj, name, descriptor);\n  }\n  return descriptor;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport type {ReactiveElement} from '../reactive-element.js';\nimport {desc, type Interface} from './base.js';\n\nimport {DEV_MODE} from '@lit/reactive-element/dev-mode'; // COPYBARA: const\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    ((/* COPYBARA: globalThis */ window).litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!issuedWarnings.has(warning)) {\n      // Work around a jsconformance rule that fails when we might be\n      // logging outside of DEV_MODE, but this log is kosher because it is\n      // only in DEV_MODE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const cons = (globalThis as any)['cons' + 'ole'] as {\n        warn(...args: unknown[]): void;\n      };\n      cons.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\nexport type QueryDecorator = {\n  // legacy\n  (\n    proto: Interface<ReactiveElement>,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any;\n\n  // standard\n  <C extends Interface<ReactiveElement>, V extends Element | null>(\n    value: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n};\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean): QueryDecorator {\n  return (<C extends Interface<ReactiveElement>, V extends Element | null>(\n    protoOrTarget: ClassAccessorDecoratorTarget<C, V>,\n    nameOrContext: PropertyKey | ClassAccessorDecoratorContext<C, V>,\n    descriptor?: PropertyDescriptor\n  ) => {\n    const doQuery = (el: Interface<ReactiveElement>): V => {\n      const result = (el.renderRoot?.querySelector(selector) ?? null) as V;\n      if (DEV_MODE && result === null && cache && !el.hasUpdated) {\n        const name =\n          typeof nameOrContext === 'object'\n            ? nameOrContext.name\n            : nameOrContext;\n        issueWarning(\n          '',\n          `@query'd field ${JSON.stringify(String(name))} with the 'cache' ` +\n            `flag set for selector '${selector}' has been accessed before ` +\n            `the first update and returned null. This is expected if the ` +\n            `renderRoot tree has not been provided beforehand (e.g. via ` +\n            `Declarative Shadow DOM). Therefore the value hasn't been cached.`\n        );\n      }\n      // TODO: if we want to allow users to assert that the query will never\n      // return null, we need a new option and to throw here if the result\n      // is null.\n      return result;\n    };\n    if (cache) {\n      // Accessors to wrap from either:\n      //   1. The decorator target, in the case of standard decorators\n      //   2. The property descriptor, in the case of experimental decorators\n      //      on auto-accessors.\n      //   3. Functions that access our own cache-key property on the instance,\n      //      in the case of experimental decorators on fields.\n      const {get, set} =\n        typeof nameOrContext === 'object'\n          ? protoOrTarget\n          : descriptor ??\n            (() => {\n              const key = DEV_MODE\n                ? Symbol(`${String(nameOrContext)} (@query() cache)`)\n                : Symbol();\n              type WithCache = ReactiveElement & {\n                [key: symbol]: Element | null;\n              };\n              return {\n                get() {\n                  return (this as WithCache)[key];\n                },\n                set(v) {\n                  (this as WithCache)[key] = v;\n                },\n              };\n            })();\n      return desc(protoOrTarget, nameOrContext, {\n        get(this: ReactiveElement): V {\n          let result: V = get!.call(this);\n          if (result === undefined) {\n            result = doQuery(this);\n            if (result !== null || this.hasUpdated) {\n              set!.call(this, result);\n            }\n          }\n          return result;\n        },\n      });\n    } else {\n      // This object works as the return type for both standard and\n      // experimental decorators.\n      return desc(protoOrTarget, nameOrContext, {\n        get(this: ReactiveElement) {\n          return doQuery(this);\n        },\n      });\n    }\n  }) as QueryDecorator;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {property} from './property.js';\n\nexport interface StateDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * @deprecated use StateDeclaration\n */\nexport type InternalPropertyDeclaration<Type = unknown> =\n  StateDeclaration<Type>;\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options?: StateDeclaration) {\n  return property({\n    ...options,\n    // Add both `state` and `attribute` because we found a third party\n    // controller that is keying off of PropertyOptions.state to determine\n    // whether a field is a private internal property or not.\n    state: true,\n    attribute: false,\n  });\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for blaze-out/k8-opt/bin/third_party/javascript/material/web/checkbox/internal/checkbox-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{border-start-start-radius:var(--md-checkbox-container-shape-start-start,var(--md-checkbox-container-shape,2px));border-start-end-radius:var(--md-checkbox-container-shape-start-end,var(--md-checkbox-container-shape,2px));border-end-end-radius:var(--md-checkbox-container-shape-end-end,var(--md-checkbox-container-shape,2px));border-end-start-radius:var(--md-checkbox-container-shape-end-start,var(--md-checkbox-container-shape,2px));display:inline-flex;height:var(--md-checkbox-container-size,18px);position:relative;vertical-align:top;width:var(--md-checkbox-container-size,18px);-webkit-tap-highlight-color:transparent;cursor:pointer}:host([disabled]){cursor:default}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--md-checkbox-container-size,18px))/2)}md-focus-ring{height:44px;inset:unset;width:44px}input{-moz-appearance:none;appearance:none;height:48px;margin:0;opacity:0;outline:none;position:absolute;width:48px;z-index:1;cursor:inherit}:host([touch-target=none]) input{height:100%;width:100%}.container{border-radius:inherit;display:flex;height:100%;place-content:center;place-items:center;position:relative;width:100%}.background,.icon,.outline{inset:0;position:absolute}.background,.outline{border-radius:inherit}.outline{border-color:var(--md-checkbox-outline-color,var(--md-sys-color-on-surface-variant,#49454f));border-style:solid;border-width:var(--md-checkbox-outline-width,2px);box-sizing:border-box}.background{background-color:var(--md-checkbox-selected-container-color,var(--md-sys-color-primary,#6750a4))}.background,.icon{opacity:0;transition-duration:.15s,50ms;transition-property:transform,opacity;transition-timing-function:cubic-bezier(.3,0,.8,.15),linear;transform:scale(.6)}:where(.selected) :is(.background,.icon){opacity:1;transition-duration:.35s,50ms;transition-timing-function:cubic-bezier(.05,.7,.1,1),linear;transform:scale(1)}md-ripple{border-radius:var(--md-checkbox-state-layer-shape,var(--md-sys-shape-corner-full,9999px));height:var(--md-checkbox-state-layer-size,40px);inset:unset;width:var(--md-checkbox-state-layer-size,40px);--md-ripple-hover-color:var(--md-checkbox-hover-state-layer-color,var(--md-sys-color-on-surface,#1d1b20));--md-ripple-hover-opacity:var(--md-checkbox-hover-state-layer-opacity,0.08);--md-ripple-pressed-color:var(--md-checkbox-pressed-state-layer-color,var(--md-sys-color-primary,#6750a4));--md-ripple-pressed-opacity:var(--md-checkbox-pressed-state-layer-opacity,0.12)}.selected md-ripple{--md-ripple-hover-color:var(--md-checkbox-selected-hover-state-layer-color,var(--md-sys-color-primary,#6750a4));--md-ripple-hover-opacity:var(--md-checkbox-selected-hover-state-layer-opacity,0.08);--md-ripple-pressed-color:var(--md-checkbox-selected-pressed-state-layer-color,var(--md-sys-color-on-surface,#1d1b20));--md-ripple-pressed-opacity:var(--md-checkbox-selected-pressed-state-layer-opacity,0.12)}.icon{fill:var(--md-checkbox-selected-icon-color,var(--md-sys-color-on-primary,#fff));height:var(--md-checkbox-icon-size,18px);width:var(--md-checkbox-icon-size,18px)}.mark.short{height:2px;transition-property:transform,height;width:2px}.mark.long{height:2px;transition-property:transform,width;width:10px}.mark{animation-duration:.15s;animation-timing-function:cubic-bezier(.3,0,.8,.15);transition-duration:.15s;transition-timing-function:cubic-bezier(.3,0,.8,.15)}.selected .mark{animation-duration:.35s;animation-timing-function:cubic-bezier(.05,.7,.1,1);transition-duration:.35s;transition-timing-function:cubic-bezier(.05,.7,.1,1)}.checked .mark,.prev-checked.unselected .mark{transform:scaleY(-1) translate(7px,-14px) rotate(45deg)}.checked .mark.short,.prev-checked.unselected .mark.short{height:5.6568542495px}.checked .mark.long,.prev-checked.unselected .mark.long{width:11.313708499px}.indeterminate .mark,.prev-indeterminate.unselected .mark{transform:scaleY(-1) translate(4px,-10px) rotate(0deg)}.prev-unselected .mark{transition-property:none}.prev-unselected.checked .mark.long{animation-name:prev-unselected-to-checked}@keyframes prev-unselected-to-checked{0%{width:0}}:where(:hover) .outline{border-color:var(--md-checkbox-hover-outline-color,var(--md-sys-color-on-surface,#1d1b20));border-width:var(--md-checkbox-hover-outline-width,2px)}:where(:hover) .background{background:var(--md-checkbox-selected-hover-container-color,var(--md-sys-color-primary,#6750a4))}:where(:hover) .icon{fill:var(--md-checkbox-selected-hover-icon-color,var(--md-sys-color-on-primary,#fff))}:where(:focus-within) .outline{border-color:var(--md-checkbox-focus-outline-color,var(--md-sys-color-on-surface,#1d1b20));border-width:var(--md-checkbox-focus-outline-width,2px)}:where(:focus-within) .background{background:var(--md-checkbox-selected-focus-container-color,var(--md-sys-color-primary,#6750a4))}:where(:focus-within) .icon{fill:var(--md-checkbox-selected-focus-icon-color,var(--md-sys-color-on-primary,#fff))}:where(:active) .outline{border-color:var(--md-checkbox-pressed-outline-color,var(--md-sys-color-on-surface,#1d1b20));border-width:var(--md-checkbox-pressed-outline-width,2px)}:where(:active) .background{background:var(--md-checkbox-selected-pressed-container-color,var(--md-sys-color-primary,#6750a4))}:where(:active) .icon{fill:var(--md-checkbox-selected-pressed-icon-color,var(--md-sys-color-on-primary,#fff))}:where(.disabled,.prev-disabled) :is(.background,.icon,.mark){animation-duration:0s;transition-duration:0s}:where(.disabled) .outline{border-color:var(--md-checkbox-disabled-outline-color,var(--md-sys-color-on-surface,#1d1b20));border-width:var(--md-checkbox-disabled-outline-width,2px);opacity:var(--md-checkbox-disabled-container-opacity,.38)}:where(.selected.disabled) .outline{visibility:hidden}:where(.selected.disabled) .background{background:var(--md-checkbox-selected-disabled-container-color,var(--md-sys-color-on-surface,#1d1b20));opacity:var(--md-checkbox-selected-disabled-container-opacity,.38)}:where(.disabled) .icon{fill:var(--md-checkbox-selected-disabled-icon-color,var(--md-sys-color-surface,#fef7ff))}@media (forced-colors:active){.background{background-color:CanvasText}.selected.disabled .background{background-color:GrayText;opacity:1}.outline{border-color:CanvasText}.disabled .outline{border-color:GrayText;opacity:1}.icon{fill:Canvas}}\n`;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Disconnectable, Part} from './lit-html.js';\n\nexport {\n  AttributePart,\n  BooleanAttributePart,\n  ChildPart,\n  ElementPart,\n  EventPart,\n  Part,\n  PropertyPart,\n} from './lit-html.js';\n\nexport interface DirectiveClass {\n  new (part: PartInfo): Directive;\n}\n\n/**\n * This utility type extracts the signature of a directive class's render()\n * method so we can use it for the type of the generated directive function.\n */\nexport type DirectiveParameters<C extends Directive> = Parameters<C['render']>;\n\n/**\n * A generated directive function doesn't evaluate the directive, but just\n * returns a DirectiveResult object that captures the arguments.\n */\nexport interface DirectiveResult<C extends DirectiveClass = DirectiveClass> {\n  /**\n   * This property needs to remain unminified.\n   * @internal */\n  ['_$litDirective$']: C;\n  /** @internal */\n  values: DirectiveParameters<InstanceType<C>>;\n}\n\nexport const PartType = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6,\n} as const;\n\nexport type PartType = (typeof PartType)[keyof typeof PartType];\n\nexport interface ChildPartInfo {\n  readonly type: typeof PartType.CHILD;\n}\n\nexport interface AttributePartInfo {\n  readonly type:\n    | typeof PartType.ATTRIBUTE\n    | typeof PartType.PROPERTY\n    | typeof PartType.BOOLEAN_ATTRIBUTE\n    | typeof PartType.EVENT;\n  readonly strings?: ReadonlyArray<string>;\n  readonly name: string;\n  readonly tagName: string;\n}\n\nexport interface ElementPartInfo {\n  readonly type: typeof PartType.ELEMENT;\n}\n\n/**\n * Information about the part a directive is bound to.\n *\n * This is useful for checking that a directive is attached to a valid part,\n * such as with directive that can only be used on attribute bindings.\n */\nexport type PartInfo = ChildPartInfo | AttributePartInfo | ElementPartInfo;\n\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive =\n  <C extends DirectiveClass>(c: C) =>\n  (...values: DirectiveParameters<InstanceType<C>>): DirectiveResult<C> => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n  });\n\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport abstract class Directive implements Disconnectable {\n  //@internal\n  __part!: Part;\n  //@internal\n  __attributeIndex: number | undefined;\n  //@internal\n  __directive?: Directive;\n\n  //@internal\n  _$parent!: Disconnectable;\n\n  // These will only exist on the AsyncDirective subclass\n  //@internal\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // This property needs to remain unminified.\n  //@internal\n  ['_$notifyDirectiveConnectionChanged']?(isConnected: boolean): void;\n\n  constructor(_partInfo: PartInfo) {}\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  /** @internal */\n  _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    this.__part = part;\n    this._$parent = parent;\n    this.__attributeIndex = attributeIndex;\n  }\n  /** @internal */\n  _$resolve(part: Part, props: Array<unknown>): unknown {\n    return this.update(part, props);\n  }\n\n  abstract render(...props: Array<unknown>): unknown;\n\n  update(_part: Part, props: Array<unknown>): unknown {\n    return this.render(...props);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of class names to truthy values.\n */\nexport interface ClassInfo {\n  readonly [name: string]: string | boolean | number;\n}\n\nclass ClassMapDirective extends Directive {\n  /**\n   * Stores the ClassInfo object applied to a given AttributePart.\n   * Used to unset existing values when a new ClassInfo object is applied.\n   */\n  private _previousClasses?: Set<string>;\n  private _staticClasses?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'class' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        '`classMap()` can only be used in the `class` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(classInfo: ClassInfo) {\n    // Add spaces to ensure separation from static classes\n    return (\n      ' ' +\n      Object.keys(classInfo)\n        .filter((key) => classInfo[key])\n        .join(' ') +\n      ' '\n    );\n  }\n\n  override update(part: AttributePart, [classInfo]: DirectiveParameters<this>) {\n    // Remember dynamic classes on the first render\n    if (this._previousClasses === undefined) {\n      this._previousClasses = new Set();\n      if (part.strings !== undefined) {\n        this._staticClasses = new Set(\n          part.strings\n            .join(' ')\n            .split(/\\s/)\n            .filter((s) => s !== '')\n        );\n      }\n      for (const name in classInfo) {\n        if (classInfo[name] && !this._staticClasses?.has(name)) {\n          this._previousClasses.add(name);\n        }\n      }\n      return this.render(classInfo);\n    }\n\n    const classList = part.element.classList;\n\n    // Remove old classes that no longer apply\n    for (const name of this._previousClasses) {\n      if (!(name in classInfo)) {\n        classList.remove(name);\n        this._previousClasses!.delete(name);\n      }\n    }\n\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n      // We explicitly want a loose truthy check of `value` because it seems\n      // more convenient that '' and 0 are skipped.\n      const value = !!classInfo[name];\n      if (\n        value !== this._previousClasses.has(name) &&\n        !this._staticClasses?.has(name)\n      ) {\n        if (value) {\n          classList.add(name);\n          this._previousClasses.add(name);\n        } else {\n          classList.remove(name);\n          this._previousClasses.delete(name);\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies dynamic CSS classes.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfo` argument and adds\n * the property name to the element's `classList` if the property value is\n * truthy; if the property value is falsey, the property name is removed from\n * the element's `class`.\n *\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\n * truthy.\n *\n * @param classInfo\n */\nexport const classMap = directive(ClassMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport /* COPYBARA: type */ {ClassMapDirective};\n","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for blaze-out/k8-opt/bin/third_party/javascript/material/web/focus/internal/focus-ring-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{animation-delay:0s,calc(var(--md-focus-ring-duration, .6s)*.25);animation-duration:calc(var(--md-focus-ring-duration, .6s)*.25),calc(var(--md-focus-ring-duration, .6s)*.75);animation-timing-function:cubic-bezier(.2,0,0,1);box-sizing:border-box;color:var(--md-focus-ring-color,var(--md-sys-color-secondary,#625b71));display:none;pointer-events:none;position:absolute}:host([visible]){display:flex}:host(:not([inward])){animation-name:outward-grow,outward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));inset:calc(var(--md-focus-ring-outward-offset, 2px)*-1);outline:var(--md-focus-ring-width,3px) solid currentColor}:host([inward]){animation-name:inward-grow,inward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border:var(--md-focus-ring-width,3px) solid currentColor;inset:var(--md-focus-ring-inward-offset,0)}@keyframes outward-grow{0%{outline-width:0}to{outline-width:var(--md-focus-ring-active-width,8px)}}@keyframes outward-shrink{0%{outline-width:var(--md-focus-ring-active-width,8px)}}@keyframes inward-grow{0%{border-width:0}to{border-width:var(--md-focus-ring-active-width,8px)}}@keyframes inward-shrink{0%{border-width:var(--md-focus-ring-active-width,8px)}}@media (prefers-reduced-motion){:host{animation:none}}\n`;\n","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, ReactiveController, ReactiveControllerHost} from 'lit';\n\n/**\n * An element that can be attached to an associated controlling element.\n */\nexport interface Attachable {\n  /**\n   * Reflects the value of the `for` attribute, which is the ID of the element's\n   * associated control.\n   *\n   * Use this when the elements's associated control is not its parent.\n   *\n   * To manually control an element, set its `for` attribute to `\"\"`.\n   *\n   * @example\n   * ```html\n   * <div class=\"container\">\n   *   <md-attachable for=\"interactive\"></md-attachable>\n   *   <button id=\"interactive\">Action</button>\n   * </div>\n   * ```\n   *\n   * @example\n   * ```html\n   * <button class=\"manually-controlled\">\n   *   <md-attachable for=\"\"></md-attachable>\n   * </button>\n   * ```\n   */\n  htmlFor: string | null;\n\n  /**\n   * Gets or sets the element that controls the visibility of the attachable\n   * element. It is one of:\n   *\n   * - The control referenced by the `for` attribute.\n   * - The control provided to `element.attach(control)`\n   * - The element's parent.\n   * - `null` if the element is not controlled.\n   */\n  control: HTMLElement | null;\n\n  /**\n   * Attaches the element to an interactive control.\n   *\n   * @param control The element that controls the attachable element.\n   */\n  attach(control: HTMLElement): void;\n\n  /**\n   * Detaches the element from its current control.\n   */\n  detach(): void;\n}\n\n/**\n * A key to retrieve an `Attachable` element's `AttachableController` from a\n * global `MutationObserver`.\n */\nconst ATTACHABLE_CONTROLLER = Symbol('attachableController');\n\n/**\n * The host of an `AttachableController`. The controller will add itself to\n * the host so it can be retrieved in a global `MutationObserver`.\n */\ninterface AttachableControllerHost extends ReactiveControllerHost, HTMLElement {\n  [ATTACHABLE_CONTROLLER]?: AttachableController;\n}\n\nlet FOR_ATTRIBUTE_OBSERVER: MutationObserver | undefined;\n\nif (!isServer) {\n  /**\n   * A global `MutationObserver` that reacts to `for` attribute changes on\n   * `Attachable` elements. If the `for` attribute changes, the controller will\n   * re-attach to the new referenced element.\n   */\n  FOR_ATTRIBUTE_OBSERVER = new MutationObserver((records) => {\n    for (const record of records) {\n      // When a control's `for` attribute changes, inform its\n      // `AttachableController` to update to a new control.\n      (record.target as AttachableControllerHost)[\n        ATTACHABLE_CONTROLLER\n      ]?.hostConnected();\n    }\n  });\n}\n\n/**\n * A controller that provides an implementation for `Attachable` elements.\n *\n * @example\n * ```ts\n * class MyElement extends LitElement implements Attachable {\n *   get control() { return this.attachableController.control; }\n *\n *   private readonly attachableController = new AttachableController(\n *     this,\n *     (previousControl, newControl) => {\n *       previousControl?.removeEventListener('click', this.handleClick);\n *       newControl?.addEventListener('click', this.handleClick);\n *     }\n *   );\n *\n *   // Implement remaining `Attachable` properties/methods that call the\n *   // controller's properties/methods.\n * }\n * ```\n */\nexport class AttachableController implements ReactiveController, Attachable {\n  get htmlFor() {\n    return this.host.getAttribute('for');\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    if (htmlFor === null) {\n      this.host.removeAttribute('for');\n    } else {\n      this.host.setAttribute('for', htmlFor);\n    }\n  }\n\n  get control() {\n    if (this.host.hasAttribute('for')) {\n      if (!this.htmlFor || !this.host.isConnected) {\n        return null;\n      }\n\n      return (\n        this.host.getRootNode() as Document | ShadowRoot\n      ).querySelector<HTMLElement>(`#${this.htmlFor}`);\n    }\n\n    return this.currentControl || this.host.parentElement;\n  }\n  set control(control: HTMLElement | null) {\n    if (control) {\n      this.attach(control);\n    } else {\n      this.detach();\n    }\n  }\n\n  private currentControl: HTMLElement | null = null;\n\n  /**\n   * Creates a new controller for an `Attachable` element.\n   *\n   * @param host The `Attachable` element.\n   * @param onControlChange A callback with two parameters for the previous and\n   *     next control. An `Attachable` element may perform setup or teardown\n   *     logic whenever the control changes.\n   */\n  constructor(\n    private readonly host: AttachableControllerHost,\n    private readonly onControlChange: (\n      prev: HTMLElement | null,\n      next: HTMLElement | null,\n    ) => void,\n  ) {\n    host.addController(this);\n    host[ATTACHABLE_CONTROLLER] = this;\n    FOR_ATTRIBUTE_OBSERVER?.observe(host, {attributeFilter: ['for']});\n  }\n\n  attach(control: HTMLElement) {\n    if (control === this.currentControl) {\n      return;\n    }\n\n    this.setCurrentControl(control);\n    // When imperatively attaching, remove the `for` attribute so\n    // that the attached control is used instead of a referenced one.\n    this.host.removeAttribute('for');\n  }\n\n  detach() {\n    this.setCurrentControl(null);\n    // When imperatively detaching, add an empty `for=\"\"` attribute. This will\n    // ensure the control is `null` rather than the `parentElement`.\n    this.host.setAttribute('for', '');\n  }\n\n  /** @private */\n  hostConnected() {\n    this.setCurrentControl(this.control);\n  }\n\n  /** @private */\n  hostDisconnected() {\n    this.setCurrentControl(null);\n  }\n\n  private setCurrentControl(control: HTMLElement | null) {\n    this.onControlChange(this.currentControl, control);\n    this.currentControl = control;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, LitElement, PropertyValues} from 'lit';\nimport {property} from 'lit/decorators';\n\nimport {\n  Attachable,\n  AttachableController,\n} from '../../internal/controller/attachable-controller';\n\n/**\n * Events that the focus ring listens to.\n */\nconst EVENTS = ['focusin', 'focusout', 'pointerdown'];\n\n/**\n * A focus ring component.\n *\n * @fires visibility-changed {Event} Fired whenever `visible` changes.\n */\nexport class FocusRing extends LitElement implements Attachable {\n  /**\n   * Makes the focus ring visible.\n   */\n  @property({type: Boolean, reflect: true}) visible = false;\n\n  /**\n   * Makes the focus ring animate inwards instead of outwards.\n   */\n  @property({type: Boolean, reflect: true}) inward = false;\n\n  get htmlFor() {\n    return this.attachableController.htmlFor;\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    this.attachableController.htmlFor = htmlFor;\n  }\n\n  get control() {\n    return this.attachableController.control;\n  }\n  set control(control: HTMLElement | null) {\n    this.attachableController.control = control;\n  }\n\n  private readonly attachableController = new AttachableController(\n    this,\n    this.onControlChange.bind(this),\n  );\n\n  attach(control: HTMLElement) {\n    this.attachableController.attach(control);\n  }\n\n  detach() {\n    this.attachableController.detach();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  /** @private */\n  handleEvent(event: FocusRingEvent) {\n    if (event[HANDLED_BY_FOCUS_RING]) {\n      // This ensures the focus ring does not activate when multiple focus rings\n      // are used within a single component.\n      return;\n    }\n\n    switch (event.type) {\n      default:\n        return;\n      case 'focusin':\n        this.visible = this.control?.matches(':focus-visible') ?? false;\n        break;\n      case 'focusout':\n      case 'pointerdown':\n        this.visible = false;\n        break;\n    }\n\n    event[HANDLED_BY_FOCUS_RING] = true;\n  }\n\n  private onControlChange(prev: HTMLElement | null, next: HTMLElement | null) {\n    if (isServer) return;\n\n    for (const event of EVENTS) {\n      prev?.removeEventListener(event, this);\n      next?.addEventListener(event, this);\n    }\n  }\n\n  override update(changed: PropertyValues<FocusRing>) {\n    if (changed.has('visible')) {\n      // This logic can be removed once the `:has` selector has been introduced\n      // to Firefox. This is necessary to allow correct submenu styles.\n      this.dispatchEvent(new Event('visibility-changed'));\n    }\n    super.update(changed);\n  }\n}\n\nconst HANDLED_BY_FOCUS_RING = Symbol('handledByFocusRing');\n\ninterface FocusRingEvent extends Event {\n  [HANDLED_BY_FOCUS_RING]: true;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Although these are re-exported from lit-element.js, we add\n// them here to effectively pre-fetch them and avoid the extra\n// waterfall when loading the lit package unbundled\nimport '@lit/reactive-element';\nimport 'lit-html';\n\nexport * from 'lit-element/lit-element.js';\nexport * from 'lit-html/is-server.js';\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators';\n\nimport {FocusRing} from './internal/focus-ring';\nimport {styles} from './internal/focus-ring-styles';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-focus-ring': MdFocusRing;\n  }\n}\n\n/**\n * TODO(b/267336424): add docs\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-focus-ring')\nexport class MdFocusRing extends FocusRing {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Accessibility Object Model reflective aria property name types.\n */\nexport type ARIAProperty = keyof ARIAMixin;\n\n/**\n * Accessibility Object Model reflective aria properties.\n */\nexport const ARIA_PROPERTIES: ARIAProperty[] = [\n  'role',\n  'ariaAtomic',\n  'ariaAutoComplete',\n  'ariaBusy',\n  'ariaChecked',\n  'ariaColCount',\n  'ariaColIndex',\n  'ariaColSpan',\n  'ariaCurrent',\n  'ariaDisabled',\n  'ariaExpanded',\n  'ariaHasPopup',\n  'ariaHidden',\n  'ariaInvalid',\n  'ariaKeyShortcuts',\n  'ariaLabel',\n  'ariaLevel',\n  'ariaLive',\n  'ariaModal',\n  'ariaMultiLine',\n  'ariaMultiSelectable',\n  'ariaOrientation',\n  'ariaPlaceholder',\n  'ariaPosInSet',\n  'ariaPressed',\n  'ariaReadOnly',\n  'ariaRequired',\n  'ariaRoleDescription',\n  'ariaRowCount',\n  'ariaRowIndex',\n  'ariaRowSpan',\n  'ariaSelected',\n  'ariaSetSize',\n  'ariaSort',\n  'ariaValueMax',\n  'ariaValueMin',\n  'ariaValueNow',\n  'ariaValueText',\n];\n\n/**\n * Accessibility Object Model aria attribute name types.\n */\nexport type ARIAAttribute = ARIAPropertyToAttribute<ARIAProperty>;\n\n/**\n * Accessibility Object Model aria attributes.\n */\nexport const ARIA_ATTRIBUTES = ARIA_PROPERTIES.map(ariaPropertyToAttribute);\n\n/**\n * Checks if an attribute is one of the AOM aria attributes.\n *\n * @example\n * isAriaAttribute('aria-label'); // true\n *\n * @param attribute The attribute to check.\n * @return True if the attribute is an aria attribute, or false if not.\n */\nexport function isAriaAttribute(attribute: string): attribute is ARIAAttribute {\n  return attribute.startsWith('aria-') || attribute === 'role';\n}\n\n/**\n * Converts an AOM aria property into its corresponding attribute.\n *\n * @example\n * ariaPropertyToAttribute('ariaLabel'); // 'aria-label'\n *\n * @param property The aria property.\n * @return The aria attribute.\n */\nexport function ariaPropertyToAttribute<K extends ARIAProperty>(property: K) {\n  return (\n    property\n      .replace('aria', 'aria-')\n      // IDREF attributes also include an \"Element\" or \"Elements\" suffix\n      .replace(/Elements?/g, '')\n      .toLowerCase() as ARIAPropertyToAttribute<K>\n  );\n}\n\n// Converts an `ariaFoo` string type to an `aria-foo` string type.\ntype ARIAPropertyToAttribute<K extends string> =\n  K extends `aria${infer Suffix}Element${infer OptS}`\n    ? `aria-${Lowercase<Suffix>}`\n    : K extends `aria${infer Suffix}`\n      ? `aria-${Lowercase<Suffix>}`\n      : K;\n\n/**\n * An extension of `ARIAMixin` that enforces strict value types for aria\n * properties.\n *\n * This is needed for correct typing in render functions with lit analyzer.\n *\n * @example\n * render() {\n *   const {ariaLabel} = this as ARIAMixinStrict;\n *   return html`\n *     <button aria-label=${ariaLabel || nothing}>\n *       <slot></slot>\n *     </button>\n *   `;\n * }\n */\nexport interface ARIAMixinStrict extends ARIAMixin {\n  ariaAtomic: 'true' | 'false' | null;\n  ariaAutoComplete: 'none' | 'inline' | 'list' | 'both' | null;\n  ariaBusy: 'true' | 'false' | null;\n  ariaChecked: 'true' | 'false' | null;\n  ariaColCount: `${number}` | null;\n  ariaColIndex: `${number}` | null;\n  ariaColSpan: `${number}` | null;\n  ariaCurrent:\n    | 'page'\n    | 'step'\n    | 'location'\n    | 'date'\n    | 'time'\n    | 'true'\n    | 'false'\n    | null;\n  ariaDisabled: 'true' | 'false' | null;\n  ariaExpanded: 'true' | 'false' | null;\n  ariaHasPopup:\n    | 'false'\n    | 'true'\n    | 'menu'\n    | 'listbox'\n    | 'tree'\n    | 'grid'\n    | 'dialog'\n    | null;\n  ariaHidden: 'true' | 'false' | null;\n  ariaInvalid: 'true' | 'false' | null;\n  ariaKeyShortcuts: string | null;\n  ariaLabel: string | null;\n  ariaLevel: `${number}` | null;\n  ariaLive: 'assertive' | 'off' | 'polite' | null;\n  ariaModal: 'true' | 'false' | null;\n  ariaMultiLine: 'true' | 'false' | null;\n  ariaMultiSelectable: 'true' | 'false' | null;\n  ariaOrientation: 'horizontal' | 'vertical' | 'undefined' | null;\n  ariaPlaceholder: string | null;\n  ariaPosInSet: `${number}` | null;\n  ariaPressed: 'true' | 'false' | null;\n  ariaReadOnly: 'true' | 'false' | null;\n  ariaRequired: 'true' | 'false' | null;\n  ariaRoleDescription: string | null;\n  ariaRowCount: `${number}` | null;\n  ariaRowIndex: `${number}` | null;\n  ariaRowSpan: `${number}` | null;\n  ariaSelected: 'true' | 'false' | null;\n  ariaSetSize: `${number}` | null;\n  ariaSort: 'ascending' | 'descending' | 'none' | 'other' | null;\n  ariaValueMax: `${number}` | null;\n  ariaValueMin: `${number}` | null;\n  ariaValueNow: `${number}` | null;\n  ariaValueText: string | null;\n  role: ARIARole | null;\n}\n\n/**\n * Valid values for `role`.\n */\nexport type ARIARole =\n  | 'alert'\n  | 'alertdialog'\n  | 'button'\n  | 'checkbox'\n  | 'dialog'\n  | 'gridcell'\n  | 'link'\n  | 'log'\n  | 'marquee'\n  | 'menuitem'\n  | 'menuitemcheckbox'\n  | 'menuitemradio'\n  | 'option'\n  | 'progressbar'\n  | 'radio'\n  | 'scrollbar'\n  | 'searchbox'\n  | 'slider'\n  | 'spinbutton'\n  | 'status'\n  | 'switch'\n  | 'tab'\n  | 'tabpanel'\n  | 'textbox'\n  | 'timer'\n  | 'tooltip'\n  | 'treeitem'\n  | 'combobox'\n  | 'grid'\n  | 'listbox'\n  | 'menu'\n  | 'menubar'\n  | 'radiogroup'\n  | 'tablist'\n  | 'tree'\n  | 'treegrid'\n  | 'application'\n  | 'article'\n  | 'cell'\n  | 'columnheader'\n  | 'definition'\n  | 'directory'\n  | 'document'\n  | 'feed'\n  | 'figure'\n  | 'group'\n  | 'heading'\n  | 'img'\n  | 'list'\n  | 'listitem'\n  | 'math'\n  | 'none'\n  | 'note'\n  | 'presentation'\n  | 'region'\n  | 'row'\n  | 'rowgroup'\n  | 'rowheader'\n  | 'separator'\n  | 'table'\n  | 'term'\n  | 'text'\n  | 'toolbar'\n  | 'banner'\n  | 'complementary'\n  | 'contentinfo'\n  | 'form'\n  | 'main'\n  | 'navigation'\n  | 'region'\n  | 'search'\n  | 'doc-abstract'\n  | 'doc-acknowledgments'\n  | 'doc-afterword'\n  | 'doc-appendix'\n  | 'doc-backlink'\n  | 'doc-biblioentry'\n  | 'doc-bibliography'\n  | 'doc-biblioref'\n  | 'doc-chapter'\n  | 'doc-colophon'\n  | 'doc-conclusion'\n  | 'doc-cover'\n  | 'doc-credit'\n  | 'doc-credits'\n  | 'doc-dedication'\n  | 'doc-endnote'\n  | 'doc-endnotes'\n  | 'doc-epigraph'\n  | 'doc-epilogue'\n  | 'doc-errata'\n  | 'doc-example'\n  | 'doc-footnote'\n  | 'doc-foreword'\n  | 'doc-glossary'\n  | 'doc-glossref'\n  | 'doc-index'\n  | 'doc-introduction'\n  | 'doc-noteref'\n  | 'doc-notice'\n  | 'doc-pagebreak'\n  | 'doc-pagelist'\n  | 'doc-part'\n  | 'doc-preface'\n  | 'doc-prologue'\n  | 'doc-pullquote'\n  | 'doc-qna'\n  | 'doc-subtitle'\n  | 'doc-tip'\n  | 'doc-toc';\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Dispatches a click event to the given element that triggers a native action,\n * but is not composed and therefore is not seen outside the element.\n *\n * This is useful for responding to an external click event on the host element\n * that should trigger an internal action like a button click.\n *\n * Note, a helper is provided because setting this up correctly is a bit tricky.\n * In particular, calling `click` on an element creates a composed event, which\n * is not desirable, and a manually dispatched event must specifically be a\n * `MouseEvent` to trigger a native action.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function dispatchActivationClick(element: HTMLElement) {\n  const event = new MouseEvent('click', {bubbles: true});\n  element.dispatchEvent(event);\n  return event;\n}\n\n/**\n * Returns true if the click event should trigger an activation behavior. The\n * behavior is defined by the element and is whatever it should do when\n * clicked.\n *\n * Typically when an element needs to handle a click, the click is generated\n * from within the element and an event listener within the element implements\n * the needed behavior; however, it's possible to fire a click directly\n * at the element that the element should handle. This method helps\n * distinguish these \"external\" clicks.\n *\n * An \"external\" click can be triggered in a number of ways: via a click\n * on an associated label for a form  associated element, calling\n * `element.click()`, or calling\n * `element.dispatchEvent(new MouseEvent('click', ...))`.\n *\n * Also works around Firefox issue\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1804576 by squelching\n * events for a microtask after called.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function isActivationClick(event: Event) {\n  // Event must start at the event target.\n  if (event.currentTarget !== event.target) {\n    return false;\n  }\n  // Event must not be retargeted from shadowRoot.\n  if (event.composedPath()[0] !== event.target) {\n    return false;\n  }\n  // Target must not be disabled; this should only occur for a synthetically\n  // dispatched click.\n  if ((event.target as EventTarget & {disabled: boolean}).disabled) {\n    return false;\n  }\n  // This is an activation if the event should not be squelched.\n  return !squelchEvent(event);\n}\n\n// TODO(https://bugzilla.mozilla.org/show_bug.cgi?id=1804576)\n//  Remove when Firefox bug is addressed.\nfunction squelchEvent(event: Event) {\n  const squelched = isSquelchingEvents;\n  if (squelched) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n  squelchEventsForMicrotask();\n  return squelched;\n}\n\n// Ignore events for one microtask only.\nlet isSquelchingEvents = false;\nasync function squelchEventsForMicrotask() {\n  isSquelchingEvents = true;\n  // Need to pause for just one microtask.\n  // tslint:disable-next-line\n  await null;\n  isSquelchingEvents = false;\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement} from 'lit';\n\nimport {MixinBase, MixinReturn} from './mixin';\n\n/**\n * A unique symbol used for protected access to an instance's\n * `ElementInternals`.\n *\n * @example\n * ```ts\n * class MyElement extends mixinElementInternals(LitElement) {\n *   constructor() {\n *     super();\n *     this[internals].role = 'button';\n *   }\n * }\n * ```\n */\nexport const internals = Symbol('internals');\n\n/**\n * An instance with an `internals` symbol property for the component's\n * `ElementInternals`.\n *\n * Use this when protected access is needed for an instance's `ElementInternals`\n * from other files. A unique symbol is used to access the internals.\n */\nexport interface WithElementInternals {\n  /**\n   * An instance's `ElementInternals`.\n   */\n  [internals]: ElementInternals;\n}\n\n// Private symbols\nconst privateInternals = Symbol('privateInternals');\n\n/**\n * Mixes in an attached `ElementInternals` instance.\n *\n * This mixin is only needed when other shared code needs access to a\n * component's `ElementInternals`, such as form-associated mixins.\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `WithElementInternals` mixed in.\n */\nexport function mixinElementInternals<T extends MixinBase<LitElement>>(\n  base: T,\n): MixinReturn<T, WithElementInternals> {\n  abstract class WithElementInternalsElement\n    extends base\n    implements WithElementInternals\n  {\n    get [internals]() {\n      // Create internals in getter so that it can be used in methods called on\n      // construction in `ReactiveElement`, such as `requestUpdate()`.\n      if (!this[privateInternals]) {\n        // Cast needed for closure\n        this[privateInternals] = (this as HTMLElement).attachInternals();\n      }\n\n      return this[privateInternals];\n    }\n\n    [privateInternals]?: ElementInternals;\n  }\n\n  return WithElementInternalsElement;\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, LitElement, PropertyDeclaration, PropertyValues} from 'lit';\n\nimport {internals, WithElementInternals} from './element-internals';\nimport {FormAssociated} from './form-associated';\nimport {MixinBase, MixinReturn} from './mixin';\nimport {Validator} from './validators/validator';\n\n/**\n * A form associated element that provides constraint validation APIs.\n *\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation\n */\nexport interface ConstraintValidation extends FormAssociated {\n  /**\n   * Returns a ValidityState object that represents the validity states of the\n   * element.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/ValidityState\n   */\n  readonly validity: ValidityState;\n\n  /**\n   * Returns a validation error message or an empty string if the element is\n   * valid.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/ElementInternals/validationMessage\n   */\n  readonly validationMessage: string;\n\n  /**\n   * Returns whether an element will successfully validate based on forms\n   * validation rules and constraints.\n   *\n   * Disabled and readonly elements will not validate.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/ElementInternals/willValidate\n   */\n  readonly willValidate: boolean;\n\n  /**\n   * Checks the element's constraint validation and returns true if the element\n   * is valid or false if not.\n   *\n   * If invalid, this method will dispatch an `invalid` event.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/ElementInternals/checkValidity\n   *\n   * @return true if the element is valid, or false if not.\n   */\n  checkValidity(): boolean;\n\n  /**\n   * Checks the element's constraint validation and returns true if the element\n   * is valid or false if not.\n   *\n   * If invalid, this method will dispatch a cancelable `invalid` event. If not\n   * canceled, a the current `validationMessage` will be reported to the user.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/ElementInternals/reportValidity\n   *\n   * @return true if the element is valid, or false if not.\n   */\n  reportValidity(): boolean;\n\n  /**\n   * Sets the element's constraint validation error message. When set to a\n   * non-empty string, `validity.customError` will be true and\n   * `validationMessage` will display the provided error.\n   *\n   * Use this method to customize error messages reported.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setCustomValidity\n   *\n   * @param error The error message to display, or an empty string.\n   */\n  setCustomValidity(error: string): void;\n\n  /**\n   * Creates and returns a `Validator` that is used to compute and cache\n   * validity for the element.\n   *\n   * A validator that caches validity is important since constraint validation\n   * must be computed synchronously and frequently in response to constraint\n   * validation property changes.\n   */\n  [createValidator](): Validator<unknown>;\n\n  /**\n   * Returns shadow DOM child that is used as the anchor for the platform\n   * `reportValidity()` popup. This is often the root element or the inner\n   * focus-delegated element.\n   */\n  [getValidityAnchor](): HTMLElement | null;\n}\n\n/**\n * A symbol property used to create a constraint validation `Validator`.\n * Required for all `mixinConstraintValidation()` elements.\n */\nexport const createValidator = Symbol('createValidator');\n\n/**\n * A symbol property used to return an anchor for constraint validation popups.\n * Required for all `mixinConstraintValidation()` elements.\n */\nexport const getValidityAnchor = Symbol('getValidityAnchor');\n\n// Private symbol members, used to avoid name clashing.\nconst privateValidator = Symbol('privateValidator');\nconst privateSyncValidity = Symbol('privateSyncValidity');\nconst privateCustomValidationMessage = Symbol('privateCustomValidationMessage');\n\n/**\n * Mixes in constraint validation APIs for an element.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation\n * for more details.\n *\n * Implementations must provide a validator to cache and compute its validity,\n * along with a shadow root element to anchor validation popups to.\n *\n * @example\n * ```ts\n * const baseClass = mixinConstraintValidation(\n *   mixinFormAssociated(mixinElementInternals(LitElement))\n * );\n *\n * class MyCheckbox extends baseClass {\n *   \\@property({type: Boolean}) checked = false;\n *   \\@property({type: Boolean}) required = false;\n *\n *   [createValidator]() {\n *     return new CheckboxValidator(() => this);\n *   }\n *\n *   [getValidityAnchor]() {\n *     return this.renderRoot.querySelector('.root');\n *   }\n * }\n * ```\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `ConstraintValidation` mixed in.\n */\nexport function mixinConstraintValidation<\n  T extends MixinBase<LitElement & FormAssociated & WithElementInternals>,\n>(base: T): MixinReturn<T, ConstraintValidation> {\n  abstract class ConstraintValidationElement\n    extends base\n    implements ConstraintValidation\n  {\n    get validity() {\n      this[privateSyncValidity]();\n      return this[internals].validity;\n    }\n\n    get validationMessage() {\n      this[privateSyncValidity]();\n      return this[internals].validationMessage;\n    }\n\n    get willValidate() {\n      this[privateSyncValidity]();\n      return this[internals].willValidate;\n    }\n\n    /**\n     * A validator instance created from `[createValidator]()`.\n     */\n    [privateValidator]?: Validator<unknown>;\n\n    /**\n     * Needed for Safari, see https://bugs.webkit.org/show_bug.cgi?id=261432\n     * Replace with this[internals].validity.customError when resolved.\n     */\n    [privateCustomValidationMessage] = '';\n\n    checkValidity() {\n      this[privateSyncValidity]();\n      return this[internals].checkValidity();\n    }\n\n    reportValidity() {\n      this[privateSyncValidity]();\n      return this[internals].reportValidity();\n    }\n\n    setCustomValidity(error: string) {\n      this[privateCustomValidationMessage] = error;\n      this[privateSyncValidity]();\n    }\n\n    override requestUpdate(\n      name?: PropertyKey,\n      oldValue?: unknown,\n      options?: PropertyDeclaration,\n    ) {\n      super.requestUpdate(name, oldValue, options);\n      this[privateSyncValidity]();\n    }\n\n    override firstUpdated(changed: PropertyValues) {\n      super.firstUpdated(changed);\n      // Sync the validity again when the element first renders, since the\n      // validity anchor is now available.\n      //\n      // Elements that `delegatesFocus: true` to an `<input>` will throw an\n      // error in Chrome and Safari when a form tries to submit or call\n      // `form.reportValidity()`:\n      // \"An invalid form control with name='' is not focusable\"\n      //\n      // The validity anchor MUST be provided in `internals.setValidity()` and\n      // MUST be the `<input>` element rendered.\n      //\n      // See https://lit.dev/playground/#gist=6c26e418e0010f7a5aac15005cde8bde\n      // for a reproduction.\n      this[privateSyncValidity]();\n    }\n\n    [privateSyncValidity]() {\n      if (isServer) {\n        return;\n      }\n\n      if (!this[privateValidator]) {\n        this[privateValidator] = this[createValidator]();\n      }\n\n      const {validity, validationMessage: nonCustomValidationMessage} =\n        this[privateValidator].getValidity();\n\n      const customError = !!this[privateCustomValidationMessage];\n      const validationMessage =\n        this[privateCustomValidationMessage] || nonCustomValidationMessage;\n\n      this[internals].setValidity(\n        {...validity, customError},\n        validationMessage,\n        this[getValidityAnchor]() ?? undefined,\n      );\n    }\n\n    [createValidator](): Validator<unknown> {\n      throw new Error('Implement [createValidator]');\n    }\n\n    [getValidityAnchor](): HTMLElement | null {\n      throw new Error('Implement [getValidityAnchor]');\n    }\n  }\n\n  return ConstraintValidationElement;\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * A class that computes and caches `ValidityStateFlags` for a component with\n * a given `State` interface.\n *\n * Cached performance before computing validity is important since constraint\n * validation must be checked frequently and synchronously when properties\n * change.\n *\n * @template State The expected interface of properties relevant to constraint\n *     validation.\n */\nexport abstract class Validator<State> {\n  /**\n   * The previous state, used to determine if state changed and validation needs\n   * to be re-computed.\n   */\n  private prevState?: State;\n\n  /**\n   * The current validity state and message. This is cached and returns if\n   * constraint validation state does not change.\n   */\n  private currentValidity: ValidityAndMessage = {\n    validity: {},\n    validationMessage: '',\n  };\n\n  /**\n   * Creates a new validator.\n   *\n   * @param getCurrentState A callback that returns the current state of\n   *     constraint validation-related properties.\n   */\n  constructor(private readonly getCurrentState: () => State) {}\n\n  /**\n   * Returns the current `ValidityStateFlags` and validation message for the\n   * validator.\n   *\n   * If the constraint validation state has not changed, this will return a\n   * cached result. This is important since `getValidity()` can be called\n   * frequently in response to synchronous property changes.\n   *\n   * @return The current validity and validation message.\n   */\n  getValidity(): ValidityAndMessage {\n    const state = this.getCurrentState();\n    const hasStateChanged =\n      !this.prevState || !this.equals(this.prevState, state);\n    if (!hasStateChanged) {\n      return this.currentValidity;\n    }\n\n    const {validity, validationMessage} = this.computeValidity(state);\n    this.prevState = this.copy(state);\n    this.currentValidity = {\n      validationMessage,\n      validity: {\n        // Change any `ValidityState` instances into `ValidityStateFlags` since\n        // `ValidityState` cannot be easily `{...spread}`.\n        badInput: validity.badInput,\n        customError: validity.customError,\n        patternMismatch: validity.patternMismatch,\n        rangeOverflow: validity.rangeOverflow,\n        rangeUnderflow: validity.rangeUnderflow,\n        stepMismatch: validity.stepMismatch,\n        tooLong: validity.tooLong,\n        tooShort: validity.tooShort,\n        typeMismatch: validity.typeMismatch,\n        valueMissing: validity.valueMissing,\n      },\n    };\n\n    return this.currentValidity;\n  }\n\n  /**\n   * Computes the `ValidityStateFlags` and validation message for a given set\n   * of constraint validation properties.\n   *\n   * Implementations can use platform elements like `<input>` and `<select>` to\n   * sync state and compute validation along with i18n'd messages. This function\n   * may be expensive, and is only called when state changes.\n   *\n   * @param state The new state of constraint validation properties.\n   * @return An object containing a `validity` property with\n   *     `ValidityStateFlags` and a `validationMessage` property.\n   */\n  protected abstract computeValidity(state: State): ValidityAndMessage;\n\n  /**\n   * Checks if two states are equal. This is used to check against cached state\n   * to see if validity needs to be re-computed.\n   *\n   * @param prev The previous state.\n   * @param next The next state.\n   * @return True if the states are equal, or false if not.\n   */\n  protected abstract equals(prev: State, next: State): boolean;\n\n  /**\n   * Creates a copy of a state. This is used to cache state and check if it\n   * changes.\n   *\n   * Note: do NOT spread the {...state} to copy it. The actual state object is\n   * a web component, and trying to spread its getter/setter properties won't\n   * work.\n   *\n   * @param state The state to copy.\n   * @return A copy of the state.\n   */\n  protected abstract copy(state: State): State;\n}\n\n/**\n * An object containing `ValidityStateFlags` and a corresponding validation\n * message.\n */\nexport interface ValidityAndMessage {\n  /**\n   * Validity flags.\n   */\n  validity: ValidityStateFlags;\n\n  /**\n   * The validation message for the associated flags. It may not be an empty\n   * string if any of the validity flags are `true`.\n   */\n  validationMessage: string;\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement, PropertyDeclaration} from 'lit';\nimport {property} from 'lit/decorators';\n\nimport {internals, WithElementInternals} from './element-internals';\nimport {MixinBase, MixinReturn} from './mixin';\n\n/**\n * A form-associated element.\n *\n * IMPORTANT: Requires declares for lit-analyzer\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n * class MyControl extends base {\n *   // Writable mixin properties for lit-html binding, needed for lit-analyzer\n *   declare disabled: boolean;\n *   declare name: string;\n * }\n * ```\n */\nexport interface FormAssociated {\n  /**\n   * The associated form element with which this element's value will submit.\n   */\n  readonly form: HTMLFormElement | null;\n\n  /**\n   * The labels this element is associated with.\n   */\n  readonly labels: NodeList;\n\n  /**\n   * The HTML name to use in form submission.\n   */\n  name: string;\n\n  /**\n   * Whether or not the element is disabled.\n   */\n  disabled: boolean;\n\n  /**\n   * Gets the current form value of a component.\n   *\n   * @return The current form value.\n   */\n  [getFormValue](): FormValue | null;\n\n  /**\n   * Gets the current form state of a component. Defaults to the component's\n   * `[formValue]`.\n   *\n   * Use this when the state of an element is different from its value, such as\n   * checkboxes (internal boolean state and a user string value).\n   *\n   * @return The current form state, defaults to the form value.\n   */\n  [getFormState](): FormValue | null;\n\n  /**\n   * A callback for when a form component should be disabled or enabled. This\n   * can be called in a variety of situations, such as disabled `<fieldset>`s.\n   *\n   * @param disabled Whether or not the form control should be disabled.\n   */\n  formDisabledCallback(disabled: boolean): void;\n\n  /**\n   * A callback for when the form requests to reset its value. Typically, the\n   * default value that is reset is represented in the attribute of an element.\n   *\n   * This means the attribute used for the value should not update as the value\n   * changes. For example, a checkbox should not change its default `checked`\n   * attribute when selected. Ensure form values do not reflect.\n   */\n  formResetCallback(): void;\n\n  /**\n   * A callback for when the form restores the state of a component. For\n   * example, when a page is reloaded or forms are autofilled.\n   *\n   * @param state The state to restore, or null to reset the form control's\n   *     value.\n   * @param reason The reason state was restored, either `'restore'` or\n   *   `'autocomplete'`.\n   */\n  formStateRestoreCallback(\n    state: FormRestoreState | null,\n    reason: FormRestoreReason,\n  ): void;\n\n  /**\n   * An optional callback for when the associated form changes.\n   *\n   * @param form The new associated form, or `null` if there is none.\n   */\n  formAssociatedCallback?(form: HTMLFormElement | null): void;\n}\n\n/**\n * The constructor of a `FormAssociated` element.\n */\nexport interface FormAssociatedConstructor {\n  /**\n   * Indicates that an element is participating in form association.\n   */\n  readonly formAssociated: true;\n}\n\n/**\n * A symbol property to retrieve the form value for an element.\n */\nexport const getFormValue = Symbol('getFormValue');\n\n/**\n * A symbol property to retrieve the form state for an element.\n */\nexport const getFormState = Symbol('getFormState');\n\n/**\n * Mixes in form-associated behavior for a class. This allows an element to add\n * values to `<form>` elements.\n *\n * Implementing classes should provide a `[formValue]` to return the current\n * value of the element, as well as reset and restore callbacks.\n *\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n *\n * class MyControl extends base {\n *   \\@property()\n *   value = '';\n *\n *   override [getFormValue]() {\n *     return this.value;\n *   }\n *\n *   override formResetCallback() {\n *     const defaultValue = this.getAttribute('value');\n *     this.value = defaultValue;\n *   }\n *\n *   override formStateRestoreCallback(state: string) {\n *     this.value = state;\n *   }\n * }\n * ```\n *\n * Elements may optionally provide a `[formState]` if their values do not\n * represent the state of the component.\n *\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n *\n * class MyCheckbox extends base {\n *   \\@property()\n *   value = 'on';\n *\n *   \\@property({type: Boolean})\n *   checked = false;\n *\n *   override [getFormValue]() {\n *     return this.checked ? this.value : null;\n *   }\n *\n *   override [getFormState]() {\n *     return String(this.checked);\n *   }\n *\n *   override formResetCallback() {\n *     const defaultValue = this.hasAttribute('checked');\n *     this.checked = defaultValue;\n *   }\n *\n *   override formStateRestoreCallback(state: string) {\n *     this.checked = Boolean(state);\n *   }\n * }\n * ```\n *\n * IMPORTANT: Requires declares for lit-analyzer\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n * class MyControl extends base {\n *   // Writable mixin properties for lit-html binding, needed for lit-analyzer\n *   declare disabled: boolean;\n *   declare name: string;\n * }\n * ```\n *\n * @param base The class to mix functionality into. The base class must use\n *     `mixinElementInternals()`.\n * @return The provided class with `FormAssociated` mixed in.\n */\nexport function mixinFormAssociated<\n  T extends MixinBase<LitElement & WithElementInternals>,\n>(base: T): MixinReturn<T & FormAssociatedConstructor, FormAssociated> {\n  abstract class FormAssociatedElement extends base implements FormAssociated {\n    /** @nocollapse */\n    static readonly formAssociated = true;\n\n    get form() {\n      return this[internals].form;\n    }\n\n    get labels() {\n      return this[internals].labels;\n    }\n\n    // Use @property for the `name` and `disabled` properties to add them to the\n    // `observedAttributes` array and trigger `attributeChangedCallback()`.\n    //\n    // We don't use Lit's default getter/setter (`noAccessor: true`) because\n    // the attributes need to be updated synchronously to work with synchronous\n    // form APIs, and Lit updates attributes async by default.\n    @property({noAccessor: true})\n    get name() {\n      return this.getAttribute('name') ?? '';\n    }\n    set name(name: string) {\n      // Note: setting name to null or empty does not remove the attribute.\n      this.setAttribute('name', name);\n      // We don't need to call `requestUpdate()` since it's called synchronously\n      // in `attributeChangedCallback()`.\n    }\n\n    @property({type: Boolean, noAccessor: true})\n    get disabled() {\n      return this.hasAttribute('disabled');\n    }\n    set disabled(disabled: boolean) {\n      this.toggleAttribute('disabled', disabled);\n      // We don't need to call `requestUpdate()` since it's called synchronously\n      // in `attributeChangedCallback()`.\n    }\n\n    override attributeChangedCallback(\n      name: string,\n      old: string | null,\n      value: string | null,\n    ) {\n      // Manually `requestUpdate()` for `name` and `disabled` when their\n      // attribute or property changes.\n      // The properties update their attributes, so this callback is invoked\n      // immediately when the properties are set. We call `requestUpdate()` here\n      // instead of letting Lit set the properties from the attribute change.\n      // That would cause the properties to re-set the attribute and invoke this\n      // callback again in a loop. This leads to stale state when Lit tries to\n      // determine if a property changed or not.\n      if (name === 'name' || name === 'disabled') {\n        // Disabled's value is only false if the attribute is missing and null.\n        const oldValue = name === 'disabled' ? old !== null : old;\n        // Trigger a lit update when the attribute changes.\n        this.requestUpdate(name, oldValue);\n        return;\n      }\n\n      super.attributeChangedCallback(name, old, value);\n    }\n\n    override requestUpdate(\n      name?: PropertyKey,\n      oldValue?: unknown,\n      options?: PropertyDeclaration,\n    ) {\n      super.requestUpdate(name, oldValue, options);\n      // If any properties change, update the form value, which may have changed\n      // as well.\n      // Update the form value synchronously in `requestUpdate()` rather than\n      // `update()` or `updated()`, which are async. This is necessary to ensure\n      // that form data is updated in time for synchronous event listeners.\n      this[internals].setFormValue(this[getFormValue](), this[getFormState]());\n    }\n\n    [getFormValue](): FormValue | null {\n      // Closure does not allow abstract symbol members, so a default\n      // implementation is needed.\n      throw new Error('Implement [getFormValue]');\n    }\n\n    [getFormState](): FormValue | null {\n      return this[getFormValue]();\n    }\n\n    formDisabledCallback(disabled: boolean) {\n      this.disabled = disabled;\n    }\n\n    abstract formResetCallback(): void;\n\n    abstract formStateRestoreCallback(\n      state: FormRestoreState | null,\n      reason: FormRestoreReason,\n    ): void;\n  }\n\n  return FormAssociatedElement;\n}\n\n/**\n * A value that can be provided for form submission and state.\n */\nexport type FormValue = File | string | FormData;\n\n/**\n * A value to be restored for a component's form value. If a component's form\n * state is a `FormData` object, its entry list of name and values will be\n * provided.\n */\nexport type FormRestoreState =\n  | File\n  | string\n  | Array<[string, FormDataEntryValue]>;\n\n/**\n * The reason a form component is being restored for, either `'restore'` for\n * browser restoration or `'autocomplete'` for restoring user values.\n */\nexport type FormRestoreReason = 'restore' | 'autocomplete';\n","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Validator} from './validator';\n\n/**\n * Constraint validation properties for a checkbox.\n */\nexport interface CheckboxState {\n  /**\n   * Whether the checkbox is checked.\n   */\n  readonly checked: boolean;\n\n  /**\n   * Whether the checkbox is required.\n   */\n  readonly required: boolean;\n}\n\n/**\n * A validator that provides constraint validation that emulates\n * `<input type=\"checkbox\">` validation.\n */\nexport class CheckboxValidator extends Validator<CheckboxState> {\n  private checkboxControl?: HTMLInputElement;\n\n  protected override computeValidity(state: CheckboxState) {\n    if (!this.checkboxControl) {\n      // Lazily create the platform input\n      this.checkboxControl = document.createElement('input');\n      this.checkboxControl.type = 'checkbox';\n    }\n\n    this.checkboxControl.checked = state.checked;\n    this.checkboxControl.required = state.required;\n    return {\n      validity: this.checkboxControl.validity,\n      validationMessage: this.checkboxControl.validationMessage,\n    };\n  }\n\n  protected override equals(prev: CheckboxState, next: CheckboxState) {\n    return prev.checked === next.checked && prev.required === next.required;\n  }\n\n  protected override copy({checked, required}: CheckboxState) {\n    return {checked, required};\n  }\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for blaze-out/k8-opt/bin/third_party/javascript/material/web/ripple/internal/ripple-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host {\n  display: flex;\n  margin: auto;\n  pointer-events: none;\n}\n\n:host([disabled]) {\n  display: none;\n}\n\n@media (forced-colors: active) {\n  :host {\n    display: none;\n  }\n}\n:host,\n.surface {\n  border-radius: inherit;\n  position: absolute;\n  inset: 0;\n  overflow: hidden;\n}\n\n.surface {\n  -webkit-tap-highlight-color: transparent;\n}\n.surface::before, .surface::after {\n  content: \"\";\n  opacity: 0;\n  position: absolute;\n}\n.surface::before {\n  background-color: var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));\n  inset: 0;\n  transition: opacity 15ms linear, background-color 15ms linear;\n}\n.surface::after {\n  background: radial-gradient(closest-side, var(--md-ripple-pressed-color, var(--md-sys-color-on-surface, #1d1b20)) max(100% - 70px, 65%), transparent 100%);\n  transform-origin: center center;\n  transition: opacity 375ms linear;\n}\n\n.hovered::before {\n  background-color: var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));\n  opacity: var(--md-ripple-hover-opacity, 0.08);\n}\n\n.pressed::after {\n  opacity: var(--md-ripple-pressed-opacity, 0.12);\n  transition-duration: 105ms;\n}\n\n`;\n","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, isServer, LitElement, PropertyValues} from 'lit';\nimport {property, query, state} from 'lit/decorators';\nimport {classMap} from 'lit/directives/class-map';\n\nimport {\n  Attachable,\n  AttachableController,\n} from '../../internal/controller/attachable-controller';\nimport {EASING} from '../../internal/motion/animation';\n\nconst PRESS_GROW_MS = 450;\nconst MINIMUM_PRESS_MS = 225;\nconst INITIAL_ORIGIN_SCALE = 0.2;\nconst PADDING = 10;\nconst SOFT_EDGE_MINIMUM_SIZE = 75;\nconst SOFT_EDGE_CONTAINER_RATIO = 0.35;\nconst PRESS_PSEUDO = '::after';\nconst ANIMATION_FILL = 'forwards';\n\n/**\n * Interaction states for the ripple.\n *\n * On Touch:\n *  - `INACTIVE -> TOUCH_DELAY -> WAITING_FOR_CLICK -> INACTIVE`\n *  - `INACTIVE -> TOUCH_DELAY -> HOLDING -> WAITING_FOR_CLICK -> INACTIVE`\n *\n * On Mouse or Pen:\n *   - `INACTIVE -> WAITING_FOR_CLICK -> INACTIVE`\n */\nenum State {\n  /**\n   * Initial state of the control, no touch in progress.\n   *\n   * Transitions:\n   *   - on touch down: transition to `TOUCH_DELAY`.\n   *   - on mouse down: transition to `WAITING_FOR_CLICK`.\n   */\n  INACTIVE,\n  /**\n   * Touch down has been received, waiting to determine if it's a swipe or\n   * scroll.\n   *\n   * Transitions:\n   *   - on touch up: begin press; transition to `WAITING_FOR_CLICK`.\n   *   - on cancel: transition to `INACTIVE`.\n   *   - after `TOUCH_DELAY_MS`: begin press; transition to `HOLDING`.\n   */\n  TOUCH_DELAY,\n  /**\n   * A touch has been deemed to be a press\n   *\n   * Transitions:\n   *  - on up: transition to `WAITING_FOR_CLICK`.\n   */\n  HOLDING,\n  /**\n   * The user touch has finished, transition into rest state.\n   *\n   * Transitions:\n   *   - on click end press; transition to `INACTIVE`.\n   */\n  WAITING_FOR_CLICK,\n}\n\n/**\n * Events that the ripple listens to.\n */\nconst EVENTS = [\n  'click',\n  'contextmenu',\n  'pointercancel',\n  'pointerdown',\n  'pointerenter',\n  'pointerleave',\n  'pointerup',\n];\n\n/**\n * Delay reacting to touch so that we do not show the ripple for a swipe or\n * scroll interaction.\n */\nconst TOUCH_DELAY_MS = 150;\n\n/**\n * Used to detect if HCM is active. Events do not process during HCM when the\n * ripple is not displayed.\n */\nconst FORCED_COLORS = isServer\n  ? null\n  : window.matchMedia('(forced-colors: active)');\n\n/**\n * A ripple component.\n */\nexport class Ripple extends LitElement implements Attachable {\n  /**\n   * Disables the ripple.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  get htmlFor() {\n    return this.attachableController.htmlFor;\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    this.attachableController.htmlFor = htmlFor;\n  }\n\n  get control() {\n    return this.attachableController.control;\n  }\n  set control(control: HTMLElement | null) {\n    this.attachableController.control = control;\n  }\n\n  @state() private hovered = false;\n  @state() private pressed = false;\n\n  @query('.surface') private readonly mdRoot!: HTMLElement | null;\n  private rippleSize = '';\n  private rippleScale = '';\n  private initialSize = 0;\n  private growAnimation?: Animation;\n  private state = State.INACTIVE;\n  private rippleStartEvent?: PointerEvent;\n  private checkBoundsAfterContextMenu = false;\n  private readonly attachableController = new AttachableController(\n    this,\n    this.onControlChange.bind(this),\n  );\n\n  attach(control: HTMLElement) {\n    this.attachableController.attach(control);\n  }\n\n  detach() {\n    this.attachableController.detach();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  protected override render() {\n    const classes = {\n      'hovered': this.hovered,\n      'pressed': this.pressed,\n    };\n\n    return html`<div class=\"surface ${classMap(classes)}\"></div>`;\n  }\n\n  protected override update(changedProps: PropertyValues<Ripple>) {\n    if (changedProps.has('disabled') && this.disabled) {\n      this.hovered = false;\n      this.pressed = false;\n    }\n    super.update(changedProps);\n  }\n\n  /**\n   * TODO(b/269799771): make private\n   * @private only public for slider\n   */\n  handlePointerenter(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.hovered = true;\n  }\n\n  /**\n   * TODO(b/269799771): make private\n   * @private only public for slider\n   */\n  handlePointerleave(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.hovered = false;\n\n    // release a held mouse or pen press that moves outside the element\n    if (this.state !== State.INACTIVE) {\n      this.endPressAnimation();\n    }\n  }\n\n  private handlePointerup(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    if (this.state === State.HOLDING) {\n      this.state = State.WAITING_FOR_CLICK;\n      return;\n    }\n\n    if (this.state === State.TOUCH_DELAY) {\n      this.state = State.WAITING_FOR_CLICK;\n      this.startPressAnimation(this.rippleStartEvent);\n      return;\n    }\n  }\n\n  private async handlePointerdown(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.rippleStartEvent = event;\n    if (!this.isTouch(event)) {\n      this.state = State.WAITING_FOR_CLICK;\n      this.startPressAnimation(event);\n      return;\n    }\n\n    // after a longpress contextmenu event, an extra `pointerdown` can be\n    // dispatched to the pressed element. Check that the down is within\n    // bounds of the element in this case.\n    if (this.checkBoundsAfterContextMenu && !this.inBounds(event)) {\n      return;\n    }\n\n    this.checkBoundsAfterContextMenu = false;\n\n    // Wait for a hold after touch delay\n    this.state = State.TOUCH_DELAY;\n    await new Promise((resolve) => {\n      setTimeout(resolve, TOUCH_DELAY_MS);\n    });\n\n    if (this.state !== State.TOUCH_DELAY) {\n      return;\n    }\n\n    this.state = State.HOLDING;\n    this.startPressAnimation(event);\n  }\n\n  private handleClick() {\n    // Click is a MouseEvent in Firefox and Safari, so we cannot use\n    // `shouldReactToEvent`\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.state === State.WAITING_FOR_CLICK) {\n      this.endPressAnimation();\n      return;\n    }\n\n    if (this.state === State.INACTIVE) {\n      // keyboard synthesized click event\n      this.startPressAnimation();\n      this.endPressAnimation();\n    }\n  }\n\n  private handlePointercancel(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.endPressAnimation();\n  }\n\n  private handleContextmenu() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.checkBoundsAfterContextMenu = true;\n    this.endPressAnimation();\n  }\n\n  private determineRippleSize() {\n    const {height, width} = this.getBoundingClientRect();\n    const maxDim = Math.max(height, width);\n    const softEdgeSize = Math.max(\n      SOFT_EDGE_CONTAINER_RATIO * maxDim,\n      SOFT_EDGE_MINIMUM_SIZE,\n    );\n\n    const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n    const hypotenuse = Math.sqrt(width ** 2 + height ** 2);\n    const maxRadius = hypotenuse + PADDING;\n\n    this.initialSize = initialSize;\n    this.rippleScale = `${(maxRadius + softEdgeSize) / initialSize}`;\n    this.rippleSize = `${initialSize}px`;\n  }\n\n  private getNormalizedPointerEventCoords(pointerEvent: PointerEvent): {\n    x: number;\n    y: number;\n  } {\n    const {scrollX, scrollY} = window;\n    const {left, top} = this.getBoundingClientRect();\n    const documentX = scrollX + left;\n    const documentY = scrollY + top;\n    const {pageX, pageY} = pointerEvent;\n    return {x: pageX - documentX, y: pageY - documentY};\n  }\n\n  private getTranslationCoordinates(positionEvent?: Event) {\n    const {height, width} = this.getBoundingClientRect();\n    // end in the center\n    const endPoint = {\n      x: (width - this.initialSize) / 2,\n      y: (height - this.initialSize) / 2,\n    };\n\n    let startPoint;\n    if (positionEvent instanceof PointerEvent) {\n      startPoint = this.getNormalizedPointerEventCoords(positionEvent);\n    } else {\n      startPoint = {\n        x: width / 2,\n        y: height / 2,\n      };\n    }\n\n    // center around start point\n    startPoint = {\n      x: startPoint.x - this.initialSize / 2,\n      y: startPoint.y - this.initialSize / 2,\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  private startPressAnimation(positionEvent?: Event) {\n    if (!this.mdRoot) {\n      return;\n    }\n\n    this.pressed = true;\n    this.growAnimation?.cancel();\n    this.determineRippleSize();\n    const {startPoint, endPoint} =\n      this.getTranslationCoordinates(positionEvent);\n    const translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n    const translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n\n    this.growAnimation = this.mdRoot.animate(\n      {\n        top: [0, 0],\n        left: [0, 0],\n        height: [this.rippleSize, this.rippleSize],\n        width: [this.rippleSize, this.rippleSize],\n        transform: [\n          `translate(${translateStart}) scale(1)`,\n          `translate(${translateEnd}) scale(${this.rippleScale})`,\n        ],\n      },\n      {\n        pseudoElement: PRESS_PSEUDO,\n        duration: PRESS_GROW_MS,\n        easing: EASING.STANDARD,\n        fill: ANIMATION_FILL,\n      },\n    );\n  }\n\n  private async endPressAnimation() {\n    this.rippleStartEvent = undefined;\n    this.state = State.INACTIVE;\n    const animation = this.growAnimation;\n    let pressAnimationPlayState = Infinity;\n    if (typeof animation?.currentTime === 'number') {\n      pressAnimationPlayState = animation.currentTime;\n    } else if (animation?.currentTime) {\n      pressAnimationPlayState = animation.currentTime.to('ms').value;\n    }\n\n    if (pressAnimationPlayState >= MINIMUM_PRESS_MS) {\n      this.pressed = false;\n      return;\n    }\n\n    await new Promise((resolve) => {\n      setTimeout(resolve, MINIMUM_PRESS_MS - pressAnimationPlayState);\n    });\n\n    if (this.growAnimation !== animation) {\n      // A new press animation was started. The old animation was canceled and\n      // should not finish the pressed state.\n      return;\n    }\n\n    this.pressed = false;\n  }\n\n  /**\n   * Returns `true` if\n   *  - the ripple element is enabled\n   *  - the pointer is primary for the input type\n   *  - the pointer is the pointer that started the interaction, or will start\n   * the interaction\n   *  - the pointer is a touch, or the pointer state has the primary button\n   * held, or the pointer is hovering\n   */\n  private shouldReactToEvent(event: PointerEvent) {\n    if (this.disabled || !event.isPrimary) {\n      return false;\n    }\n\n    if (\n      this.rippleStartEvent &&\n      this.rippleStartEvent.pointerId !== event.pointerId\n    ) {\n      return false;\n    }\n\n    if (event.type === 'pointerenter' || event.type === 'pointerleave') {\n      return !this.isTouch(event);\n    }\n\n    const isPrimaryButton = event.buttons === 1;\n    return this.isTouch(event) || isPrimaryButton;\n  }\n\n  /**\n   * Check if the event is within the bounds of the element.\n   *\n   * This is only needed for the \"stuck\" contextmenu longpress on Chrome.\n   */\n  private inBounds({x, y}: PointerEvent) {\n    const {top, left, bottom, right} = this.getBoundingClientRect();\n    return x >= left && x <= right && y >= top && y <= bottom;\n  }\n\n  private isTouch({pointerType}: PointerEvent) {\n    return pointerType === 'touch';\n  }\n\n  /** @private */\n  async handleEvent(event: Event) {\n    if (FORCED_COLORS?.matches) {\n      // Skip event logic since the ripple is `display: none`.\n      return;\n    }\n\n    switch (event.type) {\n      case 'click':\n        this.handleClick();\n        break;\n      case 'contextmenu':\n        this.handleContextmenu();\n        break;\n      case 'pointercancel':\n        this.handlePointercancel(event as PointerEvent);\n        break;\n      case 'pointerdown':\n        await this.handlePointerdown(event as PointerEvent);\n        break;\n      case 'pointerenter':\n        this.handlePointerenter(event as PointerEvent);\n        break;\n      case 'pointerleave':\n        this.handlePointerleave(event as PointerEvent);\n        break;\n      case 'pointerup':\n        this.handlePointerup(event as PointerEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private onControlChange(prev: HTMLElement | null, next: HTMLElement | null) {\n    if (isServer) return;\n\n    for (const event of EVENTS) {\n      prev?.removeEventListener(event, this);\n      next?.addEventListener(event, this);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Easing functions to use for web animations.\n *\n * **NOTE:** `EASING.EMPHASIZED` is approximated with unknown accuracy.\n *\n * TODO(b/241113345): replace with tokens\n */\nexport const EASING = {\n  STANDARD: 'cubic-bezier(0.2, 0, 0, 1)',\n  STANDARD_ACCELERATE: 'cubic-bezier(.3,0,1,1)',\n  STANDARD_DECELERATE: 'cubic-bezier(0,0,0,1)',\n  EMPHASIZED: 'cubic-bezier(.3,0,0,1)',\n  EMPHASIZED_ACCELERATE: 'cubic-bezier(.3,0,.8,.15)',\n  EMPHASIZED_DECELERATE: 'cubic-bezier(.05,.7,.1,1)',\n} as const;\n\n/**\n * A signal that is used for abortable tasks.\n */\nexport interface AnimationSignal {\n  /**\n   * Starts the abortable task. Any previous tasks started with this instance\n   * will be aborted.\n   *\n   * @return An `AbortSignal` for the current task.\n   */\n  start(): AbortSignal;\n  /**\n   * Complete the current task.\n   */\n  finish(): void;\n}\n\n/**\n * Creates an `AnimationSignal` that can be used to cancel a previous task.\n *\n * @example\n * class MyClass {\n *   private labelAnimationSignal = createAnimationSignal();\n *\n *   private async animateLabel() {\n *     // Start of the task. Previous tasks will be canceled.\n *     const signal = this.labelAnimationSignal.start();\n *\n *     // Do async work...\n *     if (signal.aborted) {\n *       // Use AbortSignal to check if a request was made to abort after some\n *       // asynchronous work.\n *       return;\n *     }\n *\n *     const animation = this.animate(...);\n *     // Add event listeners to be notified when the task should be canceled.\n *     signal.addEventListener('abort', () => {\n *       animation.cancel();\n *     });\n *\n *     animation.addEventListener('finish', () => {\n *       // Tell the signal that the current task is finished.\n *       this.labelAnimationSignal.finish();\n *     });\n *   }\n * }\n *\n * @return An `AnimationSignal`.\n */\nexport function createAnimationSignal(): AnimationSignal {\n  // The current animation's AbortController\n  let animationAbortController: AbortController | null = null;\n\n  return {\n    start() {\n      // Tell the previous animation to cancel.\n      animationAbortController?.abort();\n      // Set up a new AbortController for the current animation.\n      animationAbortController = new AbortController();\n      // Provide the AbortSignal so that the caller can check aborted status\n      // and add listeners.\n      return animationAbortController.signal;\n    },\n    finish() {\n      animationAbortController = null;\n    },\n  };\n}\n\n/**\n * Returns a function which can be used to throttle function calls\n * mapped to a key via a given function that should produce a promise that\n * determines the throttle amount (defaults to requestAnimationFrame).\n */\nexport function createThrottle() {\n  const stack = new Set();\n  return async (\n    key = '',\n    cb: (...args: unknown[]) => unknown,\n    timeout = async () => {\n      await new Promise(requestAnimationFrame);\n    },\n  ) => {\n    if (!stack.has(key)) {\n      stack.add(key);\n      await timeout();\n      if (stack.has(key)) {\n        stack.delete(key);\n        cb();\n      }\n    }\n  };\n}\n\n/**\n * Parses an number in milliseconds from a css time value\n */\nexport function msFromTimeCSSValue(value: string) {\n  const match = value.trim().match(/([\\d.]+)(\\s*s$)?/);\n  const time = match?.[1];\n  const seconds = match?.[2];\n  return Number(time ?? 0) * (seconds ? 1000 : 1);\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators';\n\nimport {Ripple} from './internal/ripple';\nimport {styles} from './internal/ripple-styles';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-ripple': MdRipple;\n  }\n}\n\n/**\n * @summary Ripples, also known as state layers, are visual indicators used to\n * communicate the status of a component or interactive element.\n *\n * @description A state layer is a semi-transparent covering on an element that\n * indicates its state. State layers provide a systematic approach to\n * visualizing states by using opacity. A layer can be applied to an entire\n * element or in a circular shape and only one state layer can be applied at a\n * given time.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-ripple')\nexport class MdRipple extends Ripple {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring';\nimport '../../ripple/ripple';\n\nimport {html, isServer, LitElement, nothing, PropertyValues} from 'lit';\nimport {property, query, state} from 'lit/decorators';\nimport {classMap} from 'lit/directives/class-map';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate';\nimport {\n  dispatchActivationClick,\n  isActivationClick,\n} from '../../internal/events/form-label-activation';\nimport {redispatchEvent} from '../../internal/events/redispatch-event';\nimport {\n  createValidator,\n  getValidityAnchor,\n  mixinConstraintValidation,\n} from '../../labs/behaviors/constraint-validation';\nimport {mixinElementInternals} from '../../labs/behaviors/element-internals';\nimport {\n  getFormState,\n  getFormValue,\n  mixinFormAssociated,\n} from '../../labs/behaviors/form-associated';\nimport {CheckboxValidator} from '../../labs/behaviors/validators/checkbox-validator';\n\n// Separate variable needed for closure.\nconst checkboxBaseClass = mixinConstraintValidation(\n  mixinFormAssociated(mixinElementInternals(LitElement)),\n);\n\n/**\n * A checkbox component.\n *\n *\n * @fires change {Event} The native `change` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n * --bubbles\n * @fires input {InputEvent} The native `input` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)\n * --bubbles --composed\n */\nexport class Checkbox extends checkboxBaseClass {\n  static {\n    requestUpdateOnAriaChange(Checkbox);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /**\n   * Whether or not the checkbox is selected.\n   */\n  @property({type: Boolean}) checked = false;\n\n  /**\n   * Whether or not the checkbox is indeterminate.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate_state_checkboxes\n   */\n  @property({type: Boolean}) indeterminate = false;\n\n  /**\n   * When true, require the checkbox to be selected when participating in\n   * form submission.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#validation\n   */\n  @property({type: Boolean}) required = false;\n\n  /**\n   * The value of the checkbox that is submitted with a form when selected.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#value\n   */\n  @property() value = 'on';\n\n  @state() private prevChecked = false;\n  @state() private prevDisabled = false;\n  @state() private prevIndeterminate = false;\n  @query('input') private readonly input!: HTMLInputElement | null;\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('click', (event: MouseEvent) => {\n        if (!isActivationClick(event) || !this.input) {\n          return;\n        }\n        this.focus();\n        dispatchActivationClick(this.input);\n      });\n    }\n  }\n\n  protected override update(changed: PropertyValues<Checkbox>) {\n    if (\n      changed.has('checked') ||\n      changed.has('disabled') ||\n      changed.has('indeterminate')\n    ) {\n      this.prevChecked = changed.get('checked') ?? this.checked;\n      this.prevDisabled = changed.get('disabled') ?? this.disabled;\n      this.prevIndeterminate =\n        changed.get('indeterminate') ?? this.indeterminate;\n    }\n\n    super.update(changed);\n  }\n\n  protected override render() {\n    const prevNone = !this.prevChecked && !this.prevIndeterminate;\n    const prevChecked = this.prevChecked && !this.prevIndeterminate;\n    const prevIndeterminate = this.prevIndeterminate;\n    const isChecked = this.checked && !this.indeterminate;\n    const isIndeterminate = this.indeterminate;\n\n    const containerClasses = classMap({\n      'disabled': this.disabled,\n      'selected': isChecked || isIndeterminate,\n      'unselected': !isChecked && !isIndeterminate,\n      'checked': isChecked,\n      'indeterminate': isIndeterminate,\n      'prev-unselected': prevNone,\n      'prev-checked': prevChecked,\n      'prev-indeterminate': prevIndeterminate,\n      'prev-disabled': this.prevDisabled,\n    });\n\n    // Needed for closure conformance\n    const {ariaLabel, ariaInvalid} = this as ARIAMixinStrict;\n    // Note: <input> needs to be rendered before the <svg> for\n    // form.reportValidity() to work in Chrome.\n    return html`\n      <div class=\"container ${containerClasses}\">\n        <input\n          type=\"checkbox\"\n          id=\"input\"\n          aria-checked=${isIndeterminate ? 'mixed' : nothing}\n          aria-label=${ariaLabel || nothing}\n          aria-invalid=${ariaInvalid || nothing}\n          ?disabled=${this.disabled}\n          ?required=${this.required}\n          .indeterminate=${this.indeterminate}\n          .checked=${this.checked}\n          @input=${this.handleInput}\n          @change=${this.handleChange} />\n\n        <div class=\"outline\"></div>\n        <div class=\"background\"></div>\n        <md-focus-ring part=\"focus-ring\" for=\"input\"></md-focus-ring>\n        <md-ripple for=\"input\" ?disabled=${this.disabled}></md-ripple>\n        <svg class=\"icon\" viewBox=\"0 0 18 18\" aria-hidden=\"true\">\n          <rect class=\"mark short\" />\n          <rect class=\"mark long\" />\n        </svg>\n      </div>\n    `;\n  }\n\n  private handleInput(event: Event) {\n    const target = event.target as HTMLInputElement;\n    this.checked = target.checked;\n    this.indeterminate = target.indeterminate;\n    // <input> 'input' event bubbles and is composed, don't re-dispatch it.\n  }\n\n  private handleChange(event: Event) {\n    // <input> 'change' event is not composed, re-dispatch it.\n    redispatchEvent(this, event);\n  }\n\n  // Writable mixin properties for lit-html binding, needed for lit-analyzer\n  declare disabled: boolean;\n  declare name: string;\n\n  override [getFormValue]() {\n    if (!this.checked || this.indeterminate) {\n      return null;\n    }\n\n    return this.value;\n  }\n\n  override [getFormState]() {\n    return String(this.checked);\n  }\n\n  override formResetCallback() {\n    // The checked property does not reflect, so the original attribute set by\n    // the user is used to determine the default value.\n    this.checked = this.hasAttribute('checked');\n  }\n\n  override formStateRestoreCallback(state: string) {\n    this.checked = state === 'true';\n  }\n\n  [createValidator]() {\n    return new CheckboxValidator(() => this);\n  }\n\n  [getValidityAnchor]() {\n    return this.input;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Re-dispatches an event from the provided element.\n *\n * This function is useful for forwarding non-composed events, such as `change`\n * events.\n *\n * @example\n * class MyInput extends LitElement {\n *   render() {\n *     return html`<input @change=${this.redispatchEvent}>`;\n *   }\n *\n *   protected redispatchEvent(event: Event) {\n *     redispatchEvent(this, event);\n *   }\n * }\n *\n * @param element The element to dispatch the event from.\n * @param event The event to re-dispatch.\n * @return Whether or not the event was dispatched (if cancelable).\n */\nexport function redispatchEvent(element: Element, event: Event) {\n  // For bubbling events in SSR light DOM (or composed), stop their propagation\n  // and dispatch the copy.\n  if (event.bubbles && (!element.shadowRoot || event.composed)) {\n    event.stopPropagation();\n  }\n\n  const copy = Reflect.construct(event.constructor, [event.type, event]);\n  const dispatched = element.dispatchEvent(copy);\n  if (!dispatched) {\n    event.preventDefault();\n  }\n\n  return dispatched;\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ReactiveElement} from 'lit';\n\nimport {ARIA_PROPERTIES, ariaPropertyToAttribute} from './aria';\n\n/**\n * Sets up a `ReactiveElement` constructor to enable updates when delegating\n * aria attributes. Elements may bind `this.aria*` properties to `aria-*`\n * attributes in their render functions.\n *\n * This function will:\n * - Call `requestUpdate()` when an aria attribute changes.\n * - Add `role=\"presentation\"` to the host.\n *\n * NOTE: The following features are not currently supported:\n * - Delegating IDREF attributes (ex: `aria-labelledby`, `aria-controls`)\n * - Delegating the `role` attribute\n *\n * @example\n * class XButton extends LitElement {\n *   static {\n *     requestUpdateOnAriaChange(XButton);\n *   }\n *\n *   protected override render() {\n *     return html`\n *       <button aria-label=${this.ariaLabel || nothing}>\n *         <slot></slot>\n *       </button>\n *     `;\n *   }\n * }\n *\n * @param ctor The `ReactiveElement` constructor to patch.\n */\nexport function requestUpdateOnAriaChange(ctor: typeof ReactiveElement) {\n  for (const ariaProperty of ARIA_PROPERTIES) {\n    ctor.createProperty(ariaProperty, {\n      attribute: ariaPropertyToAttribute(ariaProperty),\n      reflect: true,\n    });\n  }\n\n  ctor.addInitializer((element) => {\n    const controller = {\n      hostConnected() {\n        element.setAttribute('role', 'presentation');\n      },\n    };\n\n    element.addController(controller);\n  });\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators';\n\nimport {Checkbox} from './internal/checkbox';\nimport {styles} from './internal/checkbox-styles';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-checkbox': MdCheckbox;\n  }\n}\n\n/**\n * @summary Checkboxes allow users to select one or more items from a set.\n * Checkboxes can turn an option on or off.\n *\n * @description\n * Use checkboxes to:\n * - Select one or more options from a list\n * - Present a list containing sub-selections\n * - Turn an item on or off in a desktop environment\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-checkbox')\nexport class MdCheckbox extends Checkbox {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for blaze-out/k8-opt/bin/third_party/javascript/material/web/divider/internal/divider-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{box-sizing:border-box;color:var(--md-divider-color,var(--md-sys-color-outline-variant,#cac4d0));display:flex;height:var(--md-divider-thickness,1px);width:100%}:host([inset-start]),:host([inset]){padding-inline-start:16px}:host([inset-end]),:host([inset]){padding-inline-end:16px}:host:before{background:currentColor;content:\"\";height:100%;width:100%}@media (forced-colors:active){:host:before{background:CanvasText}}\n`;\n","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement} from 'lit';\nimport {property} from 'lit/decorators';\n\n/**\n * A divider component.\n */\nexport class Divider extends LitElement {\n  /**\n   * Indents the divider with equal padding on both sides.\n   */\n  @property({type: Boolean, reflect: true}) inset = false;\n\n  /**\n   * Indents the divider with padding on the leading side.\n   */\n  @property({type: Boolean, reflect: true, attribute: 'inset-start'})\n  insetStart = false;\n\n  /**\n   * Indents the divider with padding on the trailing side.\n   */\n  @property({type: Boolean, reflect: true, attribute: 'inset-end'})\n  insetEnd = false;\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators';\n\nimport {Divider} from './internal/divider';\nimport {styles} from './internal/divider-styles';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-divider': MdDivider;\n  }\n}\n\n/**\n * @summary A divider is a thin line that groups content in lists and\n * containers.\n *\n * @description Dividers can reinforce tapability, such as when used to separate\n * list items or define tappable regions in an accordion.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-divider')\nexport class MdDivider extends Divider {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for blaze-out/k8-opt/bin/third_party/javascript/material/web/radio/internal/radio-styles.css.\nimport {css} from 'lit';\nexport const styles = css`@layer{:host{display:inline-flex;height:var(--md-radio-icon-size,20px);outline:none;position:relative;vertical-align:top;width:var(--md-radio-icon-size,20px);-webkit-tap-highlight-color:transparent;cursor:pointer;--md-ripple-hover-color:var(--md-radio-hover-state-layer-color,var(--md-sys-color-on-surface,#1d1b20));--md-ripple-hover-opacity:var(--md-radio-hover-state-layer-opacity,0.08);--md-ripple-pressed-color:var(--md-radio-pressed-state-layer-color,var(--md-sys-color-primary,#6750a4));--md-ripple-pressed-opacity:var(--md-radio-pressed-state-layer-opacity,0.12)}:host([disabled]){cursor:default}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--md-radio-icon-size,20px))/2)}.container{display:flex;height:100%;place-content:center;place-items:center;width:100%}md-focus-ring{height:44px;inset:unset;width:44px}.checked{--md-ripple-hover-color:var(--md-radio-selected-hover-state-layer-color,var(--md-sys-color-primary,#6750a4));--md-ripple-hover-opacity:var(--md-radio-selected-hover-state-layer-opacity,0.08);--md-ripple-pressed-color:var(--md-radio-selected-pressed-state-layer-color,var(--md-sys-color-on-surface,#1d1b20));--md-ripple-pressed-opacity:var(--md-radio-selected-pressed-state-layer-opacity,0.12)}input{-moz-appearance:none;appearance:none;height:48px;margin:0;position:absolute;width:48px;cursor:inherit}:host([touch-target=none]) input{width:100%;height:100%}md-ripple{border-radius:50%;height:var(--md-radio-state-layer-size,40px);inset:unset;width:var(--md-radio-state-layer-size,40px)}.icon{fill:var(--md-radio-icon-color,var(--md-sys-color-on-surface-variant,#49454f));inset:0;position:absolute}.outer.circle{transition:fill 50ms linear}.inner.circle{opacity:0;transform-origin:center;transition:opacity 50ms linear}.checked .icon{fill:var(--md-radio-selected-icon-color,var(--md-sys-color-primary,#6750a4))}.checked .inner.circle{animation:inner-circle-grow .3s cubic-bezier(.05,.7,.1,1);opacity:1}@keyframes inner-circle-grow{0%{transform:scale(0)}to{transform:scale(1)}}:host([disabled]) .circle{animation-duration:0s;transition-duration:0s}:host(:hover) .icon{fill:var(--md-radio-hover-icon-color,var(--md-sys-color-on-surface,#1d1b20))}:host(:focus-within) .icon{fill:var(--md-radio-focus-icon-color,var(--md-sys-color-on-surface,#1d1b20))}:host(:active) .icon{fill:var(--md-radio-pressed-icon-color,var(--md-sys-color-on-surface,#1d1b20))}:host([disabled]) .icon{fill:var(--md-radio-disabled-unselected-icon-color,var(--md-sys-color-on-surface,#1d1b20));opacity:var(--md-radio-disabled-unselected-icon-opacity,.38)}:host(:hover) .checked .icon{fill:var(--md-radio-selected-hover-icon-color,var(--md-sys-color-primary,#6750a4))}:host(:focus-within) .checked .icon{fill:var(--md-radio-selected-focus-icon-color,var(--md-sys-color-primary,#6750a4))}:host(:active) .checked .icon{fill:var(--md-radio-selected-pressed-icon-color,var(--md-sys-color-primary,#6750a4))}:host([disabled]) .checked .icon{fill:var(--md-radio-disabled-selected-icon-color,var(--md-sys-color-on-surface,#1d1b20));opacity:var(--md-radio-disabled-selected-icon-opacity,.38)}}@layer hcm{@media (forced-colors:active){.icon{fill:CanvasText}:host([disabled]) .icon{fill:GrayText;opacity:1}}}\n`;\n","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement} from 'lit';\nimport {property} from 'lit/decorators';\n\nimport {MixinBase, MixinReturn} from './mixin';\n\n/**\n * An element that can enable and disable `tabindex` focusability.\n */\nexport interface Focusable {\n  /**\n   * Whether or not the element can be focused. Defaults to true. Set to false\n   * to disable focusing (unless a user has set a `tabindex`).\n   */\n  [isFocusable]: boolean;\n}\n\n/**\n * A property symbol that indicates whether or not a `Focusable` element can be\n * focused.\n */\nexport const isFocusable = Symbol('isFocusable');\n\nconst privateIsFocusable = Symbol('privateIsFocusable');\nconst externalTabIndex = Symbol('externalTabIndex');\nconst isUpdatingTabIndex = Symbol('isUpdatingTabIndex');\nconst updateTabIndex = Symbol('updateTabIndex');\n\n/**\n * Mixes in focusable functionality for a class.\n *\n * Elements can enable and disable their focusability with the `isFocusable`\n * symbol property. Changing `tabIndex` will trigger a lit render, meaning\n * `this.tabIndex` can be used in template expressions.\n *\n * This mixin will preserve externally-set tabindices. If an element turns off\n * focusability, but a user sets `tabindex=\"0\"`, it will still be focusable.\n *\n * To remove user overrides and restore focusability control to the element,\n * remove the `tabindex` attribute.\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `Focusable` mixed in.\n */\nexport function mixinFocusable<T extends MixinBase<LitElement>>(\n  base: T,\n): MixinReturn<T, Focusable> {\n  abstract class FocusableElement extends base implements Focusable {\n    @property({noAccessor: true})\n    declare tabIndex: number;\n\n    get [isFocusable]() {\n      return this[privateIsFocusable];\n    }\n\n    set [isFocusable](value: boolean) {\n      if (this[isFocusable] === value) {\n        return;\n      }\n\n      this[privateIsFocusable] = value;\n      this[updateTabIndex]();\n    }\n\n    [privateIsFocusable] = true;\n    [externalTabIndex]: number | null = null;\n    [isUpdatingTabIndex] = false;\n\n    override connectedCallback() {\n      super.connectedCallback();\n      this[updateTabIndex]();\n    }\n\n    override attributeChangedCallback(\n      name: string,\n      old: string | null,\n      value: string | null,\n    ) {\n      if (name !== 'tabindex') {\n        super.attributeChangedCallback(name, old, value);\n        return;\n      }\n\n      this.requestUpdate('tabIndex', Number(old ?? -1));\n      if (this[isUpdatingTabIndex]) {\n        // Not an externally-initiated update.\n        return;\n      }\n\n      if (!this.hasAttribute('tabindex')) {\n        // User removed the attribute, can now use internal tabIndex\n        this[externalTabIndex] = null;\n        this[updateTabIndex]();\n        return;\n      }\n\n      this[externalTabIndex] = this.tabIndex;\n    }\n\n    [updateTabIndex]() {\n      const internalTabIndex = this[isFocusable] ? 0 : -1;\n      const computedTabIndex = this[externalTabIndex] ?? internalTabIndex;\n\n      this[isUpdatingTabIndex] = true;\n      this.tabIndex = computedTabIndex;\n      this[isUpdatingTabIndex] = false;\n    }\n  }\n\n  return FocusableElement;\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Validator} from './validator';\n\n/**\n * Constraint validation properties for a radio.\n */\nexport interface RadioState {\n  /**\n   * Whether the radio is checked.\n   */\n  readonly checked: boolean;\n\n  /**\n   * Whether the radio is required.\n   */\n  readonly required: boolean;\n}\n\n/**\n * Radio constraint validation properties for a single radio and its siblings.\n */\nexport type RadioGroupState = readonly [RadioState, ...RadioState[]];\n\n/**\n * A validator that provides constraint validation that emulates\n * `<input type=\"radio\">` validation.\n */\nexport class RadioValidator extends Validator<RadioGroupState> {\n  private radioElement?: HTMLInputElement;\n\n  protected override computeValidity(states: RadioGroupState) {\n    if (!this.radioElement) {\n      // Lazily create the radio element\n      this.radioElement = document.createElement('input');\n      this.radioElement.type = 'radio';\n      // A name is required for validation to run\n      this.radioElement.name = 'group';\n    }\n\n    let isRequired = false;\n    let isChecked = false;\n    for (const {checked, required} of states) {\n      if (required) {\n        isRequired = true;\n      }\n\n      if (checked) {\n        isChecked = true;\n      }\n    }\n\n    // Firefox v119 doesn't compute grouped radio validation correctly while\n    // they are detached from the DOM, which is why we don't render multiple\n    // virtual <input>s. Instead, we can check the required/checked states and\n    // grab the i18n'd validation message if the value is missing.\n    this.radioElement.checked = isChecked;\n    this.radioElement.required = isRequired;\n    return {\n      validity: {\n        valueMissing: isRequired && !isChecked,\n      },\n      validationMessage: this.radioElement.validationMessage,\n    };\n  }\n\n  protected override equals(\n    prevGroup: RadioGroupState,\n    nextGroup: RadioGroupState,\n  ) {\n    if (prevGroup.length !== nextGroup.length) {\n      return false;\n    }\n\n    for (let i = 0; i < prevGroup.length; i++) {\n      const prev = prevGroup[i];\n      const next = nextGroup[i];\n      if (prev.checked !== next.checked || prev.required !== next.required) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  protected override copy(states: RadioGroupState): RadioGroupState {\n    // Cast as unknown since typescript does not have enough information to\n    // infer that the array always has at least one element.\n    return states.map(({checked, required}) => ({\n      checked,\n      required,\n    })) as unknown as RadioGroupState;\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ReactiveController} from 'lit';\n\n/**\n * An element that supports single-selection with `SingleSelectionController`.\n */\nexport interface SingleSelectionElement extends HTMLElement {\n  /**\n   * Whether or not the element is selected.\n   */\n  checked: boolean;\n}\n\n/**\n * A `ReactiveController` that provides root node-scoped single selection for\n * elements, similar to native `<input type=\"radio\">` selection.\n *\n * To use, elements should add the controller and call\n * `selectionController.handleCheckedChange()` in a getter/setter. This must\n * be synchronous to match native behavior.\n *\n * @example\n * const CHECKED = Symbol('checked');\n *\n * class MyToggle extends LitElement {\n *   get checked() { return this[CHECKED]; }\n *   set checked(checked: boolean) {\n *     const oldValue = this.checked;\n *     if (oldValue === checked) {\n *       return;\n *     }\n *\n *     this[CHECKED] = checked;\n *     this.selectionController.handleCheckedChange();\n *     this.requestUpdate('checked', oldValue);\n *   }\n *\n *   [CHECKED] = false;\n *\n *   private selectionController = new SingleSelectionController(this);\n *\n *   constructor() {\n *     super();\n *     this.addController(this.selectionController);\n *   }\n * }\n */\nexport class SingleSelectionController implements ReactiveController {\n  /**\n   * All single selection elements in the host element's root with the same\n   * `name` attribute, including the host element.\n   */\n  get controls(): [SingleSelectionElement, ...SingleSelectionElement[]] {\n    const name = this.host.getAttribute('name');\n    if (!name || !this.root || !this.host.isConnected) {\n      return [this.host];\n    }\n\n    // Cast as unknown since there is not enough information for typescript to\n    // know that there is always at least one element (the host).\n    return Array.from(\n      this.root.querySelectorAll<SingleSelectionElement>(`[name=\"${name}\"]`),\n    ) as unknown as [SingleSelectionElement, ...SingleSelectionElement[]];\n  }\n\n  private focused = false;\n  private root: ParentNode | null = null;\n\n  constructor(private readonly host: SingleSelectionElement) {}\n\n  hostConnected() {\n    this.root = this.host.getRootNode() as ParentNode;\n    this.host.addEventListener('keydown', this.handleKeyDown);\n    this.host.addEventListener('focusin', this.handleFocusIn);\n    this.host.addEventListener('focusout', this.handleFocusOut);\n    if (this.host.checked) {\n      // Uncheck other siblings when attached if already checked. This mimics\n      // native <input type=\"radio\"> behavior.\n      this.uncheckSiblings();\n    }\n\n    // Update for the newly added host.\n    this.updateTabIndices();\n  }\n\n  hostDisconnected() {\n    this.host.removeEventListener('keydown', this.handleKeyDown);\n    this.host.removeEventListener('focusin', this.handleFocusIn);\n    this.host.removeEventListener('focusout', this.handleFocusOut);\n    // Update for siblings that are still connected.\n    this.updateTabIndices();\n    this.root = null;\n  }\n\n  /**\n   * Should be called whenever the host's `checked` property changes\n   * synchronously.\n   */\n  handleCheckedChange() {\n    if (!this.host.checked) {\n      return;\n    }\n\n    this.uncheckSiblings();\n    this.updateTabIndices();\n  }\n\n  private readonly handleFocusIn = () => {\n    this.focused = true;\n    this.updateTabIndices();\n  };\n\n  private readonly handleFocusOut = () => {\n    this.focused = false;\n    this.updateTabIndices();\n  };\n\n  private uncheckSiblings() {\n    for (const sibling of this.controls) {\n      if (sibling !== this.host) {\n        sibling.checked = false;\n      }\n    }\n  }\n\n  /**\n   * Updates the `tabindex` of the host and its siblings.\n   */\n  private updateTabIndices() {\n    // There are three tabindex states for a group of elements:\n    // 1. If any are checked, that element is focusable.\n    const siblings = this.controls;\n    const checkedSibling = siblings.find((sibling) => sibling.checked);\n    // 2. If an element is focused, the others are no longer focusable.\n    if (checkedSibling || this.focused) {\n      const focusable = checkedSibling || this.host;\n      focusable.tabIndex = 0;\n\n      for (const sibling of siblings) {\n        if (sibling !== focusable) {\n          sibling.tabIndex = -1;\n        }\n      }\n      return;\n    }\n\n    // 3. If none are checked or focused, all are focusable.\n    for (const sibling of siblings) {\n      sibling.tabIndex = 0;\n    }\n  }\n\n  /**\n   * Handles arrow key events from the host. Using the arrow keys will\n   * select and check the next or previous sibling with the host's\n   * `name` attribute.\n   */\n  private readonly handleKeyDown = (event: KeyboardEvent) => {\n    const isDown = event.key === 'ArrowDown';\n    const isUp = event.key === 'ArrowUp';\n    const isLeft = event.key === 'ArrowLeft';\n    const isRight = event.key === 'ArrowRight';\n    // Ignore non-arrow keys\n    if (!isLeft && !isRight && !isDown && !isUp) {\n      return;\n    }\n\n    // Don't try to select another sibling if there aren't any.\n    const siblings = this.controls;\n    if (!siblings.length) {\n      return;\n    }\n\n    // Prevent default interactions on the element for arrow keys,\n    // since this controller will introduce new behavior.\n    event.preventDefault();\n\n    // Check if moving forwards or backwards\n    const isRtl = getComputedStyle(this.host).direction === 'rtl';\n    const forwards = isRtl ? isLeft || isDown : isRight || isDown;\n\n    const hostIndex = siblings.indexOf(this.host);\n    let nextIndex = forwards ? hostIndex + 1 : hostIndex - 1;\n    // Search for the next sibling that is not disabled to select.\n    // If we return to the host index, there is nothing to select.\n    while (nextIndex !== hostIndex) {\n      if (nextIndex >= siblings.length) {\n        // Return to start if moving past the last item.\n        nextIndex = 0;\n      } else if (nextIndex < 0) {\n        // Go to end if moving before the first item.\n        nextIndex = siblings.length - 1;\n      }\n\n      // Check if the next sibling is disabled. If so,\n      // move the index and continue searching.\n      const nextSibling = siblings[nextIndex];\n      if (nextSibling.hasAttribute('disabled')) {\n        if (forwards) {\n          nextIndex++;\n        } else {\n          nextIndex--;\n        }\n\n        continue;\n      }\n\n      // Uncheck and remove focusability from other siblings.\n      for (const sibling of siblings) {\n        if (sibling !== nextSibling) {\n          sibling.checked = false;\n          sibling.tabIndex = -1;\n          sibling.blur();\n        }\n      }\n\n      // The next sibling should be checked, focused and dispatch a change event\n      nextSibling.checked = true;\n      nextSibling.tabIndex = 0;\n      nextSibling.focus();\n      // Fire a change event since the change is triggered by a user action.\n      // This matches native <input type=\"radio\"> behavior.\n      nextSibling.dispatchEvent(new Event('change', {bubbles: true}));\n\n      break;\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring';\nimport '../../ripple/ripple';\n\nimport {html, isServer, LitElement} from 'lit';\nimport {property, query} from 'lit/decorators';\nimport {classMap} from 'lit/directives/class-map';\n\nimport {isActivationClick} from '../../internal/events/form-label-activation';\nimport {\n  createValidator,\n  getValidityAnchor,\n  mixinConstraintValidation,\n} from '../../labs/behaviors/constraint-validation';\nimport {\n  internals,\n  mixinElementInternals,\n} from '../../labs/behaviors/element-internals';\nimport {mixinFocusable} from '../../labs/behaviors/focusable';\nimport {\n  getFormState,\n  getFormValue,\n  mixinFormAssociated,\n} from '../../labs/behaviors/form-associated';\nimport {RadioValidator} from '../../labs/behaviors/validators/radio-validator';\n\nimport {SingleSelectionController} from './single-selection-controller';\n\nconst CHECKED = Symbol('checked');\nlet maskId = 0;\n\n// Separate variable needed for closure.\nconst radioBaseClass = mixinConstraintValidation(\n  mixinFormAssociated(mixinElementInternals(mixinFocusable(LitElement))),\n);\n\n/**\n * A radio component.\n *\n * @fires input {InputEvent} Dispatched when the value changes from user\n * interaction. --bubbles\n * @fires change {Event} Dispatched when the value changes from user\n * interaction. --bubbles --composed\n */\nexport class Radio extends radioBaseClass {\n  // Unique maskId is required because of a Safari bug that fail to persist\n  // reference to the mask. This should be removed once the bug is fixed.\n  private readonly maskId = `cutout${++maskId}`;\n\n  /**\n   * Whether or not the radio is selected.\n   */\n  @property({type: Boolean})\n  get checked() {\n    return this[CHECKED];\n  }\n  set checked(checked: boolean) {\n    const wasChecked = this.checked;\n    if (wasChecked === checked) {\n      return;\n    }\n\n    this[CHECKED] = checked;\n    this.requestUpdate('checked', wasChecked);\n    this.selectionController.handleCheckedChange();\n  }\n\n  [CHECKED] = false;\n\n  /**\n   * Whether or not the radio is required. If any radio is required in a group,\n   * all radios are implicitly required.\n   */\n  @property({type: Boolean}) required = false;\n\n  /**\n   * The element value to use in form submission when checked.\n   */\n  @property() value = 'on';\n\n  @query('.container') private readonly container!: HTMLElement;\n  private readonly selectionController = new SingleSelectionController(this);\n\n  constructor() {\n    super();\n    this.addController(this.selectionController);\n    if (!isServer) {\n      this[internals].role = 'radio';\n      this.addEventListener('click', this.handleClick.bind(this));\n      this.addEventListener('keydown', this.handleKeydown.bind(this));\n    }\n  }\n\n  protected override render() {\n    const classes = {'checked': this.checked};\n    return html`\n      <div class=\"container ${classMap(classes)}\" aria-hidden=\"true\">\n        <md-ripple\n          part=\"ripple\"\n          .control=${this}\n          ?disabled=${this.disabled}></md-ripple>\n        <md-focus-ring part=\"focus-ring\" .control=${this}></md-focus-ring>\n        <svg class=\"icon\" viewBox=\"0 0 20 20\">\n          <mask id=\"${this.maskId}\">\n            <rect width=\"100%\" height=\"100%\" fill=\"white\" />\n            <circle cx=\"10\" cy=\"10\" r=\"8\" fill=\"black\" />\n          </mask>\n          <circle\n            class=\"outer circle\"\n            cx=\"10\"\n            cy=\"10\"\n            r=\"10\"\n            mask=\"url(#${this.maskId})\" />\n          <circle class=\"inner circle\" cx=\"10\" cy=\"10\" r=\"5\" />\n        </svg>\n\n        <input\n          id=\"input\"\n          type=\"radio\"\n          tabindex=\"-1\"\n          .checked=${this.checked}\n          .value=${this.value}\n          ?disabled=${this.disabled} />\n      </div>\n    `;\n  }\n\n  protected override updated() {\n    this[internals].ariaChecked = String(this.checked);\n  }\n\n  private async handleClick(event: Event) {\n    if (this.disabled) {\n      return;\n    }\n\n    // allow event to propagate to user code after a microtask.\n    await 0;\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (isActivationClick(event)) {\n      this.focus();\n    }\n\n    // Per spec, clicking on a radio input always selects it.\n    this.checked = true;\n    this.dispatchEvent(new Event('change', {bubbles: true}));\n    this.dispatchEvent(\n      new InputEvent('input', {bubbles: true, composed: true}),\n    );\n  }\n\n  private async handleKeydown(event: KeyboardEvent) {\n    // allow event to propagate to user code after a microtask.\n    await 0;\n    if (event.key !== ' ' || event.defaultPrevented) {\n      return;\n    }\n\n    this.click();\n  }\n\n  // Writable mixin properties for lit-html binding, needed for lit-analyzer\n  declare disabled: boolean;\n  declare name: string;\n\n  override [getFormValue]() {\n    return this.checked ? this.value : null;\n  }\n\n  override [getFormState]() {\n    return String(this.checked);\n  }\n\n  override formResetCallback() {\n    // The checked property does not reflect, so the original attribute set by\n    // the user is used to determine the default value.\n    this.checked = this.hasAttribute('checked');\n  }\n\n  override formStateRestoreCallback(state: string) {\n    this.checked = state === 'true';\n  }\n\n  [createValidator]() {\n    return new RadioValidator(() => {\n      if (!this.selectionController) {\n        // Validation runs on superclass construction, so selection controller\n        // might not actually be ready until this class constructs.\n        return [this];\n      }\n\n      return this.selectionController.controls as [Radio, ...Radio[]];\n    });\n  }\n\n  [getValidityAnchor]() {\n    return this.container;\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators';\n\nimport {Radio} from './internal/radio';\nimport {styles} from './internal/radio-styles';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-radio': MdRadio;\n  }\n}\n\n/**\n * @summary Radio buttons allow users to select one option from a set.\n *\n * @description\n * Radio buttons are the recommended way to allow users to make a single\n * selection from a list of options.\n *\n * Only one radio button can be selected at a time.\n *\n * Use radio buttons to:\n * - Select a single option from a set\n * - Expose all available options\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-radio')\nexport class MdRadio extends Radio {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n"],
"names":["$jscomp.defineProperty","$jscomp.global","$jscomp.getGlobal","$jscomp.polyfill","$jscomp.iteratorPrototype","$jscomp.arrayIteratorImpl","$jscomp.assign","$jscomp.owns","$jscomp.objectCreate","$jscomp.construct","$jscomp.getConstructImplementation","$jscomp.setPrototypeOf","$jscomp.generator.Context","$jscomp.asyncExecutePromiseGenerator","$jscomp.generator.Generator_","$jscomp.generator.Engine_","$jscomp.makeIterator","$jscomp.checkStringArgs","$jscomp.iteratorFromArray","$jscomp.typedArrayFill","goog.global","self","goog.inherits","childCtor","parentCtor","tempCtor","prototype","superClass_","constructor","base","childCtor.base","me","methodName","var_args","args","Array","arguments","length","i","apply","goog.identity_","s","exports.__decorate","decorators","target","key","desc","c","r","Object","getOwnPropertyDescriptor","d","Reflect","defineProperty","exports.__metadata","metadataKey","metadataValue","writeData","data","local","$jscomp.asyncExecutePromiseGeneratorProgram","chrome","storage","set","sync","readData","get","DebugError","msg","cause","Error","captureStackTrace","stack","message","String","undefined","name","AssertionError","messagePattern","messageArgs","splitParts","split","returnString","subLast","sub","call","value","privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_","goog.html.TrustedResourceUrl","toString","goog.html.TrustedResourceUrl.unwrapTrustedScriptURL","trustedResourceUrl","goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_","goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse","url","goog.html.trustedtypes.cachedPolicy_","policy","policyFactory","goog.globaltrustedTypes","trustedTypes","createPolicy","goog.html.trustedtypes.POLICY_NAME","createHTML","createScript","createScriptURL","e","goog.globalconsole","console","noinlineUrl","SafeHtml","privateDoNotAccessOrElseSafeHtmlWrappedValue_","unwrapTrustedHTML","safeHtml","module$contents$goog$html$SafeHtml_SafeHtml.EMPTY","goog.globaltrustedTypesemptyHTML","emptyHTML","CONSTRUCTOR_TOKEN_PRIVATE","goog.string.repeat","repeat","string","join","goog.string.padNumber","num","Number","isFinite","index","indexOf","sign","substring","Math","max","goog.date.Date","date","Date","now","expectedDate","getDate","setHours","setMinutes","setSeconds","setMilliseconds","maybeFixDst_","goog.date.Date.prototype","getFullYear","goog.date.Date.prototype.getFullYear","getMonth","goog.date.Date.prototype.getMonth","goog.date.Date.prototype.getDate","goog.date.Date.prototype.set","add","goog.date.Date.prototype.add","interval","years","months","month","year","getYear","floor","FEB","JUN","SEP","NOV","APR","min","daysInTargetMonth","setDate","setFullYear","setMonth","days","initialYear","yearAdjustment","result","getTime","noon","goog.date.Date.prototype.toIsoString","opt_verbose","opt_tz","str","abs","offset","getTimezoneOffset","tz","n","h","m","goog.date.Date.prototype.toString","toIsoString","goog.date.Date.prototype.maybeFixDst_","expected","setUTCHours","getUTCHours","dir","valueOf","goog.date.Date.prototype.valueOf","DEFAULT_USER_SETTINGS","getUserSettings","userSettings","storedValueStr","res","keys","JSON","parse","writeUserSetting","stringify","styledScopes","Set","scopeCssStore","Map","polyfillSupport","Template","ChildPart","window","ShadyCSS","nativeShadow","ApplyShim","ShadyDOM","wrap","inUse","noPatch","node","cssForScope","scopeCss","scopedTemplateCache","originalCreateElement","createElement","Template.createElement","html","options","element","scope","prepareTemplateDom","has","push","$jscomp.arrayFromIterable","from","content","querySelectorAll","styles","map","style","parentNode","removeChild","textContent","renderContainer","document","createDocumentFragment","renderContainerMarker","createComment","childPartProto","setValue","_$setValue","childPartProto._$setValue","directiveParent","container","_$startNode","ShadowRoot","startNode","endNode","_$endNode","appendChild","template","_$committedValue","_$template","el","hasScopeCss","delete","prepareTemplateStyles","querySelector","cloneNode","insertBefore","_$getTemplate","childPartProto._$getTemplate","templateCache","strings","litHtmlPolyfillSupport","symbolKey","Symbol","needsSymbolSupport","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$polyfill$2dsupport.isPolyfilledSymbol","for","window.Symbol.for","elementProto","ReactiveElement","patchElementProto","createRenderRoot","elementProto.createRenderRoot","localName","hasOwnProperty","SCOPED","css","elementStyles","v","CSSStyleSheet","cssRules","reduce","a","cssText","ScopingShim","prepareAdoptedCssText","_$handlesPrepareStyles","shadowRoot","attachShadow","shadowRootOptions","connectedCallback","elementProto.connectedCallback","hasUpdated","styleElement","didUpdate","_$didUpdate","elementProto._$didUpdate","changedProperties","reactiveElementPolyfillSupport","LitElement","litElementProto","litElementProto.createRenderRoot","renderOptions","litElementPolyfillSupport","$jscomp.createTemplateTagFirstArg","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$internal$2dsecurity.sanitizerFactory","realSanitizerFactory","rawName","type","nodeType","allowAnything","toLowerCase","fallbackHtml","contract","securityContracts","tagName","test","baseToCheck","includes","HTMLElement","BLOCK_JAVASCRIPT_URL_PATTERN","fallbackTrustedUrl","templateObj","$jscomp.getRestArgumentsapply","rest","encodeURIComponent","module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML","onlyForbidJavascriptUrls","forbidEverythingBecauseFieldIsUnsupported","requireTrustedResourceUrl","maybeResourceUrl","requireSafeHtml","maybeSafeHtml","safehtml_1","goog.globalShadyDOM","goog.globalShadyDOMwrap","identityFunction","noopSanitizer","marker","random","slice","markerMatch","nodeMarker","isPrimitive","isArray","textEndRegex","commentEndRegex","comment2EndRegex","tagEndRegex","RegExp","singleQuoteAttrEndRegex","doubleQuoteAttrEndRegex","rawTextElement","exports.html","HTML_RESULT","values","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.noChange","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.nothing","WeakMap","walker","createTreeWalker","trustFromTemplateString","tsa","stringFromTSA","parts","attrNameIndex","nodeIndex","partCount","l","attrNames","SVG_RESULT","rawTextEndRegex","regex","attrNameEndIndex","attrName","lastIndex","match","exec","COMMENT_START","TAG_NAME","DYNAMIC_TAG_NAME","ENTIRE_MATCH","ATTRIBUTE_NAME","SPACES_AND_EQUALS","QUOTE_CHAR","end","startsWith","boundAttributeSuffix","html__tsickle_destructured_1","attrNames__tsickle_destructured_2","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.TemplatecreateElement","currentNode","svgElement","firstChild","replaceWith","childNodes","nextNode","hasAttributes","getAttributeNames","endsWith","realName","statics","getAttribute","ATTRIBUTE_PART","ctor","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.PropertyPart","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.BooleanAttributePart","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.EventPart","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.AttributePart","removeAttribute","ELEMENT_PART","emptyScript","append","CHILD_PART","COMMENT_PART","innerHTML","resolveDirective","part","parent","attributeIndex","__directives","currentDirective","__directive","nextDirectiveConstructor","_$initialize","_$resolve","_$parts","_$disconnectableChildren","_$parent","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.TemplateInstance","_clone","creationScope","fragment","importNode","partIndex","templatePart","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.ChildPart","nextSibling","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.ElementPart","_update","$jscomp.globalObjectdefineProperties","_$isConnected","isConnected","__isConnected","_textSanitizer","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.ChildPart.prototype","_$clear","_commitText","_commitTemplateResult","_commitNode","iterator","_commitIterable","_insert","parentNodeName","nodeName","textNode","createTextNode","instance","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.Template","itemParts","itemPart","item","start","_$notifyConnectionChanged","remove","setConnected","fill","_sanitizer","valueIndex","noCommit","change","_commitValue","setAttribute","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.AttributePartapply","PROPERTY_PART","$jscomp.inherits","AttributePart","BOOLEAN_ATTRIBUTE_PART","toggleAttribute","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.AttributePartcall","EVENT_PART","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","removeEventListener","addEventListener","handleEvent","event","host","litHtmlVersions","goog.globallitHtmlVersions","render","renderBefore","partOwnerNode","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$css$2dtag.supportsAdoptingStyleSheets","goog.globalShadowRoot","goog.globalShadyCSS","goog.globalShadyCSSnativeShadow","Document","constructionToken","cssTagCache","safeToken","_strings","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$css$2dtag.CSSResult","styleSheet","_styleSheet","cacheable","replaceSync","exports.css","acc","idx","exports.adoptStyles","renderRoot","adoptedStyleSheets","nonce","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$css$2dtag.getCompatibleStyle","sheet","rule","shimNotNeeded","module$exports$google3$javascript$polymer$detect_transpilation$detect_transpilation.wasTranspiledToEs5","servingRawClasses","goog.globalReflect","goog.globalcustomElements","customElements","patchedHTMLElement","exports.getHTMLElement","reflect","construct","BuiltInHTMLElement","shim","es5Shimmed","setPrototypeOf","applied","module$exports$webcomponentsjs$custom_elements$es5_shim_implementation.getHTMLElement","is","getOwnPropertyNames","getOwnPropertySymbols","getPrototypeOf","emptyStringForBooleanAttribute","goog.globalreactiveElementPolyfillSupport","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.defaultConverter","toAttribute","Boolean","fromAttribute","fromValue","exports.notEqual","old","defaultPropertyDeclaration","attribute","converter","hasChanged","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.notEqual","metadata","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.litPropertyMetadata","__instanceProperties","isUpdatePending","__reflectingProperty","__initialize","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElement","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElementaddInitializer","addInitializer","initializer","__prepare","_initializers","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElementcreateProperty","createProperty","state","elementProperties","noAccessor","descriptor","getPropertyDescriptor","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElementgetPropertyDescriptor","oldValue","requestUpdate","configurable","enumerable","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElementgetPropertyOptions","getPropertyOptions","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElement__prepare","superCtor","finalize","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElementfinalize","oneTimeWork","finalized","props","properties","propKeys","p","symbolMetadata","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.litPropertyMetadataget","p__tsickle_destructured_1","options__tsickle_destructured_2","__attributeToPropertyMap","p__tsickle_destructured_3","options__tsickle_destructured_4","attr","__attributeNameForProperty","finalizeStyles","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElementfinalizeStyles","flat","Infinity","reverse","unshift","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElement__attributeNameForProperty","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElement.prototype","__updatePromise","Promise","enableUpdating","_$changedProperties","__saveInstanceProperties","forEach","addController","controller","__controllers","hostConnected","instanceProperties","size","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$css$2dtag.adoptStyles","disconnectedCallback","hostDisconnected","attributeChangedCallback","_old","_$attributeToProperty","__propertyToAttribute","attrValue","propName","initial","newValue","initialValue","_$changeProperty","__enqueueUpdate","__reflectingProperties","squelchUpdateErrorsDuringLit2Migration","reject","performUpdate","scheduleUpdate","p__tsickle_destructured_5","value__tsickle_destructured_6","p__tsickle_destructured_7","options__tsickle_destructured_8","wrapped","shouldUpdate","hostUpdate","update","__markUpdated","hostUpdated","firstUpdated","updated","observedAttributes","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElementelementStyles","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElementshadowRootOptions","mode","reactiveElementVersions","goog.globalreactiveElementVersions","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElementapply","__childPart","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElement","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElementshadowRootOptions","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElementelementStyles","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElement__attributeNameForProperty","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElementfinalizeStyles","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElement__prepare","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElementgetPropertyOptions","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElementgetPropertyDescriptor","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElementcreateProperty","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElementaddInitializer","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElement.prototype","super","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.render","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElementfinalize","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.ReactiveElementfinalizecall","litElementVersions","module$exports$google3$cultural$integrations$chromeextensions$arttab$options$options$2ecss.styles","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$css$2dtag.css","getOrCreateClientId","clientId","crypto","randomUUID","sendGoogleAnalyticsEvent","params","PROD","body","postUrl","postData","response","validationResult","runtime","getManifest","version","i18n","getAcceptLanguages","eventName","verbose","includeTz","DEFAULT_ENGAGEMENT_TIME_MSEC","VALIDATE","GA_TEST_URL","GA_URL","method","headers","info","fetch","ok","error","status","json","exports.customElement","classOrTarget","context","define","exports.standardProperty","kind","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$reactive$2delement.litPropertyMetadataset","init","property","protoOrTarget","nameOrContext","proto","exports.desc","obj","decorate","query","selector","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$decorators$base.desc","module$exports$google3$third_party$javascript$material$web$checkbox$internal$checkbox$2dstyles.styles","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$directive.Directive","__part","__attributeIndex","_part","partInfo","ATTRIBUTE","Directive","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$directives$class$2dmap.ClassMapDirective","classInfo","filter","classInfo__tsickle_destructured_1","_previousClasses","_staticClasses","classList","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$directives$class$2dmap.classMap","exports.directive","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring$2dstyles.styles","ATTACHABLE_CONTROLLER","FOR_ATTRIBUTE_OBSERVER","MutationObserver","records","record","onControlChange","currentControl","observe","attributeFilter","module$exports$google3$third_party$javascript$material$web$internal$controller$attachable$2dcontroller.AttachableController","attach","control","setCurrentControl","detach","htmlFor","hasAttribute","getRootNode","parentElement","EVENTS","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElementapply","visible","inward","attachableController","bind","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring.FocusRing","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring.FocusRingshadowRootOptions","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring.FocusRingelementStyles","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring.FocusRing__attributeNameForProperty","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring.FocusRingfinalizeStyles","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring.FocusRing__prepare","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring.FocusRinggetPropertyOptions","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring.FocusRinggetPropertyDescriptor","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring.FocusRingcreateProperty","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring.FocusRingaddInitializer","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring.FocusRingfinalize","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring.FocusRing.prototype","HANDLED_BY_FOCUS_RING","matches","prev","next","changed","dispatchEvent","Event","module$exports$google3$third_party$javascript$tslib$tslib.__decorate","module$exports$google3$third_party$javascript$tslib$tslib.__metadata","module$exports$google3$third_party$javascript$material$web$focus$internal$focus$2dring.FocusRingapply","FocusRing","module$exports$google3$third_party$javascript$material$web$focus$md$2dfocus$2dring.MdFocusRing","module$exports$google3$third_party$javascript$material$web$focus$md$2dfocus$2dring.MdFocusRingstyles","module$exports$google3$third_party$javascript$lit$packages$reactive$2delement$src$decorators$custom$2delement.customElement","module$exports$google3$third_party$javascript$material$web$internal$aria$aria.ARIA_PROPERTIES","module$exports$google3$third_party$javascript$material$web$internal$aria$aria.ARIA_PROPERTIESmap","ariaPropertyToAttribute","replace","isActivationClick","currentTarget","composedPath","disabled","squelched","isSquelchingEvents","preventDefault","stopImmediatePropagation","squelchEventsForMicrotask","module$exports$google3$third_party$javascript$material$web$labs$behaviors$element$2dinternals.internals","privateInternals","mixinElementInternals","WithElementInternalsElement","$jscomp.globalObjectdefineProperty","attachInternals","module$exports$google3$third_party$javascript$material$web$labs$behaviors$constraint$2dvalidation.createValidator","module$exports$google3$third_party$javascript$material$web$labs$behaviors$constraint$2dvalidation.getValidityAnchor","privateValidator","privateSyncValidity","privateCustomValidationMessage","mixinConstraintValidation","ConstraintValidationElement","_a","checkValidity","reportValidity","setCustomValidity","getValidity","getCurrentState","prevState","equals","currentValidity","computeValidity","validity","validationMessage","copy","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","nonCustomValidationMessage","setValidity","willValidate","module$exports$google3$third_party$javascript$material$web$labs$behaviors$form$2dassociated.getFormValue","module$exports$google3$third_party$javascript$material$web$labs$behaviors$form$2dassociated.getFormState","mixinFormAssociated","FormAssociatedElement","setFormValue","formDisabledCallback","form","labels","formAssociated","module$exports$google3$third_party$javascript$material$web$labs$behaviors$validators$validator.Validatorapply","Validator","module$exports$google3$third_party$javascript$material$web$labs$behaviors$validators$checkbox$2dvalidator.CheckboxValidator","module$exports$google3$third_party$javascript$material$web$labs$behaviors$validators$validator.Validator","checkboxControl","checked","required","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple$2dstyles.styles","FORCED_COLORS","matchMedia","hovered","pressed","rippleSize","rippleScale","initialSize","INACTIVE","checkBoundsAfterContextMenu","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple.Ripple","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple.RippleshadowRootOptions","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple.RippleelementStyles","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple.Ripple__attributeNameForProperty","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple.RipplefinalizeStyles","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple.Ripple__prepare","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple.RipplegetPropertyOptions","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple.RipplegetPropertyDescriptor","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple.RipplecreateProperty","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple.RippleaddInitializer","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple.Ripplefinalize","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple.Ripple.prototype","module$exports$google3$third_party$javascript$lit$packages$lit$2dhtml$src$lit$2dhtml.html","classes","changedProps","handlePointerdown","shouldReactToEvent","rippleStartEvent","pointerType","WAITING_FOR_CLICK","startPressAnimation","inBounds","TOUCH_DELAY","resolve","setTimeout","TOUCH_DELAY_MS","HOLDING","handleClick","endPressAnimation","positionEvent","mdRoot","growAnimation","cancel","determineRippleSize","getBoundingClientRect","height","width","maxDim","softEdgeSize","SOFT_EDGE_CONTAINER_RATIO","SOFT_EDGE_MINIMUM_SIZE","INITIAL_ORIGIN_SCALE","maxRadius","sqrt","hypotenuse","PADDING","getTranslationCoordinates","PointerEvent","scrollX","scrollY","x","pointerEvent","pageX","left","y","pageY","top","startPoint","animate","transform","pseudoElement","PRESS_PSEUDO","duration","PRESS_GROW_MS","easing","STANDARD","ANIMATION_FILL","animation","pressAnimationPlayState","currentTime","to","MINIMUM_PRESS_MS","isPrimary","pointerId","isPrimaryButton","buttons","bottom","right","handleContextmenu","handlePointercancel","handlePointerenter","handlePointerleave","handlePointerup","module$exports$google3$third_party$javascript$material$web$ripple$internal$ripple.Rippleapply","Ripple","module$exports$google3$third_party$javascript$material$web$ripple$ripple.MdRipple","module$exports$google3$third_party$javascript$material$web$ripple$ripple.MdRipplestyles","checkboxBaseClass","indeterminate","prevChecked","prevDisabled","prevIndeterminate","input","focus","MouseEvent","bubbles","module$exports$google3$third_party$javascript$material$web$checkbox$internal$checkbox.Checkbox","isChecked","isIndeterminate","containerClasses","ariaLabel","ariaInvalid","handleInput","handleChange","composed","stopPropagation","dispatched","formResetCallback","formStateRestoreCallback","requestUpdateOnAriaChange","ARIA_PROPERTIES","ariaProperty","module$exports$google3$third_party$javascript$material$web$checkbox$internal$checkbox.CheckboxshadowRootOptions","delegatesFocus","module$exports$google3$third_party$javascript$material$web$checkbox$internal$checkbox.Checkboxapply","Checkbox","module$exports$google3$third_party$javascript$material$web$checkbox$checkbox.MdCheckbox","module$exports$google3$third_party$javascript$material$web$checkbox$checkbox.MdCheckboxstyles","module$exports$google3$third_party$javascript$material$web$divider$internal$divider$2dstyles.styles","inset","insetStart","insetEnd","module$exports$google3$third_party$javascript$material$web$divider$internal$divider.Divider","module$exports$google3$third_party$javascript$material$web$divider$internal$divider.DividershadowRootOptions","module$exports$google3$third_party$javascript$material$web$divider$internal$divider.DividerelementStyles","module$exports$google3$third_party$javascript$material$web$divider$internal$divider.Divider__attributeNameForProperty","module$exports$google3$third_party$javascript$material$web$divider$internal$divider.DividerfinalizeStyles","module$exports$google3$third_party$javascript$material$web$divider$internal$divider.Divider__prepare","module$exports$google3$third_party$javascript$material$web$divider$internal$divider.DividergetPropertyOptions","module$exports$google3$third_party$javascript$material$web$divider$internal$divider.DividergetPropertyDescriptor","module$exports$google3$third_party$javascript$material$web$divider$internal$divider.DividercreateProperty","module$exports$google3$third_party$javascript$material$web$divider$internal$divider.DivideraddInitializer","module$exports$google3$third_party$javascript$material$web$divider$internal$divider.Dividerfinalize","module$exports$google3$third_party$javascript$material$web$divider$internal$divider.Dividerapply","Divider","module$exports$google3$third_party$javascript$material$web$divider$divider.MdDivider","module$exports$google3$third_party$javascript$material$web$divider$divider.MdDividerstyles","module$exports$google3$third_party$javascript$material$web$radio$internal$radio$2dstyles.styles","module$exports$google3$third_party$javascript$material$web$labs$behaviors$focusable.isFocusable","privateIsFocusable","externalTabIndex","isUpdatingTabIndex","updateTabIndex","module$exports$google3$third_party$javascript$material$web$labs$behaviors$validators$radio$2dvalidator.RadioValidator","states","radioElement","isRequired","prevGroup","nextGroup","focused","root","handleFocusIn","this.handleFocusIn","updateTabIndices","handleFocusOut","this.handleFocusOut","handleKeyDown","this.handleKeyDown","isDown","isUp","isLeft","isRight","siblings","controls","nextIndex","forwards","getComputedStyle","direction","hostIndex","sibling","tabIndex","blur","module$exports$google3$third_party$javascript$material$web$radio$internal$single$2dselection$2dcontroller.SingleSelectionController","uncheckSiblings","checkedSibling","find","focusable","CHECKED","maskId","radioBaseClass","mixinFocusable","FocusableElement","_b","_c","internalTabIndex","computedTabIndex","selectionController","role","handleKeydown","module$exports$google3$third_party$javascript$material$web$radio$internal$radio.Radio","ariaChecked","defaultPrevented","InputEvent","click","wasChecked","module$exports$google3$third_party$javascript$material$web$radio$internal$radio.Radioapply","Radio","module$exports$google3$third_party$javascript$material$web$radio$radio.MdRadio","module$exports$google3$third_party$javascript$material$web$radio$radio.MdRadiostyles","module$exports$google3$third_party$javascript$lit$packages$lit$2delement$src$lit$2delement.LitElementcall","isLoading","turnoverAlways","appsButtonShown","defaultNewTabButtonShown","topSitesButtonShown","initialLoadTasks","buildElement","getMessage","TURNOVER_ALWAYS","APPS_BUTTON_HIDDEN","DEFAULT_NEWTAB_BUTTON_HIDDEN","TOP_SITES_BUTTON_HIDDEN","syncUserSettings","storedSettings","module$exports$google3$cultural$integrations$chromeextensions$arttab$options$options.ArtTabOptions","module$exports$google3$cultural$integrations$chromeextensions$arttab$options$options.ArtTabOptionsstyles"]
}
